ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_std.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_ConfigReg,"ax",%progbits
  19              		.align	1
  20              		.global	USBFS_ConfigReg
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_ConfigReg, %function
  24              	USBFS_ConfigReg:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_std.c"
   1:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/USBFS_std.c **** * File Name: USBFS_std.c
   3:.\Generated_Source\PSoC5/USBFS_std.c **** * Version 2.60
   4:.\Generated_Source\PSoC5/USBFS_std.c **** *
   5:.\Generated_Source\PSoC5/USBFS_std.c **** * Description:
   6:.\Generated_Source\PSoC5/USBFS_std.c **** *  USB Standard request handler.
   7:.\Generated_Source\PSoC5/USBFS_std.c **** *
   8:.\Generated_Source\PSoC5/USBFS_std.c **** * Note:
   9:.\Generated_Source\PSoC5/USBFS_std.c **** *
  10:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/USBFS_std.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/USBFS_std.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/USBFS_std.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/USBFS_std.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/USBFS_std.c **** 
  17:.\Generated_Source\PSoC5/USBFS_std.c **** #include "USBFS.h"
  18:.\Generated_Source\PSoC5/USBFS_std.c **** #include "USBFS_cdc.h"
  19:.\Generated_Source\PSoC5/USBFS_std.c **** #include "USBFS_pvt.h"
  20:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_MIDI_STREAMING) 
  21:.\Generated_Source\PSoC5/USBFS_std.c ****     #include "USBFS_midi.h"
  22:.\Generated_Source\PSoC5/USBFS_std.c **** #endif /* End USBFS_ENABLE_MIDI_STREAMING*/
  23:.\Generated_Source\PSoC5/USBFS_std.c **** 
  24:.\Generated_Source\PSoC5/USBFS_std.c **** 
  25:.\Generated_Source\PSoC5/USBFS_std.c **** /***************************************
  26:.\Generated_Source\PSoC5/USBFS_std.c **** *   Static data allocation
  27:.\Generated_Source\PSoC5/USBFS_std.c **** ***************************************/
  28:.\Generated_Source\PSoC5/USBFS_std.c **** 
  29:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_FWSN_STRING)
  30:.\Generated_Source\PSoC5/USBFS_std.c ****     static volatile uint8 *USBFS_fwSerialNumberStringDescriptor;
  31:.\Generated_Source\PSoC5/USBFS_std.c ****     static volatile uint8 USBFS_snStringConfirm = USBFS_FALSE;
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_std.c **** #endif  /* USBFS_ENABLE_FWSN_STRING */
  33:.\Generated_Source\PSoC5/USBFS_std.c **** 
  34:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_FWSN_STRING)
  35:.\Generated_Source\PSoC5/USBFS_std.c **** 
  36:.\Generated_Source\PSoC5/USBFS_std.c **** 
  37:.\Generated_Source\PSoC5/USBFS_std.c ****     /*******************************************************************************
  38:.\Generated_Source\PSoC5/USBFS_std.c ****     * Function Name: USBFS_SerialNumString
  39:.\Generated_Source\PSoC5/USBFS_std.c ****     ********************************************************************************
  40:.\Generated_Source\PSoC5/USBFS_std.c ****     *
  41:.\Generated_Source\PSoC5/USBFS_std.c ****     * Summary:
  42:.\Generated_Source\PSoC5/USBFS_std.c ****     *  Application firmware may supply the source of the USB device descriptors
  43:.\Generated_Source\PSoC5/USBFS_std.c ****     *  serial number string during runtime.
  44:.\Generated_Source\PSoC5/USBFS_std.c ****     *
  45:.\Generated_Source\PSoC5/USBFS_std.c ****     * Parameters:
  46:.\Generated_Source\PSoC5/USBFS_std.c ****     *  snString:  pointer to string.
  47:.\Generated_Source\PSoC5/USBFS_std.c ****     *
  48:.\Generated_Source\PSoC5/USBFS_std.c ****     * Return:
  49:.\Generated_Source\PSoC5/USBFS_std.c ****     *  None.
  50:.\Generated_Source\PSoC5/USBFS_std.c ****     *
  51:.\Generated_Source\PSoC5/USBFS_std.c ****     * Reentrant:
  52:.\Generated_Source\PSoC5/USBFS_std.c ****     *  No.
  53:.\Generated_Source\PSoC5/USBFS_std.c ****     *
  54:.\Generated_Source\PSoC5/USBFS_std.c ****     *******************************************************************************/
  55:.\Generated_Source\PSoC5/USBFS_std.c ****     void  USBFS_SerialNumString(uint8 snString[]) 
  56:.\Generated_Source\PSoC5/USBFS_std.c ****     {
  57:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_snStringConfirm = USBFS_FALSE;
  58:.\Generated_Source\PSoC5/USBFS_std.c ****         if(snString != NULL)
  59:.\Generated_Source\PSoC5/USBFS_std.c ****         {
  60:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_fwSerialNumberStringDescriptor = snString;
  61:.\Generated_Source\PSoC5/USBFS_std.c ****             /* Check descriptor validation */
  62:.\Generated_Source\PSoC5/USBFS_std.c ****             if( (snString[0u] > 1u ) && (snString[1u] == USBFS_DESCR_STRING) )
  63:.\Generated_Source\PSoC5/USBFS_std.c ****             {
  64:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_snStringConfirm = USBFS_TRUE;
  65:.\Generated_Source\PSoC5/USBFS_std.c ****             }
  66:.\Generated_Source\PSoC5/USBFS_std.c ****         }
  67:.\Generated_Source\PSoC5/USBFS_std.c ****     }
  68:.\Generated_Source\PSoC5/USBFS_std.c **** 
  69:.\Generated_Source\PSoC5/USBFS_std.c **** #endif  /* USBFS_ENABLE_FWSN_STRING */
  70:.\Generated_Source\PSoC5/USBFS_std.c **** 
  71:.\Generated_Source\PSoC5/USBFS_std.c **** 
  72:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
  73:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_HandleStandardRqst
  74:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
  75:.\Generated_Source\PSoC5/USBFS_std.c **** *
  76:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
  77:.\Generated_Source\PSoC5/USBFS_std.c **** *  This Routine dispatches standard requests
  78:.\Generated_Source\PSoC5/USBFS_std.c **** *
  79:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
  80:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
  81:.\Generated_Source\PSoC5/USBFS_std.c **** *
  82:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
  83:.\Generated_Source\PSoC5/USBFS_std.c **** *  TRUE if request handled.
  84:.\Generated_Source\PSoC5/USBFS_std.c **** *
  85:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
  86:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
  87:.\Generated_Source\PSoC5/USBFS_std.c **** *
  88:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 3


  89:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_HandleStandardRqst(void) 
  90:.\Generated_Source\PSoC5/USBFS_std.c **** {
  91:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_FALSE;
  92:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 interfaceNumber;
  93:.\Generated_Source\PSoC5/USBFS_std.c ****     #if defined(USBFS_ENABLE_STRINGS)
  94:.\Generated_Source\PSoC5/USBFS_std.c ****         volatile uint8 *pStr = 0u;
  95:.\Generated_Source\PSoC5/USBFS_std.c ****         #if defined(USBFS_ENABLE_DESCRIPTOR_STRINGS)
  96:.\Generated_Source\PSoC5/USBFS_std.c ****             uint8 nStr;
  97:.\Generated_Source\PSoC5/USBFS_std.c ****             uint8 descrLength;
  98:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* USBFS_ENABLE_DESCRIPTOR_STRINGS */
  99:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* USBFS_ENABLE_STRINGS */
 100:.\Generated_Source\PSoC5/USBFS_std.c ****     static volatile uint8 USBFS_tBuffer[USBFS_STATUS_LENGTH_MAX];
 101:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_LUT CYCODE *pTmp;
 102:.\Generated_Source\PSoC5/USBFS_std.c ****     USBFS_currentTD.count = 0u;
 103:.\Generated_Source\PSoC5/USBFS_std.c **** 
 104:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_DIR_MASK) == USBFS_RQST_DIR_D2H)
 105:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 106:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Control Read */
 107:.\Generated_Source\PSoC5/USBFS_std.c ****         switch (CY_GET_REG8(USBFS_bRequest))
 108:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 109:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_DESCRIPTOR:
 110:.\Generated_Source\PSoC5/USBFS_std.c ****                 if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_DEVICE)
 111:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 112:.\Generated_Source\PSoC5/USBFS_std.c ****                     pTmp = USBFS_GetDeviceTablePtr();
 113:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 114:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.count = USBFS_DEVICE_DESCR_LENGTH;
 115:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled  = USBFS_InitControlRead();
 116:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 117:.\Generated_Source\PSoC5/USBFS_std.c ****                 else if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_CONFIG)
 118:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 119:.\Generated_Source\PSoC5/USBFS_std.c ****                     pTmp = USBFS_GetConfigTablePtr(CY_GET_REG8(USBFS_wValueLo));
 120:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 121:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.count = ((uint16)(USBFS_currentTD.pData)[ \
 122:.\Generated_Source\PSoC5/USBFS_std.c ****                                       USBFS_CONFIG_DESCR_TOTAL_LENGTH_HI] << 8u) | \
 123:.\Generated_Source\PSoC5/USBFS_std.c ****                                      (USBFS_currentTD.pData)[USBFS_CONFIG_DESCR_TOTAL_LENGTH_LOW];
 124:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled  = USBFS_InitControlRead();
 125:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 126:.\Generated_Source\PSoC5/USBFS_std.c ****                 #if defined(USBFS_ENABLE_STRINGS)
 127:.\Generated_Source\PSoC5/USBFS_std.c ****                 else if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_STRING)
 128:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 129:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Descriptor Strings*/
 130:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if defined(USBFS_ENABLE_DESCRIPTOR_STRINGS)
 131:.\Generated_Source\PSoC5/USBFS_std.c ****                         nStr = 0u;
 132:.\Generated_Source\PSoC5/USBFS_std.c ****                         pStr = (volatile uint8 *)&USBFS_STRING_DESCRIPTORS[0u];
 133:.\Generated_Source\PSoC5/USBFS_std.c ****                         while ( (CY_GET_REG8(USBFS_wValueLo) > nStr) && (*pStr != 0u) )
 134:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 135:.\Generated_Source\PSoC5/USBFS_std.c ****                             /* Read descriptor length from 1st byte */
 136:.\Generated_Source\PSoC5/USBFS_std.c ****                             descrLength = *pStr;
 137:.\Generated_Source\PSoC5/USBFS_std.c ****                             /* Move to next string descriptor */
 138:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = &pStr[descrLength];
 139:.\Generated_Source\PSoC5/USBFS_std.c ****                             nStr++;
 140:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 141:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif /* End USBFS_ENABLE_DESCRIPTOR_STRINGS */
 142:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Microsoft OS String*/
 143:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if defined(USBFS_ENABLE_MSOS_STRING)
 144:.\Generated_Source\PSoC5/USBFS_std.c ****                         if( CY_GET_REG8(USBFS_wValueLo) == USBFS_STRING_MSOS )
 145:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 4


 146:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = (volatile uint8 *)&USBFS_MSOS_DESCRIPTOR[0u];
 147:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 148:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif /* End USBFS_ENABLE_MSOS_STRING*/
 149:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* SN string */
 150:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if defined(USBFS_ENABLE_SN_STRING)
 151:.\Generated_Source\PSoC5/USBFS_std.c ****                         if( (CY_GET_REG8(USBFS_wValueLo) != 0u) &&
 152:.\Generated_Source\PSoC5/USBFS_std.c ****                             (CY_GET_REG8(USBFS_wValueLo) ==
 153:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_DEVICE0_DESCR[USBFS_DEVICE_DESCR_SN_SHIFT]) )
 154:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 155:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = (volatile uint8 *)&USBFS_SN_STRING_DESCRIPTOR[0u];
 156:.\Generated_Source\PSoC5/USBFS_std.c ****                             #if defined(USBFS_ENABLE_FWSN_STRING)
 157:.\Generated_Source\PSoC5/USBFS_std.c ****                                 if(USBFS_snStringConfirm != USBFS_FALSE)
 158:.\Generated_Source\PSoC5/USBFS_std.c ****                                 {
 159:.\Generated_Source\PSoC5/USBFS_std.c ****                                     pStr = USBFS_fwSerialNumberStringDescriptor;
 160:.\Generated_Source\PSoC5/USBFS_std.c ****                                 }
 161:.\Generated_Source\PSoC5/USBFS_std.c ****                             #endif  /* USBFS_ENABLE_FWSN_STRING */
 162:.\Generated_Source\PSoC5/USBFS_std.c ****                             #if defined(USBFS_ENABLE_IDSN_STRING)
 163:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* Read DIE ID and generate string descriptor in RAM */
 164:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_ReadDieID(USBFS_idSerialNumberStringDescriptor);
 165:.\Generated_Source\PSoC5/USBFS_std.c ****                                 pStr = USBFS_idSerialNumberStringDescriptor;
 166:.\Generated_Source\PSoC5/USBFS_std.c ****                             #endif    /* End USBFS_ENABLE_IDSN_STRING */
 167:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 168:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif    /* End USBFS_ENABLE_SN_STRING */
 169:.\Generated_Source\PSoC5/USBFS_std.c ****                     if (*pStr != 0u)
 170:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 171:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = *pStr;
 172:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = pStr;
 173:.\Generated_Source\PSoC5/USBFS_std.c ****                         requestHandled  = USBFS_InitControlRead();
 174:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 175:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 176:.\Generated_Source\PSoC5/USBFS_std.c ****                 #endif /* End USBFS_ENABLE_STRINGS */
 177:.\Generated_Source\PSoC5/USBFS_std.c ****                 else
 178:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 179:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled = USBFS_DispatchClassRqst();
 180:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 181:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 182:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_STATUS:
 183:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK))
 184:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 185:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_EP:
 186:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_EP_STATUS_LENGTH;
 187:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0u] = USBFS_EP[ \
 188:.\Generated_Source\PSoC5/USBFS_std.c ****                                         CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED].hwEpState;
 189:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[1u] = 0u;
 190:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = &USBFS_tBuffer[0u];
 191:.\Generated_Source\PSoC5/USBFS_std.c ****                         requestHandled  = USBFS_InitControlRead();
 192:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 193:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_DEV:
 194:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_DEVICE_STATUS_LENGTH;
 195:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0u] = USBFS_deviceStatus;
 196:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[1u] = 0u;
 197:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = &USBFS_tBuffer[0u];
 198:.\Generated_Source\PSoC5/USBFS_std.c ****                         requestHandled  = USBFS_InitControlRead();
 199:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 200:.\Generated_Source\PSoC5/USBFS_std.c ****                     default:    /* requestHandled is initialized as FALSE by default */
 201:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 202:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 5


 203:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 204:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_CONFIGURATION:
 205:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.count = 1u;
 206:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.pData = (volatile uint8 *)&USBFS_configuration;
 207:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled  = USBFS_InitControlRead();
 208:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 209:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_INTERFACE:
 210:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.count = 1u;
 211:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.pData = (volatile uint8 *)&USBFS_interfaceSetting[ \
 212:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                             CY_GET_REG8(USBFS_wInde
 213:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled  = USBFS_InitControlRead();
 214:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 215:.\Generated_Source\PSoC5/USBFS_std.c ****             default: /* requestHandled is initialized as FALSE by default */
 216:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 217:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 218:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 219:.\Generated_Source\PSoC5/USBFS_std.c ****     else {
 220:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Control Write */
 221:.\Generated_Source\PSoC5/USBFS_std.c ****         switch (CY_GET_REG8(USBFS_bRequest))
 222:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 223:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_ADDRESS:
 224:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_deviceAddress = CY_GET_REG8(USBFS_wValueLo);
 225:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled = USBFS_InitNoDataControlTransfer();
 226:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 227:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_CONFIGURATION:
 228:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configuration = CY_GET_REG8(USBFS_wValueLo);
 229:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configurationChanged = USBFS_TRUE;
 230:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_Config(USBFS_TRUE);
 231:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled = USBFS_InitNoDataControlTransfer();
 232:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 233:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_INTERFACE:
 234:.\Generated_Source\PSoC5/USBFS_std.c ****                 if (USBFS_ValidateAlternateSetting() != 0u)
 235:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 236:.\Generated_Source\PSoC5/USBFS_std.c ****                     interfaceNumber = CY_GET_REG8(USBFS_wIndexLo);
 237:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceNumber = interfaceNumber;
 238:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_configurationChanged = USBFS_TRUE;
 239:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if ((USBFS_EP_MA == USBFS__MA_DYNAMIC) && \
 240:.\Generated_Source\PSoC5/USBFS_std.c ****                          (USBFS_EP_MM == USBFS__EP_MANUAL) )
 241:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_Config(USBFS_FALSE);
 242:.\Generated_Source\PSoC5/USBFS_std.c ****                     #else
 243:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_ConfigAltChanged();
 244:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif /* End (USBFS_EP_MA == USBFS__MA_DYNAMIC) */
 245:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Update handled Alt setting changes status */
 246:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceSetting_last[interfaceNumber] =
 247:.\Generated_Source\PSoC5/USBFS_std.c ****                          USBFS_interfaceSetting[interfaceNumber];
 248:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled = USBFS_InitNoDataControlTransfer();
 249:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 250:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 251:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_CLEAR_FEATURE:
 252:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch (CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK)
 253:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 254:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_EP:
 255:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_ENDPOINT_HALT)
 256:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 257:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_ClearEndpointHalt();
 258:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 259:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 6


 260:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_DEV:
 261:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Clear device REMOTE_WAKEUP */
 262:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_DEVICE_REMOTE_WAKEUP)
 263:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 264:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_deviceStatus &= (uint8)~USBFS_DEVICE_STATUS_REMOTE_WAKEUP;
 265:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 266:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 267:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 268:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_IFC:
 269:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Validate interfaceNumber */
 270:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wIndexLo) < USBFS_MAX_INTERFACES_NUMBER)
 271:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 272:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_interfaceStatus[CY_GET_REG8(USBFS_wIndexLo)] &=
 273:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 (uint8)~(CY_GET_REG8(USBFS_wValueLo
 274:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 275:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 276:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 277:.\Generated_Source\PSoC5/USBFS_std.c ****                     default:    /* requestHandled is initialized as FALSE by default */
 278:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 279:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 280:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 281:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_FEATURE:
 282:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch (CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK)
 283:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 284:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_EP:
 285:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_ENDPOINT_HALT)
 286:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 287:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_SetEndpointHalt();
 288:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 289:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 290:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_DEV:
 291:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Set device REMOTE_WAKEUP */
 292:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_DEVICE_REMOTE_WAKEUP)
 293:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 294:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_deviceStatus |= USBFS_DEVICE_STATUS_REMOTE_WAKEUP;
 295:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 296:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 297:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 298:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_IFC:
 299:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Validate interfaceNumber */
 300:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wIndexLo) < USBFS_MAX_INTERFACES_NUMBER)
 301:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 302:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_interfaceStatus[CY_GET_REG8(USBFS_wIndexLo)] &=
 303:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 (uint8)~(CY_GET_REG8(USBFS_wValueLo
 304:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 305:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 306:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 307:.\Generated_Source\PSoC5/USBFS_std.c ****                     default:    /* requestHandled is initialized as FALSE by default */
 308:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 309:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 310:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 311:.\Generated_Source\PSoC5/USBFS_std.c ****             default:    /* requestHandled is initialized as FALSE by default */
 312:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 313:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 314:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 315:.\Generated_Source\PSoC5/USBFS_std.c ****     return(requestHandled);
 316:.\Generated_Source\PSoC5/USBFS_std.c **** }
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 7


 317:.\Generated_Source\PSoC5/USBFS_std.c **** 
 318:.\Generated_Source\PSoC5/USBFS_std.c **** 
 319:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_IDSN_STRING)
 320:.\Generated_Source\PSoC5/USBFS_std.c **** 
 321:.\Generated_Source\PSoC5/USBFS_std.c ****     /***************************************************************************
 322:.\Generated_Source\PSoC5/USBFS_std.c ****     * Function Name: USBFS_ReadDieID
 323:.\Generated_Source\PSoC5/USBFS_std.c ****     ****************************************************************************
 324:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 325:.\Generated_Source\PSoC5/USBFS_std.c ****     * Summary:
 326:.\Generated_Source\PSoC5/USBFS_std.c ****     *  This routine read Die ID and generate Serial Number string descriptor.
 327:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 328:.\Generated_Source\PSoC5/USBFS_std.c ****     * Parameters:
 329:.\Generated_Source\PSoC5/USBFS_std.c ****     *  descr:  pointer on string descriptor.
 330:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 331:.\Generated_Source\PSoC5/USBFS_std.c ****     * Return:
 332:.\Generated_Source\PSoC5/USBFS_std.c ****     *  None.
 333:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 334:.\Generated_Source\PSoC5/USBFS_std.c ****     * Reentrant:
 335:.\Generated_Source\PSoC5/USBFS_std.c ****     *  No.
 336:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 337:.\Generated_Source\PSoC5/USBFS_std.c ****     ***************************************************************************/
 338:.\Generated_Source\PSoC5/USBFS_std.c ****     void USBFS_ReadDieID(uint8 descr[]) 
 339:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 340:.\Generated_Source\PSoC5/USBFS_std.c ****         uint8 i;
 341:.\Generated_Source\PSoC5/USBFS_std.c ****         uint8 j = 0u;
 342:.\Generated_Source\PSoC5/USBFS_std.c ****         uint8 value;
 343:.\Generated_Source\PSoC5/USBFS_std.c ****         const char8 CYCODE hex[16u] = "0123456789ABCDEF";
 344:.\Generated_Source\PSoC5/USBFS_std.c **** 
 345:.\Generated_Source\PSoC5/USBFS_std.c **** 
 346:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Check descriptor validation */
 347:.\Generated_Source\PSoC5/USBFS_std.c ****         if( descr != NULL)
 348:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 349:.\Generated_Source\PSoC5/USBFS_std.c ****             descr[0u] = USBFS_IDSN_DESCR_LENGTH;
 350:.\Generated_Source\PSoC5/USBFS_std.c ****             descr[1u] = USBFS_DESCR_STRING;
 351:.\Generated_Source\PSoC5/USBFS_std.c **** 
 352:.\Generated_Source\PSoC5/USBFS_std.c ****             /* fill descriptor */
 353:.\Generated_Source\PSoC5/USBFS_std.c ****             for(i = 2u; i < USBFS_IDSN_DESCR_LENGTH; i += 4u)
 354:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 355:.\Generated_Source\PSoC5/USBFS_std.c ****                 value = CY_GET_XTND_REG8((void CYFAR *)(USBFS_DIE_ID + j));
 356:.\Generated_Source\PSoC5/USBFS_std.c ****                 j++;
 357:.\Generated_Source\PSoC5/USBFS_std.c ****                 descr[i] = (uint8)hex[value >> 4u];
 358:.\Generated_Source\PSoC5/USBFS_std.c ****                 descr[i + 2u] = (uint8)hex[value & 0x0Fu];
 359:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 360:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 361:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 362:.\Generated_Source\PSoC5/USBFS_std.c **** 
 363:.\Generated_Source\PSoC5/USBFS_std.c **** #endif /* End USBFS_ENABLE_IDSN_STRING */
 364:.\Generated_Source\PSoC5/USBFS_std.c **** 
 365:.\Generated_Source\PSoC5/USBFS_std.c **** 
 366:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ConfigReg
 368:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/USBFS_std.c **** *
 370:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 371:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine configures hardware registers from the variables.
 372:.\Generated_Source\PSoC5/USBFS_std.c **** *  It is called from USBFS_Config() function and from RestoreConfig
 373:.\Generated_Source\PSoC5/USBFS_std.c **** *  after Wakeup.
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 8


 374:.\Generated_Source\PSoC5/USBFS_std.c **** *
 375:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 376:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 377:.\Generated_Source\PSoC5/USBFS_std.c **** *
 378:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 379:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 380:.\Generated_Source\PSoC5/USBFS_std.c **** *
 381:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 382:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigReg(void) 
 383:.\Generated_Source\PSoC5/USBFS_std.c **** {
  27              		.loc 1 383 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 384:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep;
 385:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 i;
 386:.\Generated_Source\PSoC5/USBFS_std.c ****     #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 387:.\Generated_Source\PSoC5/USBFS_std.c ****         uint8 ep_type = 0u;
 388:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 389:.\Generated_Source\PSoC5/USBFS_std.c **** 
 390:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Set the endpoint buffer addresses */
 391:.\Generated_Source\PSoC5/USBFS_std.c ****     ep = USBFS_EP1;
  38              		.loc 1 391 0
  39 0002 0122     		movs	r2, #1
  40              	.LVL1:
  41              	.L2:
 382:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigReg(void) 
  42              		.loc 1 382 0 discriminator 1
  43 0004 02F10F03 		add	r3, r2, #15
  44 0008 1801     		lsls	r0, r3, #4
 392:.\Generated_Source\PSoC5/USBFS_std.c ****     for (i = 0u; i < 0x80u; i+= 0x10u)
  45              		.loc 1 392 0 discriminator 1
  46 000a 092A     		cmp	r2, #9
 382:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigReg(void) 
  47              		.loc 1 382 0 discriminator 1
  48 000c C3B2     		uxtb	r3, r0
  49              	.LVL2:
  50              		.loc 1 392 0 discriminator 1
  51 000e 3BD0     		beq	.L9
  52              	.L6:
 393:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 394:.\Generated_Source\PSoC5/USBFS_std.c ****         CY_SET_REG8((reg8 *)(USBFS_ARB_EP1_CFG_IND + i), USBFS_ARB_EPX_CFG_CRC_BYPASS |
 395:.\Generated_Source\PSoC5/USBFS_std.c ****                                                           USBFS_ARB_EPX_CFG_RESET);
 396:.\Generated_Source\PSoC5/USBFS_std.c **** 
 397:.\Generated_Source\PSoC5/USBFS_std.c ****         #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 398:.\Generated_Source\PSoC5/USBFS_std.c ****             /* Enable all Arbiter EP Interrupts : err, buf under, buf over, dma gnt(mode2 only), in
 399:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_EP1_INT_EN_IND + i), USBFS_ARB_EPX_INT_MASK);
 400:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 401:.\Generated_Source\PSoC5/USBFS_std.c **** 
 402:.\Generated_Source\PSoC5/USBFS_std.c ****         if(USBFS_EP[ep].epMode != USBFS_MODE_DISABLE)
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 9


  53              		.loc 1 402 0
  54 0010 1F49     		ldr	r1, .L10
 394:.\Generated_Source\PSoC5/USBFS_std.c ****         CY_SET_REG8((reg8 *)(USBFS_ARB_EP1_CFG_IND + i), USBFS_ARB_EPX_CFG_CRC_BYPASS |
  55              		.loc 1 394 0
  56 0012 03F18044 		add	r4, r3, #1073741824
  57 0016 0C20     		movs	r0, #12
  58              	.LVL3:
  59 0018 04F5C145 		add	r5, r4, #24704
  60              		.loc 1 402 0
  61 001c 00FB0214 		mla	r4, r0, r2, r1
 394:.\Generated_Source\PSoC5/USBFS_std.c ****         CY_SET_REG8((reg8 *)(USBFS_ARB_EP1_CFG_IND + i), USBFS_ARB_EPX_CFG_CRC_BYPASS |
  62              		.loc 1 394 0
  63 0020 2870     		strb	r0, [r5, #0]
  64 0022 1C49     		ldr	r1, .L10+4
  65              		.loc 1 402 0
  66 0024 6579     		ldrb	r5, [r4, #5]	@ zero_extendqisi2
  67 0026 5918     		adds	r1, r3, r1
  68 0028 25B1     		cbz	r5, .L3
 403:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 404:.\Generated_Source\PSoC5/USBFS_std.c ****             if((USBFS_EP[ep].addr & USBFS_DIR_IN) != 0u )
  69              		.loc 1 404 0
  70 002a 2479     		ldrb	r4, [r4, #4]	@ zero_extendqisi2
  71 002c 2406     		lsls	r4, r4, #24
 405:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 406:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + i), USBFS_MODE_NAK_IN);
 407:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 408:.\Generated_Source\PSoC5/USBFS_std.c ****             else
 409:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 410:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + i), USBFS_MODE_NAK_OUT);
  72              		.loc 1 410 0
  73 002e 58BF     		it	pl
  74 0030 0820     		movpl	r0, #8
  75 0032 00E0     		b	.L7
  76              	.L3:
 411:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Prepare EP type mask for automatic memory allocation */
 412:.\Generated_Source\PSoC5/USBFS_std.c ****                 #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 413:.\Generated_Source\PSoC5/USBFS_std.c ****                     ep_type |= (uint8)(0x01u << (ep - USBFS_EP1));
 414:.\Generated_Source\PSoC5/USBFS_std.c ****                 #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 415:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 416:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 417:.\Generated_Source\PSoC5/USBFS_std.c ****         else
 418:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 419:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + i), USBFS_MODE_STALL_DATA_EP);
  77              		.loc 1 419 0
  78 0034 8020     		movs	r0, #128
  79              	.L7:
  80 0036 0870     		strb	r0, [r1, #0]
 420:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 421:.\Generated_Source\PSoC5/USBFS_std.c **** 
 422:.\Generated_Source\PSoC5/USBFS_std.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 423:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT0_IND + i),   USBFS_EP[ep].bufferSize >> 8u);
  81              		.loc 1 423 0
  82 0038 1749     		ldr	r1, .L10+8
  83 003a 0C24     		movs	r4, #12
  84 003c 5818     		adds	r0, r3, r1
  85 003e 1449     		ldr	r1, .L10
  86 0040 04FB0211 		mla	r1, r4, r2, r1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 10


  87 0044 0C89     		ldrh	r4, [r1, #8]
 424:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT1_IND + i),   USBFS_EP[ep].bufferSize & 0xFFu);
 425:.\Generated_Source\PSoC5/USBFS_std.c **** 
 426:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_IND + i),     USBFS_EP[ep].buffOffset & 0xFFu);
 427:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_MSB_IND + i), USBFS_EP[ep].buffOffset >> 8u);
 428:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_IND + i),     USBFS_EP[ep].buffOffset & 0xFFu);
 429:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_MSB_IND + i), USBFS_EP[ep].buffOffset >> 8u);
 430:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
 431:.\Generated_Source\PSoC5/USBFS_std.c **** 
 432:.\Generated_Source\PSoC5/USBFS_std.c ****         ep++;
  88              		.loc 1 432 0
  89 0046 0132     		adds	r2, r2, #1
  90              	.LVL4:
 423:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT0_IND + i),   USBFS_EP[ep].bufferSize >> 8u);
  91              		.loc 1 423 0
  92 0048 C4F30724 		ubfx	r4, r4, #8, #8
  93 004c 0470     		strb	r4, [r0, #0]
 424:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT1_IND + i),   USBFS_EP[ep].bufferSize & 0xFFu);
  94              		.loc 1 424 0
  95 004e 0C89     		ldrh	r4, [r1, #8]
  96 0050 1248     		ldr	r0, .L10+12
  97 0052 E4B2     		uxtb	r4, r4
  98 0054 1818     		adds	r0, r3, r0
  99 0056 0470     		strb	r4, [r0, #0]
 426:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_IND + i),     USBFS_EP[ep].buffOffset & 0xFFu);
 100              		.loc 1 426 0
 101 0058 CC88     		ldrh	r4, [r1, #6]
 102 005a 1148     		ldr	r0, .L10+16
 103 005c E4B2     		uxtb	r4, r4
 104 005e 1818     		adds	r0, r3, r0
 105 0060 0470     		strb	r4, [r0, #0]
 427:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_MSB_IND + i), USBFS_EP[ep].buffOffset >> 8u);
 106              		.loc 1 427 0
 107 0062 CC88     		ldrh	r4, [r1, #6]
 108 0064 0F48     		ldr	r0, .L10+20
 109 0066 C4F30724 		ubfx	r4, r4, #8, #8
 110 006a 1818     		adds	r0, r3, r0
 111 006c 0470     		strb	r4, [r0, #0]
 428:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_IND + i),     USBFS_EP[ep].buffOffset & 0xFFu);
 112              		.loc 1 428 0
 113 006e CC88     		ldrh	r4, [r1, #6]
 114 0070 0D48     		ldr	r0, .L10+24
 115 0072 E4B2     		uxtb	r4, r4
 116 0074 1818     		adds	r0, r3, r0
 117 0076 0470     		strb	r4, [r0, #0]
 429:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_MSB_IND + i), USBFS_EP[ep].buffOffset >> 8u);
 118              		.loc 1 429 0
 119 0078 0C48     		ldr	r0, .L10+28
 120              		.loc 1 432 0
 121 007a D2B2     		uxtb	r2, r2
 122              	.LVL5:
 429:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_MSB_IND + i), USBFS_EP[ep].buffOffset >> 8u);
 123              		.loc 1 429 0
 124 007c 1818     		adds	r0, r3, r0
 125 007e CB88     		ldrh	r3, [r1, #6]
 126 0080 C3F30721 		ubfx	r1, r3, #8, #8
 127 0084 0170     		strb	r1, [r0, #0]
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 11


 128 0086 BDE7     		b	.L2
 129              	.LVL6:
 130              	.L9:
 433:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 434:.\Generated_Source\PSoC5/USBFS_std.c **** 
 435:.\Generated_Source\PSoC5/USBFS_std.c ****     #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 436:.\Generated_Source\PSoC5/USBFS_std.c ****          /* BUF_SIZE depend on DMA_THRESS value: 55-32 bytes  44-16 bytes 33-8 bytes 22-4 bytes 11-
 437:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_BUF_SIZE_REG = USBFS_DMA_BUF_SIZE;
 438:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_DMA_THRES_REG = USBFS_DMA_BYTES_PER_BURST;   /* DMA burst threshold */
 439:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_DMA_THRES_MSB_REG = 0u;
 440:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP_ACTIVE_REG = USBFS_ARB_INT_MASK;
 441:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP_TYPE_REG = ep_type;
 442:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Cfg_cmp bit set to 1 once configuration is complete. */
 443:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_ARB_CFG_REG = USBFS_ARB_CFG_AUTO_DMA | USBFS_ARB_CFG_AUTO_MEM |
 444:.\Generated_Source\PSoC5/USBFS_std.c ****                                        USBFS_ARB_CFG_CFG_CPM;
 445:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Cfg_cmp bit set to 0 during configuration of PFSUSB Registers. */
 446:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_ARB_CFG_REG = USBFS_ARB_CFG_AUTO_DMA | USBFS_ARB_CFG_AUTO_MEM;
 447:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 448:.\Generated_Source\PSoC5/USBFS_std.c **** 
 449:.\Generated_Source\PSoC5/USBFS_std.c ****     CY_SET_REG8(USBFS_SIE_EP_INT_EN_PTR, 0xFFu);
 131              		.loc 1 449 0
 132 0088 0949     		ldr	r1, .L10+32
 133 008a FF22     		movs	r2, #255
 134              	.LVL7:
 135 008c 0A70     		strb	r2, [r1, #0]
 136 008e 30BD     		pop	{r4, r5, pc}
 137              	.L11:
 138              		.align	2
 139              	.L10:
 140 0090 00000000 		.word	USBFS_EP
 141 0094 0E600040 		.word	1073766414
 142 0098 0C600040 		.word	1073766412
 143 009c 0D600040 		.word	1073766413
 144 00a0 86600040 		.word	1073766534
 145 00a4 87600040 		.word	1073766535
 146 00a8 84600040 		.word	1073766532
 147 00ac 85600040 		.word	1073766533
 148 00b0 0A600040 		.word	1073766410
 149              		.cfi_endproc
 150              	.LFE1:
 151              		.size	USBFS_ConfigReg, .-USBFS_ConfigReg
 152              		.section	.text.USBFS_GetConfigTablePtr,"ax",%progbits
 153              		.align	1
 154              		.global	USBFS_GetConfigTablePtr
 155              		.thumb
 156              		.thumb_func
 157              		.type	USBFS_GetConfigTablePtr, %function
 158              	USBFS_GetConfigTablePtr:
 159              	.LFB4:
 450:.\Generated_Source\PSoC5/USBFS_std.c **** }
 451:.\Generated_Source\PSoC5/USBFS_std.c **** 
 452:.\Generated_Source\PSoC5/USBFS_std.c **** 
 453:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 454:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_Config
 455:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 456:.\Generated_Source\PSoC5/USBFS_std.c **** *
 457:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 12


 458:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine configures endpoints for the entire configuration by scanning
 459:.\Generated_Source\PSoC5/USBFS_std.c **** *  the configuration descriptor.
 460:.\Generated_Source\PSoC5/USBFS_std.c **** *
 461:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 462:.\Generated_Source\PSoC5/USBFS_std.c **** *  clearAltSetting: It configures the bAlternateSetting 0 for each interface.
 463:.\Generated_Source\PSoC5/USBFS_std.c **** *
 464:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 465:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 466:.\Generated_Source\PSoC5/USBFS_std.c **** *
 467:.\Generated_Source\PSoC5/USBFS_std.c **** * USBFS_interfaceClass - Initialized class array for each interface.
 468:.\Generated_Source\PSoC5/USBFS_std.c **** *   It is used for handling Class specific requests depend on interface class.
 469:.\Generated_Source\PSoC5/USBFS_std.c **** *   Different classes in multiple Alternate settings does not supported.
 470:.\Generated_Source\PSoC5/USBFS_std.c **** *
 471:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 472:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 473:.\Generated_Source\PSoC5/USBFS_std.c **** *
 474:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_Config(uint8 clearAltSetting) 
 476:.\Generated_Source\PSoC5/USBFS_std.c **** {
 477:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep;
 478:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 cur_ep;
 479:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 i;
 480:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep_type;
 481:.\Generated_Source\PSoC5/USBFS_std.c ****     const uint8 *pDescr;
 482:.\Generated_Source\PSoC5/USBFS_std.c ****     #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 483:.\Generated_Source\PSoC5/USBFS_std.c ****         uint16 buffCount = 0u;
 484:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
 485:.\Generated_Source\PSoC5/USBFS_std.c **** 
 486:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_LUT CYCODE *pTmp;
 487:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_EP_SETTINGS_BLOCK CYCODE *pEP;
 488:.\Generated_Source\PSoC5/USBFS_std.c **** 
 489:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Clear all of the endpoints */
 490:.\Generated_Source\PSoC5/USBFS_std.c ****     for (ep = 0u; ep < USBFS_MAX_EP; ep++)
 491:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 492:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].attrib = 0u;
 493:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState = 0u;
 494:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 495:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 496:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epMode = USBFS_MODE_DISABLE;
 497:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].bufferSize = 0u;
 498:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].interface = 0u;
 499:.\Generated_Source\PSoC5/USBFS_std.c **** 
 500:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 501:.\Generated_Source\PSoC5/USBFS_std.c **** 
 502:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Clear Alternate settings for all interfaces */
 503:.\Generated_Source\PSoC5/USBFS_std.c ****     if(clearAltSetting != 0u)
 504:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 505:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 506:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 507:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting[i] = 0x00u;
 508:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting_last[i] = 0x00u;
 509:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 510:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 511:.\Generated_Source\PSoC5/USBFS_std.c **** 
 512:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Init Endpoints and Device Status if configured */
 513:.\Generated_Source\PSoC5/USBFS_std.c ****     if(USBFS_configuration > 0u)
 514:.\Generated_Source\PSoC5/USBFS_std.c ****     {
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 13


 515:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 516:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set Power status for current configuration */
 517:.\Generated_Source\PSoC5/USBFS_std.c ****         pDescr = (const uint8 *)pTmp->p_list;
 518:.\Generated_Source\PSoC5/USBFS_std.c ****         if((pDescr[USBFS_CONFIG_DESCR_ATTRIB] & USBFS_CONFIG_DESCR_ATTRIB_SELF_POWERED) != 0u)
 519:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 520:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_deviceStatus |=  USBFS_DEVICE_STATUS_SELF_POWERED;
 521:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 522:.\Generated_Source\PSoC5/USBFS_std.c ****         else
 523:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 524:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_deviceStatus &=  (uint8)~USBFS_DEVICE_STATUS_SELF_POWERED;
 525:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 526:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Move to next element */
 527:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = &pTmp[1u];
 528:.\Generated_Source\PSoC5/USBFS_std.c ****         ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 529:.\Generated_Source\PSoC5/USBFS_std.c **** 
 530:.\Generated_Source\PSoC5/USBFS_std.c ****         #if ((USBFS_EP_MA == USBFS__MA_DYNAMIC) && \
 531:.\Generated_Source\PSoC5/USBFS_std.c ****              (USBFS_EP_MM == USBFS__EP_MANUAL) )
 532:.\Generated_Source\PSoC5/USBFS_std.c ****             /* Configure for dynamic EP memory allocation */
 533:.\Generated_Source\PSoC5/USBFS_std.c ****             /* p_list points the endpoint setting table. */
 534:.\Generated_Source\PSoC5/USBFS_std.c ****             pEP = (T_USBFS_EP_SETTINGS_BLOCK *) pTmp->p_list;
 535:.\Generated_Source\PSoC5/USBFS_std.c ****             for (i = 0u; i < ep; i++)
 536:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 537:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Compare current Alternate setting with EP Alt*/
 538:.\Generated_Source\PSoC5/USBFS_std.c ****                 if(USBFS_interfaceSetting[pEP->interface] == pEP->altSetting)
 539:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 540:.\Generated_Source\PSoC5/USBFS_std.c ****                     cur_ep = pEP->addr & USBFS_DIR_UNUSED;
 541:.\Generated_Source\PSoC5/USBFS_std.c ****                     ep_type = pEP->attributes & USBFS_EP_TYPE_MASK;
 542:.\Generated_Source\PSoC5/USBFS_std.c ****                     if (pEP->addr & USBFS_DIR_IN)
 543:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 544:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* IN Endpoint */
 545:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].apiEpState = USBFS_EVENT_PENDING;
 546:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 547:.\Generated_Source\PSoC5/USBFS_std.c ****                                                         USBFS_MODE_ISO_IN : USBFS_MODE_ACK_IN;
 548:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if defined(USBFS_ENABLE_CDC_CLASS)
 549:.\Generated_Source\PSoC5/USBFS_std.c ****                             if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 550:.\Generated_Source\PSoC5/USBFS_std.c ****                                 (pEP->bMisc == USBFS_CLASS_CDC)) &&
 551:.\Generated_Source\PSoC5/USBFS_std.c ****                                 (ep_type != USBFS_EP_TYPE_INT))
 552:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 553:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_cdc_data_in_ep = cur_ep;
 554:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 555:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_CDC_CLASS*/
 556:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if ( defined(USBFS_ENABLE_MIDI_STREAMING) && \
 557:.\Generated_Source\PSoC5/USBFS_std.c ****                                              (USBFS_MIDI_IN_BUFF_SIZE > 0) )
 558:.\Generated_Source\PSoC5/USBFS_std.c ****                             if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 559:.\Generated_Source\PSoC5/USBFS_std.c ****                                (ep_type == USBFS_EP_TYPE_BULK))
 560:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 561:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_midi_in_ep = cur_ep;
 562:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 563:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 564:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 565:.\Generated_Source\PSoC5/USBFS_std.c ****                     else
 566:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 567:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* OUT Endpoint */
 568:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].apiEpState = USBFS_NO_EVENT_PENDING;
 569:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 570:.\Generated_Source\PSoC5/USBFS_std.c ****                                                     USBFS_MODE_ISO_OUT : USBFS_MODE_ACK_OUT;
 571:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if defined(USBFS_ENABLE_CDC_CLASS)
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 14


 572:.\Generated_Source\PSoC5/USBFS_std.c ****                             if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 573:.\Generated_Source\PSoC5/USBFS_std.c ****                                 (pEP->bMisc == USBFS_CLASS_CDC)) &&
 574:.\Generated_Source\PSoC5/USBFS_std.c ****                                 (ep_type != USBFS_EP_TYPE_INT))
 575:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 576:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_cdc_data_out_ep = cur_ep;
 577:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 578:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_CDC_CLASS*/
 579:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if ( defined(USBFS_ENABLE_MIDI_STREAMING) && \
 580:.\Generated_Source\PSoC5/USBFS_std.c ****                                      (USBFS_MIDI_OUT_BUFF_SIZE > 0) )
 581:.\Generated_Source\PSoC5/USBFS_std.c ****                             if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 582:.\Generated_Source\PSoC5/USBFS_std.c ****                                (ep_type == USBFS_EP_TYPE_BULK))
 583:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 584:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_midi_out_ep = cur_ep;
 585:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 586:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 587:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 588:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].bufferSize = pEP->bufferSize;
 589:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].addr = pEP->addr;
 590:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].attrib = pEP->attributes;
 591:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 592:.\Generated_Source\PSoC5/USBFS_std.c ****                 pEP = &pEP[1u];
 593:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 594:.\Generated_Source\PSoC5/USBFS_std.c ****         #else /* Config for static EP memory allocation  */
 595:.\Generated_Source\PSoC5/USBFS_std.c ****             for (i = USBFS_EP1; i < USBFS_MAX_EP; i++)
 596:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 597:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* p_list points the endpoint setting table. */
 598:.\Generated_Source\PSoC5/USBFS_std.c ****                 pEP = (const T_USBFS_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 599:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Find max length for each EP and select it (length could be different in differen
 600:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* but other settings should be correct with regards to Interface alt Setting */
 601:.\Generated_Source\PSoC5/USBFS_std.c ****                 for (cur_ep = 0u; cur_ep < ep; cur_ep++)
 602:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 603:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* EP count is equal to EP # in table and we found larger EP length than have b
 604:.\Generated_Source\PSoC5/USBFS_std.c ****                     if(i == (pEP->addr & USBFS_DIR_UNUSED))
 605:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 606:.\Generated_Source\PSoC5/USBFS_std.c ****                         if(USBFS_EP[i].bufferSize < pEP->bufferSize)
 607:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 608:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].bufferSize = pEP->bufferSize;
 609:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 610:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Compare current Alternate setting with EP Alt*/
 611:.\Generated_Source\PSoC5/USBFS_std.c ****                         if(USBFS_interfaceSetting[pEP->interface] == pEP->altSetting)
 612:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 613:.\Generated_Source\PSoC5/USBFS_std.c ****                             ep_type = pEP->attributes & USBFS_EP_TYPE_MASK;
 614:.\Generated_Source\PSoC5/USBFS_std.c ****                             if ((pEP->addr & USBFS_DIR_IN) != 0u)
 615:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 616:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* IN Endpoint */
 617:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].apiEpState = USBFS_EVENT_PENDING;
 618:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 619:.\Generated_Source\PSoC5/USBFS_std.c ****                                                         USBFS_MODE_ISO_IN : USBFS_MODE_ACK_IN;
 620:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* Find and init CDC IN endpoint number */
 621:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if defined(USBFS_ENABLE_CDC_CLASS)
 622:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 623:.\Generated_Source\PSoC5/USBFS_std.c ****                                         (pEP->bMisc == USBFS_CLASS_CDC)) &&
 624:.\Generated_Source\PSoC5/USBFS_std.c ****                                         (ep_type != USBFS_EP_TYPE_INT))
 625:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 626:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_cdc_data_in_ep = i;
 627:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 628:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_CDC_CLASS*/
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 15


 629:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if ( defined(USBFS_ENABLE_MIDI_STREAMING) && \
 630:.\Generated_Source\PSoC5/USBFS_std.c ****                                              (USBFS_MIDI_IN_BUFF_SIZE > 0) )
 631:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 632:.\Generated_Source\PSoC5/USBFS_std.c ****                                        (ep_type == USBFS_EP_TYPE_BULK))
 633:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 634:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_midi_in_ep = i;
 635:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 636:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 637:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 638:.\Generated_Source\PSoC5/USBFS_std.c ****                             else
 639:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 640:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* OUT Endpoint */
 641:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].apiEpState = USBFS_NO_EVENT_PENDING;
 642:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 643:.\Generated_Source\PSoC5/USBFS_std.c ****                                                     USBFS_MODE_ISO_OUT : USBFS_MODE_ACK_OUT;
 644:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* Find and init CDC IN endpoint number */
 645:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if defined(USBFS_ENABLE_CDC_CLASS)
 646:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 647:.\Generated_Source\PSoC5/USBFS_std.c ****                                         (pEP->bMisc == USBFS_CLASS_CDC)) &&
 648:.\Generated_Source\PSoC5/USBFS_std.c ****                                         (ep_type != USBFS_EP_TYPE_INT))
 649:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 650:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_cdc_data_out_ep = i;
 651:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 652:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_CDC_CLASS*/
 653:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if ( defined(USBFS_ENABLE_MIDI_STREAMING) && \
 654:.\Generated_Source\PSoC5/USBFS_std.c ****                                              (USBFS_MIDI_OUT_BUFF_SIZE > 0) )
 655:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 656:.\Generated_Source\PSoC5/USBFS_std.c ****                                        (ep_type == USBFS_EP_TYPE_BULK))
 657:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 658:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_midi_out_ep = i;
 659:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 660:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 661:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 662:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].addr = pEP->addr;
 663:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].attrib = pEP->attributes;
 664:.\Generated_Source\PSoC5/USBFS_std.c **** 
 665:.\Generated_Source\PSoC5/USBFS_std.c ****                             #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 666:.\Generated_Source\PSoC5/USBFS_std.c ****                                 break;      /* use first EP setting in Auto memory managment */
 667:.\Generated_Source\PSoC5/USBFS_std.c ****                             #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 668:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 669:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 670:.\Generated_Source\PSoC5/USBFS_std.c ****                     pEP = &pEP[1u];
 671:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 672:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 673:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* End (USBFS_EP_MA == USBFS__MA_DYNAMIC) */
 674:.\Generated_Source\PSoC5/USBFS_std.c **** 
 675:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Init class array for each interface and interface number for each EP.
 676:.\Generated_Source\PSoC5/USBFS_std.c ****         *  It is used for handling Class specific requests directed to either an
 677:.\Generated_Source\PSoC5/USBFS_std.c ****         *  interface or the endpoint.
 678:.\Generated_Source\PSoC5/USBFS_std.c ****         */
 679:.\Generated_Source\PSoC5/USBFS_std.c ****         /* p_list points the endpoint setting table. */
 680:.\Generated_Source\PSoC5/USBFS_std.c ****         pEP = (const T_USBFS_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 681:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 682:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 683:.\Generated_Source\PSoC5/USBFS_std.c ****             /* Configure interface number for each EP*/
 684:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_EP[pEP->addr & USBFS_DIR_UNUSED].interface = pEP->interface;
 685:.\Generated_Source\PSoC5/USBFS_std.c ****             pEP = &pEP[1u];
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 16


 686:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 687:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Init pointer on interface class table*/
 688:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceClass = USBFS_GetInterfaceClassTablePtr();
 689:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set the endpoint buffer addresses */
 690:.\Generated_Source\PSoC5/USBFS_std.c **** 
 691:.\Generated_Source\PSoC5/USBFS_std.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 692:.\Generated_Source\PSoC5/USBFS_std.c ****             for (ep = USBFS_EP1; ep < USBFS_MAX_EP; ep++)
 693:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 694:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[ep].buffOffset = buffCount;
 695:.\Generated_Source\PSoC5/USBFS_std.c ****                  buffCount += USBFS_EP[ep].bufferSize;
 696:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 697:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
 698:.\Generated_Source\PSoC5/USBFS_std.c **** 
 699:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Configure hardware registers */
 700:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_ConfigReg();
 701:.\Generated_Source\PSoC5/USBFS_std.c ****     } /* USBFS_configuration > 0 */
 702:.\Generated_Source\PSoC5/USBFS_std.c **** }
 703:.\Generated_Source\PSoC5/USBFS_std.c **** 
 704:.\Generated_Source\PSoC5/USBFS_std.c **** 
 705:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 706:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ConfigAltChanged
 707:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 708:.\Generated_Source\PSoC5/USBFS_std.c **** *
 709:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 710:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine update configuration for the required endpoints only.
 711:.\Generated_Source\PSoC5/USBFS_std.c **** *  It is called after SET_INTERFACE request when Static memory allocation used.
 712:.\Generated_Source\PSoC5/USBFS_std.c **** *
 713:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 714:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 715:.\Generated_Source\PSoC5/USBFS_std.c **** *
 716:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 717:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 718:.\Generated_Source\PSoC5/USBFS_std.c **** *
 719:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 720:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 721:.\Generated_Source\PSoC5/USBFS_std.c **** *
 722:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigAltChanged(void) 
 724:.\Generated_Source\PSoC5/USBFS_std.c **** {
 725:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep;
 726:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 cur_ep;
 727:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 i;
 728:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep_type;
 729:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ri;
 730:.\Generated_Source\PSoC5/USBFS_std.c **** 
 731:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_LUT CYCODE *pTmp;
 732:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_EP_SETTINGS_BLOCK CYCODE *pEP;
 733:.\Generated_Source\PSoC5/USBFS_std.c **** 
 734:.\Generated_Source\PSoC5/USBFS_std.c **** 
 735:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Init Endpoints and Device Status if configured */
 736:.\Generated_Source\PSoC5/USBFS_std.c ****     if(USBFS_configuration > 0u)
 737:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 738:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 739:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = &pTmp[1u];
 740:.\Generated_Source\PSoC5/USBFS_std.c ****         ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 741:.\Generated_Source\PSoC5/USBFS_std.c **** 
 742:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Do not touch EP which doesn't need reconfiguration */
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 17


 743:.\Generated_Source\PSoC5/USBFS_std.c ****         /* When Alt setting changed, the only required endpoints need to be reconfigured */
 744:.\Generated_Source\PSoC5/USBFS_std.c ****         /* p_list points the endpoint setting table. */
 745:.\Generated_Source\PSoC5/USBFS_std.c ****         pEP = (const T_USBFS_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 746:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 747:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 748:.\Generated_Source\PSoC5/USBFS_std.c ****             /*If Alt setting changed and new is same with EP Alt */
 749:.\Generated_Source\PSoC5/USBFS_std.c ****             if((USBFS_interfaceSetting[pEP->interface] !=
 750:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_interfaceSetting_last[pEP->interface] ) &&
 751:.\Generated_Source\PSoC5/USBFS_std.c ****                (USBFS_interfaceSetting[pEP->interface] == pEP->altSetting) &&
 752:.\Generated_Source\PSoC5/USBFS_std.c ****                (pEP->interface == CY_GET_REG8(USBFS_wIndexLo)))
 753:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 754:.\Generated_Source\PSoC5/USBFS_std.c ****                 cur_ep = pEP->addr & USBFS_DIR_UNUSED;
 755:.\Generated_Source\PSoC5/USBFS_std.c ****                 ri = ((cur_ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 756:.\Generated_Source\PSoC5/USBFS_std.c ****                 ep_type = pEP->attributes & USBFS_EP_TYPE_MASK;
 757:.\Generated_Source\PSoC5/USBFS_std.c ****                 if ((pEP->addr & USBFS_DIR_IN) != 0u)
 758:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 759:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* IN Endpoint */
 760:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].apiEpState = USBFS_EVENT_PENDING;
 761:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 762:.\Generated_Source\PSoC5/USBFS_std.c ****                                                 USBFS_MODE_ISO_IN : USBFS_MODE_ACK_IN;
 763:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 764:.\Generated_Source\PSoC5/USBFS_std.c ****                 else
 765:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 766:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* OUT Endpoint */
 767:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].apiEpState = USBFS_NO_EVENT_PENDING;
 768:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 769:.\Generated_Source\PSoC5/USBFS_std.c ****                                                 USBFS_MODE_ISO_OUT : USBFS_MODE_ACK_OUT;
 770:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 771:.\Generated_Source\PSoC5/USBFS_std.c ****                  /* Change the SIE mode for the selected EP to NAK ALL */
 772:.\Generated_Source\PSoC5/USBFS_std.c ****                  CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_IN_OUT);
 773:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].bufferSize = pEP->bufferSize;
 774:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].addr = pEP->addr;
 775:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].attrib = pEP->attributes;
 776:.\Generated_Source\PSoC5/USBFS_std.c **** 
 777:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Clear the data toggle */
 778:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].epToggle = 0u;
 779:.\Generated_Source\PSoC5/USBFS_std.c **** 
 780:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Dynamic reconfiguration for mode 3 transfer */
 781:.\Generated_Source\PSoC5/USBFS_std.c ****             #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 782:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* In_data_rdy for selected EP should be set to 0 */
 783:.\Generated_Source\PSoC5/USBFS_std.c ****                 * (reg8 *)(USBFS_ARB_EP1_CFG_IND + ri) &= (uint8)~USBFS_ARB_EPX_CFG_IN_DATA_RDY;
 784:.\Generated_Source\PSoC5/USBFS_std.c **** 
 785:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* write the EP number for which reconfiguration is required */
 786:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_DYN_RECONFIG_REG = (cur_ep - USBFS_EP1) <<
 787:.\Generated_Source\PSoC5/USBFS_std.c ****                                                     USBFS_DYN_RECONFIG_EP_SHIFT;
 788:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Set the dyn_config_en bit in dynamic reconfiguration register */
 789:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_DYN_RECONFIG_REG |= USBFS_DYN_RECONFIG_ENABLE;
 790:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* wait for the dyn_config_rdy bit to set by the block,
 791:.\Generated_Source\PSoC5/USBFS_std.c ****                 *  this bit will be set to 1 when block is ready for reconfiguration.
 792:.\Generated_Source\PSoC5/USBFS_std.c ****                 */
 793:.\Generated_Source\PSoC5/USBFS_std.c ****                 while((USBFS_DYN_RECONFIG_REG & USBFS_DYN_RECONFIG_RDY_STS) == 0u)
 794:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 795:.\Generated_Source\PSoC5/USBFS_std.c ****                     ;
 796:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 797:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Once dyn_config_rdy bit is set, FW can change the EP configuration. */
 798:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Change EP Type with new direction */
 799:.\Generated_Source\PSoC5/USBFS_std.c ****                 if((pEP->addr & USBFS_DIR_IN) == 0u)
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 18


 800:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 801:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP_TYPE_REG |= (uint8)(0x01u << (cur_ep - USBFS_EP1));
 802:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 803:.\Generated_Source\PSoC5/USBFS_std.c ****                 else
 804:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 805:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP_TYPE_REG &= (uint8)~(uint8)(0x01u << (cur_ep - USBFS_EP1));
 806:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 807:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* dynamic reconfiguration enable bit cleared, pointers and control/status
 808:.\Generated_Source\PSoC5/USBFS_std.c ****                 *  signals for the selected EP is cleared/re-initialized on negative edge
 809:.\Generated_Source\PSoC5/USBFS_std.c ****                 *  of dynamic reconfiguration enable bit).
 810:.\Generated_Source\PSoC5/USBFS_std.c ****                 */
 811:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_DYN_RECONFIG_REG &= (uint8)~USBFS_DYN_RECONFIG_ENABLE;
 812:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* The main loop has to re-enable DMA and OUT endpoint*/
 813:.\Generated_Source\PSoC5/USBFS_std.c ****             #else
 814:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT0_IND + ri),
 815:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 USBFS_EP[cur_ep].bufferSize >> 8u);
 816:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT1_IND + ri),
 817:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 USBFS_EP[cur_ep].bufferSize & 0xFFu
 818:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_IND + ri),
 819:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 USBFS_EP[cur_ep].buffOffset & 0xFFu
 820:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_MSB_IND + ri),
 821:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 USBFS_EP[cur_ep].buffOffset >> 8u);
 822:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_IND + ri),
 823:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 USBFS_EP[cur_ep].buffOffset & 0xFFu
 824:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_MSB_IND + ri),
 825:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 USBFS_EP[cur_ep].buffOffset >> 8u);
 826:.\Generated_Source\PSoC5/USBFS_std.c ****             #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 827:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 828:.\Generated_Source\PSoC5/USBFS_std.c ****             /* Get next EP element */
 829:.\Generated_Source\PSoC5/USBFS_std.c ****             pEP = &pEP[1u];
 830:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 831:.\Generated_Source\PSoC5/USBFS_std.c ****     }   /* USBFS_configuration > 0 */
 832:.\Generated_Source\PSoC5/USBFS_std.c **** }
 833:.\Generated_Source\PSoC5/USBFS_std.c **** 
 834:.\Generated_Source\PSoC5/USBFS_std.c **** 
 835:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 836:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_GetConfigTablePtr
 837:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 838:.\Generated_Source\PSoC5/USBFS_std.c **** *
 839:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 840:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine returns a pointer a configuration table entry
 841:.\Generated_Source\PSoC5/USBFS_std.c **** *
 842:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 843:.\Generated_Source\PSoC5/USBFS_std.c **** *  c:  Configuration Index
 844:.\Generated_Source\PSoC5/USBFS_std.c **** *
 845:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 846:.\Generated_Source\PSoC5/USBFS_std.c **** *  Device Descriptor pointer.
 847:.\Generated_Source\PSoC5/USBFS_std.c **** *
 848:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC5/USBFS_std.c **** const T_USBFS_LUT CYCODE *USBFS_GetConfigTablePtr(uint8 c)
 850:.\Generated_Source\PSoC5/USBFS_std.c ****                                                         
 851:.\Generated_Source\PSoC5/USBFS_std.c **** {
 160              		.loc 1 851 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 19


 165              	.LVL8:
 852:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Device Table */
 853:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_LUT CYCODE *pTmp;
 854:.\Generated_Source\PSoC5/USBFS_std.c **** 
 855:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp = (const T_USBFS_LUT CYCODE *) USBFS_TABLE[USBFS_device].p_list;
 166              		.loc 1 855 0
 167 0000 044B     		ldr	r3, .L13
 168 0002 0549     		ldr	r1, .L13+4
 169 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 170              	.LVL9:
 171 0006 01EBC203 		add	r3, r1, r2, lsl #3
 856:.\Generated_Source\PSoC5/USBFS_std.c **** 
 857:.\Generated_Source\PSoC5/USBFS_std.c ****     /* The first entry points to the Device Descriptor,
 858:.\Generated_Source\PSoC5/USBFS_std.c ****     *  the rest configuration entries.
 859:.\Generated_Source\PSoC5/USBFS_std.c **** 	*/
 860:.\Generated_Source\PSoC5/USBFS_std.c ****     return( (const T_USBFS_LUT CYCODE *) pTmp[c + 1u].p_list );
 172              		.loc 1 860 0
 173 000a 5A68     		ldr	r2, [r3, #4]
 174              	.LVL10:
 175 000c 02EBC000 		add	r0, r2, r0, lsl #3
 176              	.LVL11:
 861:.\Generated_Source\PSoC5/USBFS_std.c **** }
 177              		.loc 1 861 0
 178 0010 C068     		ldr	r0, [r0, #12]
 179 0012 7047     		bx	lr
 180              	.L14:
 181              		.align	2
 182              	.L13:
 183 0014 00000000 		.word	USBFS_device
 184 0018 00000000 		.word	USBFS_TABLE
 185              		.cfi_endproc
 186              	.LFE4:
 187              		.size	USBFS_GetConfigTablePtr, .-USBFS_GetConfigTablePtr
 188              		.section	.text.USBFS_ConfigAltChanged,"ax",%progbits
 189              		.align	1
 190              		.global	USBFS_ConfigAltChanged
 191              		.thumb
 192              		.thumb_func
 193              		.type	USBFS_ConfigAltChanged, %function
 194              	USBFS_ConfigAltChanged:
 195              	.LFB3:
 724:.\Generated_Source\PSoC5/USBFS_std.c **** {
 196              		.loc 1 724 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 201              	.LCFI1:
 202              		.cfi_def_cfa_offset 24
 203              		.cfi_offset 3, -24
 204              		.cfi_offset 4, -20
 205              		.cfi_offset 5, -16
 206              		.cfi_offset 6, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 736:.\Generated_Source\PSoC5/USBFS_std.c ****     if(USBFS_configuration > 0u)
 209              		.loc 1 736 0
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 20


 210 0002 3D4B     		ldr	r3, .L28
 211 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 212 0006 002A     		cmp	r2, #0
 213 0008 74D0     		beq	.L15
 738:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 214              		.loc 1 738 0
 215 000a 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 216 000c 411E     		subs	r1, r0, #1
 217 000e C8B2     		uxtb	r0, r1
 218 0010 FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 219              	.LVL12:
 723:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigAltChanged(void) 
 220              		.loc 1 723 0
 221 0014 C368     		ldr	r3, [r0, #12]
 740:.\Generated_Source\PSoC5/USBFS_std.c ****         ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 222              		.loc 1 740 0
 223 0016 057A     		ldrb	r5, [r0, #8]	@ zero_extendqisi2
 224              	.LVL13:
 723:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigAltChanged(void) 
 225              		.loc 1 723 0
 226 0018 0833     		adds	r3, r3, #8
 227              	.LVL14:
 746:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 228              		.loc 1 746 0
 229 001a 0020     		movs	r0, #0
 230              	.LVL15:
 231              	.L17:
 746:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 232              		.loc 1 746 0 is_stmt 0 discriminator 1
 233 001c A842     		cmp	r0, r5
 234 001e 69D0     		beq	.L15
 235              	.L23:
 749:.\Generated_Source\PSoC5/USBFS_std.c ****             if((USBFS_interfaceSetting[pEP->interface] !=
 236              		.loc 1 749 0 is_stmt 1
 237 0020 13F8082C 		ldrb	r2, [r3, #-8]	@ zero_extendqisi2
 238 0024 3549     		ldr	r1, .L28+4
 750:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_interfaceSetting_last[pEP->interface] ) &&
 239              		.loc 1 750 0
 240 0026 364C     		ldr	r4, .L28+8
 749:.\Generated_Source\PSoC5/USBFS_std.c ****             if((USBFS_interfaceSetting[pEP->interface] !=
 241              		.loc 1 749 0
 242 0028 8E5C     		ldrb	r6, [r1, r2]	@ zero_extendqisi2
 750:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_interfaceSetting_last[pEP->interface] ) &&
 243              		.loc 1 750 0
 244 002a A45C     		ldrb	r4, [r4, r2]	@ zero_extendqisi2
 749:.\Generated_Source\PSoC5/USBFS_std.c ****             if((USBFS_interfaceSetting[pEP->interface] !=
 245              		.loc 1 749 0
 246 002c A642     		cmp	r6, r4
 247 002e 5DD0     		beq	.L18
 751:.\Generated_Source\PSoC5/USBFS_std.c ****                (USBFS_interfaceSetting[pEP->interface] == pEP->altSetting) &&
 248              		.loc 1 751 0
 249 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 750:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_interfaceSetting_last[pEP->interface] ) &&
 250              		.loc 1 750 0
 251 0032 13F8074C 		ldrb	r4, [r3, #-7]	@ zero_extendqisi2
 252 0036 8C42     		cmp	r4, r1
 253 0038 58D1     		bne	.L18
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 21


 752:.\Generated_Source\PSoC5/USBFS_std.c ****                (pEP->interface == CY_GET_REG8(USBFS_wIndexLo)))
 254              		.loc 1 752 0
 255 003a 3249     		ldr	r1, .L28+12
 256 003c 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 751:.\Generated_Source\PSoC5/USBFS_std.c ****                (USBFS_interfaceSetting[pEP->interface] == pEP->altSetting) &&
 257              		.loc 1 751 0
 258 003e 8A42     		cmp	r2, r1
 259 0040 54D1     		bne	.L18
 754:.\Generated_Source\PSoC5/USBFS_std.c ****                 cur_ep = pEP->addr & USBFS_DIR_UNUSED;
 260              		.loc 1 754 0
 261 0042 13F8067C 		ldrb	r7, [r3, #-6]	@ zero_extendqisi2
 262 0046 07F07F02 		and	r2, r7, #127
 263              	.LVL16:
 755:.\Generated_Source\PSoC5/USBFS_std.c ****                 ri = ((cur_ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 264              		.loc 1 755 0
 265 004a 561E     		subs	r6, r2, #1
 266 004c 3401     		lsls	r4, r6, #4
 267 004e E1B2     		uxtb	r1, r4
 268              	.LVL17:
 756:.\Generated_Source\PSoC5/USBFS_std.c ****                 ep_type = pEP->attributes & USBFS_EP_TYPE_MASK;
 269              		.loc 1 756 0
 270 0050 13F8056C 		ldrb	r6, [r3, #-5]	@ zero_extendqisi2
 271 0054 2C4C     		ldr	r4, .L28+16
 272              	.LVL18:
 757:.\Generated_Source\PSoC5/USBFS_std.c ****                 if ((pEP->addr & USBFS_DIR_IN) != 0u)
 273              		.loc 1 757 0
 274 0056 17F0800F 		tst	r7, #128
 275 005a 4FF00C07 		mov	r7, #12
 756:.\Generated_Source\PSoC5/USBFS_std.c ****                 ep_type = pEP->attributes & USBFS_EP_TYPE_MASK;
 276              		.loc 1 756 0
 277 005e 06F00306 		and	r6, r6, #3
 278              	.LVL19:
 760:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].apiEpState = USBFS_EVENT_PENDING;
 279              		.loc 1 760 0
 280 0062 07FB0244 		mla	r4, r7, r2, r4
 757:.\Generated_Source\PSoC5/USBFS_std.c ****                 if ((pEP->addr & USBFS_DIR_IN) != 0u)
 281              		.loc 1 757 0
 282 0066 06D0     		beq	.L19
 760:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].apiEpState = USBFS_EVENT_PENDING;
 283              		.loc 1 760 0
 284 0068 0127     		movs	r7, #1
 285 006a 6770     		strb	r7, [r4, #1]
 761:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 286              		.loc 1 761 0
 287 006c BE42     		cmp	r6, r7
 288 006e 14BF     		ite	ne
 289 0070 0D26     		movne	r6, #13
 290 0072 0726     		moveq	r6, #7
 291              	.LVL20:
 292 0074 05E0     		b	.L27
 293              	.LVL21:
 294              	.L19:
 767:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].apiEpState = USBFS_NO_EVENT_PENDING;
 295              		.loc 1 767 0
 296 0076 0027     		movs	r7, #0
 297 0078 6770     		strb	r7, [r4, #1]
 768:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 22


 298              		.loc 1 768 0
 299 007a 012E     		cmp	r6, #1
 300 007c 14BF     		ite	ne
 301 007e 0926     		movne	r6, #9
 302 0080 0526     		moveq	r6, #5
 303              	.LVL22:
 304              	.L27:
 305 0082 6671     		strb	r6, [r4, #5]
 772:.\Generated_Source\PSoC5/USBFS_std.c ****                  CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_IN_OUT);
 306              		.loc 1 772 0
 307 0084 214C     		ldr	r4, .L28+20
 308 0086 0126     		movs	r6, #1
 309 0088 0F19     		adds	r7, r1, r4
 773:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].bufferSize = pEP->bufferSize;
 310              		.loc 1 773 0
 311 008a 0C24     		movs	r4, #12
 312 008c 5443     		muls	r4, r2, r4
 772:.\Generated_Source\PSoC5/USBFS_std.c ****                  CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_IN_OUT);
 313              		.loc 1 772 0
 314 008e 3E70     		strb	r6, [r7, #0]
 773:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].bufferSize = pEP->bufferSize;
 315              		.loc 1 773 0
 316 0090 1D4E     		ldr	r6, .L28+16
 317 0092 33F8047C 		ldrh	r7, [r3, #-4]
 318 0096 3219     		adds	r2, r6, r4
 319              	.LVL23:
 320 0098 1781     		strh	r7, [r2, #8]	@ movhi
 774:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].addr = pEP->addr;
 321              		.loc 1 774 0
 322 009a 13F8067C 		ldrb	r7, [r3, #-6]	@ zero_extendqisi2
 323 009e 1771     		strb	r7, [r2, #4]
 775:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].attrib = pEP->attributes;
 324              		.loc 1 775 0
 325 00a0 13F8057C 		ldrb	r7, [r3, #-5]	@ zero_extendqisi2
 326 00a4 3755     		strb	r7, [r6, r4]
 778:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].epToggle = 0u;
 327              		.loc 1 778 0
 328 00a6 0026     		movs	r6, #0
 329 00a8 D670     		strb	r6, [r2, #3]
 814:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT0_IND + ri),
 330              		.loc 1 814 0
 331 00aa 1689     		ldrh	r6, [r2, #8]
 332 00ac 184C     		ldr	r4, .L28+24
 333 00ae C6F30726 		ubfx	r6, r6, #8, #8
 334 00b2 0C19     		adds	r4, r1, r4
 335 00b4 2670     		strb	r6, [r4, #0]
 816:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT1_IND + ri),
 336              		.loc 1 816 0
 337 00b6 1689     		ldrh	r6, [r2, #8]
 338 00b8 164C     		ldr	r4, .L28+28
 339 00ba F6B2     		uxtb	r6, r6
 340 00bc 0C19     		adds	r4, r1, r4
 341 00be 2670     		strb	r6, [r4, #0]
 818:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_IND + ri),
 342              		.loc 1 818 0
 343 00c0 D688     		ldrh	r6, [r2, #6]
 344 00c2 154C     		ldr	r4, .L28+32
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 23


 345 00c4 F6B2     		uxtb	r6, r6
 346 00c6 0C19     		adds	r4, r1, r4
 347 00c8 2670     		strb	r6, [r4, #0]
 820:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_RA_MSB_IND + ri),
 348              		.loc 1 820 0
 349 00ca D688     		ldrh	r6, [r2, #6]
 350 00cc 134C     		ldr	r4, .L28+36
 351 00ce C6F30726 		ubfx	r6, r6, #8, #8
 352 00d2 0C19     		adds	r4, r1, r4
 353 00d4 2670     		strb	r6, [r4, #0]
 822:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_IND + ri),
 354              		.loc 1 822 0
 355 00d6 D688     		ldrh	r6, [r2, #6]
 356 00d8 114C     		ldr	r4, .L28+40
 357 00da F6B2     		uxtb	r6, r6
 358 00dc 0C19     		adds	r4, r1, r4
 359 00de 2670     		strb	r6, [r4, #0]
 824:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_RW1_WA_MSB_IND + ri),
 360              		.loc 1 824 0
 361 00e0 104C     		ldr	r4, .L28+44
 362 00e2 0C19     		adds	r4, r1, r4
 363 00e4 D188     		ldrh	r1, [r2, #6]
 364              	.LVL24:
 365 00e6 C1F30722 		ubfx	r2, r1, #8, #8
 366 00ea 2270     		strb	r2, [r4, #0]
 367              	.LVL25:
 368              	.L18:
 746:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 369              		.loc 1 746 0
 370 00ec 0130     		adds	r0, r0, #1
 371              	.LVL26:
 372 00ee C0B2     		uxtb	r0, r0
 373              	.LVL27:
 374 00f0 0833     		adds	r3, r3, #8
 375 00f2 93E7     		b	.L17
 376              	.LVL28:
 377              	.L15:
 378 00f4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 379              	.L29:
 380 00f6 00BF     		.align	2
 381              	.L28:
 382 00f8 00000000 		.word	USBFS_configuration
 383 00fc 00000000 		.word	USBFS_interfaceSetting
 384 0100 00000000 		.word	USBFS_interfaceSetting_last
 385 0104 04600040 		.word	1073766404
 386 0108 00000000 		.word	USBFS_EP
 387 010c 0E600040 		.word	1073766414
 388 0110 0C600040 		.word	1073766412
 389 0114 0D600040 		.word	1073766413
 390 0118 86600040 		.word	1073766534
 391 011c 87600040 		.word	1073766535
 392 0120 84600040 		.word	1073766532
 393 0124 85600040 		.word	1073766533
 394              		.cfi_endproc
 395              	.LFE3:
 396              		.size	USBFS_ConfigAltChanged, .-USBFS_ConfigAltChanged
 397              		.section	.text.USBFS_GetDeviceTablePtr,"ax",%progbits
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 24


 398              		.align	1
 399              		.global	USBFS_GetDeviceTablePtr
 400              		.thumb
 401              		.thumb_func
 402              		.type	USBFS_GetDeviceTablePtr, %function
 403              	USBFS_GetDeviceTablePtr:
 404              	.LFB5:
 862:.\Generated_Source\PSoC5/USBFS_std.c **** 
 863:.\Generated_Source\PSoC5/USBFS_std.c **** 
 864:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 865:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_GetDeviceTablePtr
 866:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 867:.\Generated_Source\PSoC5/USBFS_std.c **** *
 868:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 869:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine returns a pointer to the Device table
 870:.\Generated_Source\PSoC5/USBFS_std.c **** *
 871:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 872:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 873:.\Generated_Source\PSoC5/USBFS_std.c **** *
 874:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 875:.\Generated_Source\PSoC5/USBFS_std.c **** *  Device Table pointer
 876:.\Generated_Source\PSoC5/USBFS_std.c **** *
 877:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC5/USBFS_std.c **** const T_USBFS_LUT CYCODE *USBFS_GetDeviceTablePtr(void)
 879:.\Generated_Source\PSoC5/USBFS_std.c ****                                                             
 880:.\Generated_Source\PSoC5/USBFS_std.c **** {
 405              		.loc 1 880 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 0, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 881:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Device Table */
 882:.\Generated_Source\PSoC5/USBFS_std.c ****     return( (const T_USBFS_LUT CYCODE *) USBFS_TABLE[USBFS_device].p_list );
 410              		.loc 1 882 0
 411 0000 034B     		ldr	r3, .L31
 412 0002 0448     		ldr	r0, .L31+4
 413 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 414 0006 00EBC201 		add	r1, r0, r2, lsl #3
 883:.\Generated_Source\PSoC5/USBFS_std.c **** }
 415              		.loc 1 883 0
 416 000a 4868     		ldr	r0, [r1, #4]
 417 000c 7047     		bx	lr
 418              	.L32:
 419 000e 00BF     		.align	2
 420              	.L31:
 421 0010 00000000 		.word	USBFS_device
 422 0014 00000000 		.word	USBFS_TABLE
 423              		.cfi_endproc
 424              	.LFE5:
 425              		.size	USBFS_GetDeviceTablePtr, .-USBFS_GetDeviceTablePtr
 426              		.section	.text.USBFS_GetInterfaceClassTablePtr,"ax",%progbits
 427              		.align	1
 428              		.global	USBFS_GetInterfaceClassTablePtr
 429              		.thumb
 430              		.thumb_func
 431              		.type	USBFS_GetInterfaceClassTablePtr, %function
 432              	USBFS_GetInterfaceClassTablePtr:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 25


 433              	.LFB6:
 884:.\Generated_Source\PSoC5/USBFS_std.c **** 
 885:.\Generated_Source\PSoC5/USBFS_std.c **** 
 886:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 887:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USB_GetInterfaceClassTablePtr
 888:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 889:.\Generated_Source\PSoC5/USBFS_std.c **** *
 890:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 891:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine returns Interface Class table pointer, which contains
 892:.\Generated_Source\PSoC5/USBFS_std.c **** *  the relation between interface number and interface class.
 893:.\Generated_Source\PSoC5/USBFS_std.c **** *
 894:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 895:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 896:.\Generated_Source\PSoC5/USBFS_std.c **** *
 897:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 898:.\Generated_Source\PSoC5/USBFS_std.c **** *  Interface Class table pointer.
 899:.\Generated_Source\PSoC5/USBFS_std.c **** *
 900:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 901:.\Generated_Source\PSoC5/USBFS_std.c **** const uint8 CYCODE *USBFS_GetInterfaceClassTablePtr(void)
 902:.\Generated_Source\PSoC5/USBFS_std.c ****                                                         
 903:.\Generated_Source\PSoC5/USBFS_std.c **** {
 434              		.loc 1 903 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438 0000 08B5     		push	{r3, lr}
 439              	.LCFI2:
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 3, -8
 442              		.cfi_offset 14, -4
 904:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_LUT CYCODE *pTmp;
 905:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 currentInterfacesNum;
 906:.\Generated_Source\PSoC5/USBFS_std.c **** 
 907:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 443              		.loc 1 907 0
 444 0002 064B     		ldr	r3, .L34
 445 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 446 0006 411E     		subs	r1, r0, #1
 447 0008 C8B2     		uxtb	r0, r1
 448 000a FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 449              	.LVL29:
 908:.\Generated_Source\PSoC5/USBFS_std.c ****     currentInterfacesNum  = ((const uint8 *) pTmp->p_list)[USBFS_CONFIG_DESCR_NUM_INTERFACES];
 450              		.loc 1 908 0
 451 000e 4268     		ldr	r2, [r0, #4]
 909:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Third entry in the LUT starts the Interface Table pointers */
 910:.\Generated_Source\PSoC5/USBFS_std.c ****     /* The INTERFACE_CLASS table is located after all interfaces */
 911:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp = &pTmp[currentInterfacesNum + 2u];
 452              		.loc 1 911 0
 453 0010 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 454              	.LVL30:
 912:.\Generated_Source\PSoC5/USBFS_std.c ****     return( (const uint8 CYCODE *) pTmp->p_list );
 455              		.loc 1 912 0
 456 0012 00EBC300 		add	r0, r0, r3, lsl #3
 457              	.LVL31:
 913:.\Generated_Source\PSoC5/USBFS_std.c **** }
 458              		.loc 1 913 0
 459 0016 4069     		ldr	r0, [r0, #20]
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 26


 460 0018 08BD     		pop	{r3, pc}
 461              	.L35:
 462 001a 00BF     		.align	2
 463              	.L34:
 464 001c 00000000 		.word	USBFS_configuration
 465              		.cfi_endproc
 466              	.LFE6:
 467              		.size	USBFS_GetInterfaceClassTablePtr, .-USBFS_GetInterfaceClassTablePtr
 468              		.section	.text.USBFS_Config,"ax",%progbits
 469              		.align	1
 470              		.global	USBFS_Config
 471              		.thumb
 472              		.thumb_func
 473              		.type	USBFS_Config, %function
 474              	USBFS_Config:
 475              	.LFB2:
 476:.\Generated_Source\PSoC5/USBFS_std.c **** {
 476              		.loc 1 476 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              	.LVL32:
 481 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 482              	.LCFI3:
 483              		.cfi_def_cfa_offset 24
 484              		.cfi_offset 3, -24
 485              		.cfi_offset 4, -20
 486              		.cfi_offset 5, -16
 487              		.cfi_offset 6, -12
 488              		.cfi_offset 7, -8
 489              		.cfi_offset 14, -4
 476:.\Generated_Source\PSoC5/USBFS_std.c **** {
 490              		.loc 1 476 0
 491 0002 0021     		movs	r1, #0
 492              	.LVL33:
 493              	.L37:
 492:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].attrib = 0u;
 494              		.loc 1 492 0 discriminator 2
 495 0004 0C24     		movs	r4, #12
 496 0006 4C43     		muls	r4, r1, r4
 497 0008 514D     		ldr	r5, .L68
 498 000a 0131     		adds	r1, r1, #1
 499 000c 0023     		movs	r3, #0
 500 000e 2A19     		adds	r2, r5, r4
 490:.\Generated_Source\PSoC5/USBFS_std.c ****     for (ep = 0u; ep < USBFS_MAX_EP; ep++)
 501              		.loc 1 490 0 discriminator 2
 502 0010 0929     		cmp	r1, #9
 492:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].attrib = 0u;
 503              		.loc 1 492 0 discriminator 2
 504 0012 2B55     		strb	r3, [r5, r4]
 493:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState = 0u;
 505              		.loc 1 493 0 discriminator 2
 506 0014 9370     		strb	r3, [r2, #2]
 497:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].bufferSize = 0u;
 507              		.loc 1 497 0 discriminator 2
 508 0016 02F10804 		add	r4, r2, #8
 494:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 27


 509              		.loc 1 494 0 discriminator 2
 510 001a 5370     		strb	r3, [r2, #1]
 495:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 511              		.loc 1 495 0 discriminator 2
 512 001c D370     		strb	r3, [r2, #3]
 496:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epMode = USBFS_MODE_DISABLE;
 513              		.loc 1 496 0 discriminator 2
 514 001e 5371     		strb	r3, [r2, #5]
 497:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].bufferSize = 0u;
 515              		.loc 1 497 0 discriminator 2
 516 0020 1381     		strh	r3, [r2, #8]	@ movhi
 498:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].interface = 0u;
 517              		.loc 1 498 0 discriminator 2
 518 0022 9372     		strb	r3, [r2, #10]
 490:.\Generated_Source\PSoC5/USBFS_std.c ****     for (ep = 0u; ep < USBFS_MAX_EP; ep++)
 519              		.loc 1 490 0 discriminator 2
 520 0024 EED1     		bne	.L37
 503:.\Generated_Source\PSoC5/USBFS_std.c ****     if(clearAltSetting != 0u)
 521              		.loc 1 503 0
 522 0026 18B1     		cbz	r0, .L38
 507:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting[i] = 0x00u;
 523              		.loc 1 507 0 discriminator 2
 524 0028 4A48     		ldr	r0, .L68+4
 525              	.LVL34:
 508:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting_last[i] = 0x00u;
 526              		.loc 1 508 0 discriminator 2
 527 002a 4B4A     		ldr	r2, .L68+8
 507:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting[i] = 0x00u;
 528              		.loc 1 507 0 discriminator 2
 529 002c 0370     		strb	r3, [r0, #0]
 508:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting_last[i] = 0x00u;
 530              		.loc 1 508 0 discriminator 2
 531 002e 1370     		strb	r3, [r2, #0]
 532              	.LVL35:
 533              	.L38:
 513:.\Generated_Source\PSoC5/USBFS_std.c ****     if(USBFS_configuration > 0u)
 534              		.loc 1 513 0
 535 0030 4A4B     		ldr	r3, .L68+12
 536 0032 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 537 0034 0029     		cmp	r1, #0
 538 0036 00F08A80 		beq	.L36
 515:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 539              		.loc 1 515 0
 540 003a 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 541 003c 601E     		subs	r0, r4, #1
 542 003e C0B2     		uxtb	r0, r0
 543 0040 FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 544              	.LVL36:
 518:.\Generated_Source\PSoC5/USBFS_std.c ****         if((pDescr[USBFS_CONFIG_DESCR_ATTRIB] & USBFS_CONFIG_DESCR_ATTRIB_SELF_POWERED) != 0u)
 545              		.loc 1 518 0
 546 0044 4268     		ldr	r2, [r0, #4]
 547 0046 D379     		ldrb	r3, [r2, #7]	@ zero_extendqisi2
 548 0048 03F04001 		and	r1, r3, #64
 549 004c CCB2     		uxtb	r4, r1
 550 004e 444B     		ldr	r3, .L68+16
 551 0050 1CB1     		cbz	r4, .L40
 520:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_deviceStatus |=  USBFS_DEVICE_STATUS_SELF_POWERED;
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 28


 552              		.loc 1 520 0
 553 0052 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 554 0054 44F00101 		orr	r1, r4, #1
 555              	.LVL37:
 556 0058 02E0     		b	.L64
 557              	.L40:
 524:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_deviceStatus &=  (uint8)~USBFS_DEVICE_STATUS_SELF_POWERED;
 558              		.loc 1 524 0
 559 005a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 560 005c 02F0FE01 		and	r1, r2, #254
 561              	.L64:
 528:.\Generated_Source\PSoC5/USBFS_std.c ****         ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 562              		.loc 1 528 0
 563 0060 047A     		ldrb	r4, [r0, #8]	@ zero_extendqisi2
 564              	.LVL38:
 524:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_deviceStatus &=  (uint8)~USBFS_DEVICE_STATUS_SELF_POWERED;
 565              		.loc 1 524 0
 566 0062 1970     		strb	r1, [r3, #0]
 567              	.LVL39:
 528:.\Generated_Source\PSoC5/USBFS_std.c ****         ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 568              		.loc 1 528 0
 569 0064 0122     		movs	r2, #1
 570              	.LVL40:
 571              	.L52:
 475:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_Config(uint8 clearAltSetting) 
 572              		.loc 1 475 0
 573 0066 C368     		ldr	r3, [r0, #12]
 601:.\Generated_Source\PSoC5/USBFS_std.c ****                 for (cur_ep = 0u; cur_ep < ep; cur_ep++)
 574              		.loc 1 601 0
 575 0068 0021     		movs	r1, #0
 576              	.LVL41:
 475:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_Config(uint8 clearAltSetting) 
 577              		.loc 1 475 0
 578 006a 0833     		adds	r3, r3, #8
 579              	.LVL42:
 580              	.L42:
 601:.\Generated_Source\PSoC5/USBFS_std.c ****                 for (cur_ep = 0u; cur_ep < ep; cur_ep++)
 581              		.loc 1 601 0 discriminator 1
 582 006c A142     		cmp	r1, r4
 583 006e 43D0     		beq	.L66
 584              	.L51:
 604:.\Generated_Source\PSoC5/USBFS_std.c ****                     if(i == (pEP->addr & USBFS_DIR_UNUSED))
 585              		.loc 1 604 0
 586 0070 13F8065C 		ldrb	r5, [r3, #-6]	@ zero_extendqisi2
 587 0074 05F07F06 		and	r6, r5, #127
 588 0078 B242     		cmp	r2, r6
 589 007a 39D1     		bne	.L44
 606:.\Generated_Source\PSoC5/USBFS_std.c ****                         if(USBFS_EP[i].bufferSize < pEP->bufferSize)
 590              		.loc 1 606 0
 591 007c 344E     		ldr	r6, .L68
 592 007e 0C27     		movs	r7, #12
 593 0080 07FB0266 		mla	r6, r7, r2, r6
 594 0084 B6F808E0 		ldrh	lr, [r6, #8]
 595 0088 33F8047C 		ldrh	r7, [r3, #-4]
 596 008c 1FFA8EFC 		uxth	ip, lr
 597 0090 BC45     		cmp	ip, r7
 608:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].bufferSize = pEP->bufferSize;
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 29


 598              		.loc 1 608 0
 599 0092 38BF     		it	cc
 600 0094 3781     		strhcc	r7, [r6, #8]	@ movhi
 611:.\Generated_Source\PSoC5/USBFS_std.c ****                         if(USBFS_interfaceSetting[pEP->interface] == pEP->altSetting)
 601              		.loc 1 611 0
 602 0096 13F8086C 		ldrb	r6, [r3, #-8]	@ zero_extendqisi2
 603 009a 2E4F     		ldr	r7, .L68+4
 604 009c BE5D     		ldrb	r6, [r7, r6]	@ zero_extendqisi2
 605 009e 13F8077C 		ldrb	r7, [r3, #-7]	@ zero_extendqisi2
 606 00a2 B742     		cmp	r7, r6
 607 00a4 24D1     		bne	.L44
 613:.\Generated_Source\PSoC5/USBFS_std.c ****                             ep_type = pEP->attributes & USBFS_EP_TYPE_MASK;
 608              		.loc 1 613 0
 609 00a6 13F8056C 		ldrb	r6, [r3, #-5]	@ zero_extendqisi2
 614:.\Generated_Source\PSoC5/USBFS_std.c ****                             if ((pEP->addr & USBFS_DIR_IN) != 0u)
 610              		.loc 1 614 0
 611 00aa 15F0800F 		tst	r5, #128
 612 00ae 284D     		ldr	r5, .L68
 613 00b0 4FF00C07 		mov	r7, #12
 613:.\Generated_Source\PSoC5/USBFS_std.c ****                             ep_type = pEP->attributes & USBFS_EP_TYPE_MASK;
 614              		.loc 1 613 0
 615 00b4 06F00306 		and	r6, r6, #3
 616              	.LVL43:
 617:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].apiEpState = USBFS_EVENT_PENDING;
 617              		.loc 1 617 0
 618 00b8 07FB0255 		mla	r5, r7, r2, r5
 614:.\Generated_Source\PSoC5/USBFS_std.c ****                             if ((pEP->addr & USBFS_DIR_IN) != 0u)
 619              		.loc 1 614 0
 620 00bc 06D0     		beq	.L47
 617:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].apiEpState = USBFS_EVENT_PENDING;
 621              		.loc 1 617 0
 622 00be 0127     		movs	r7, #1
 623 00c0 6F70     		strb	r7, [r5, #1]
 618:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 624              		.loc 1 618 0
 625 00c2 BE42     		cmp	r6, r7
 626 00c4 14BF     		ite	ne
 627 00c6 0D26     		movne	r6, #13
 628 00c8 0726     		moveq	r6, #7
 629              	.LVL44:
 630 00ca 05E0     		b	.L65
 631              	.LVL45:
 632              	.L47:
 641:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].apiEpState = USBFS_NO_EVENT_PENDING;
 633              		.loc 1 641 0
 634 00cc 0027     		movs	r7, #0
 635 00ce 6F70     		strb	r7, [r5, #1]
 642:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].epMode = (ep_type == USBFS_EP_TYPE_ISOC) ?
 636              		.loc 1 642 0
 637 00d0 012E     		cmp	r6, #1
 638 00d2 14BF     		ite	ne
 639 00d4 0926     		movne	r6, #9
 640 00d6 0526     		moveq	r6, #5
 641              	.LVL46:
 642              	.L65:
 643 00d8 6E71     		strb	r6, [r5, #5]
 662:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].addr = pEP->addr;
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 30


 644              		.loc 1 662 0
 645 00da 0C25     		movs	r5, #12
 646 00dc 5543     		muls	r5, r2, r5
 647 00de 1C4E     		ldr	r6, .L68
 648 00e0 13F806EC 		ldrb	lr, [r3, #-6]	@ zero_extendqisi2
 649 00e4 7719     		adds	r7, r6, r5
 650 00e6 87F804E0 		strb	lr, [r7, #4]
 663:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].attrib = pEP->attributes;
 651              		.loc 1 663 0
 652 00ea 13F8057C 		ldrb	r7, [r3, #-5]	@ zero_extendqisi2
 653 00ee 7755     		strb	r7, [r6, r5]
 654              	.LVL47:
 655              	.L44:
 601:.\Generated_Source\PSoC5/USBFS_std.c ****                 for (cur_ep = 0u; cur_ep < ep; cur_ep++)
 656              		.loc 1 601 0
 657 00f0 0131     		adds	r1, r1, #1
 658              	.LVL48:
 659 00f2 C9B2     		uxtb	r1, r1
 660              	.LVL49:
 661 00f4 0833     		adds	r3, r3, #8
 662 00f6 B9E7     		b	.L42
 663              	.L66:
 664 00f8 0132     		adds	r2, r2, #1
 595:.\Generated_Source\PSoC5/USBFS_std.c ****             for (i = USBFS_EP1; i < USBFS_MAX_EP; i++)
 665              		.loc 1 595 0
 666 00fa 092A     		cmp	r2, #9
 667 00fc B3D1     		bne	.L52
 668              	.LVL50:
 669 00fe C368     		ldr	r3, [r0, #12]
 681:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 670              		.loc 1 681 0
 671 0100 0022     		movs	r2, #0
 672              	.LVL51:
 673              	.L53:
 674 0102 0833     		adds	r3, r3, #8
 681:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 675              		.loc 1 681 0 is_stmt 0 discriminator 1
 676 0104 A242     		cmp	r2, r4
 677 0106 0DD0     		beq	.L67
 678              	.L54:
 684:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_EP[pEP->addr & USBFS_DIR_UNUSED].interface = pEP->interface;
 679              		.loc 1 684 0 is_stmt 1 discriminator 2
 680 0108 13F8065C 		ldrb	r5, [r3, #-6]	@ zero_extendqisi2
 681 010c 0C26     		movs	r6, #12
 682 010e 05F07F01 		and	r1, r5, #127
 683 0112 0F4D     		ldr	r5, .L68
 684 0114 13F8080C 		ldrb	r0, [r3, #-8]	@ zero_extendqisi2
 685 0118 06FB0151 		mla	r1, r6, r1, r5
 681:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 686              		.loc 1 681 0 discriminator 2
 687 011c 0132     		adds	r2, r2, #1
 688              	.LVL52:
 684:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_EP[pEP->addr & USBFS_DIR_UNUSED].interface = pEP->interface;
 689              		.loc 1 684 0 discriminator 2
 690 011e 8872     		strb	r0, [r1, #10]
 681:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++)
 691              		.loc 1 681 0 discriminator 2
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 31


 692 0120 D2B2     		uxtb	r2, r2
 693              	.LVL53:
 694 0122 EEE7     		b	.L53
 695              	.L67:
 688:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceClass = USBFS_GetInterfaceClassTablePtr();
 696              		.loc 1 688 0
 697 0124 FFF7FEFF 		bl	USBFS_GetInterfaceClassTablePtr
 698              	.LVL54:
 699 0128 0E4B     		ldr	r3, .L68+20
 483:.\Generated_Source\PSoC5/USBFS_std.c ****         uint16 buffCount = 0u;
 700              		.loc 1 483 0
 701 012a 0022     		movs	r2, #0
 688:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceClass = USBFS_GetInterfaceClassTablePtr();
 702              		.loc 1 688 0
 703 012c 1860     		str	r0, [r3, #0]
 704              	.LVL55:
 705 012e 0123     		movs	r3, #1
 706              	.LVL56:
 707              	.L55:
 694:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[ep].buffOffset = buffCount;
 708              		.loc 1 694 0 discriminator 2
 709 0130 0749     		ldr	r1, .L68
 710 0132 0C20     		movs	r0, #12
 711 0134 00FB0310 		mla	r0, r0, r3, r1
 712 0138 C280     		strh	r2, [r0, #6]	@ movhi
 695:.\Generated_Source\PSoC5/USBFS_std.c ****                  buffCount += USBFS_EP[ep].bufferSize;
 713              		.loc 1 695 0 discriminator 2
 714 013a 0189     		ldrh	r1, [r0, #8]
 715 013c 0133     		adds	r3, r3, #1
 716 013e 5218     		adds	r2, r2, r1
 692:.\Generated_Source\PSoC5/USBFS_std.c ****             for (ep = USBFS_EP1; ep < USBFS_MAX_EP; ep++)
 717              		.loc 1 692 0 discriminator 2
 718 0140 092B     		cmp	r3, #9
 695:.\Generated_Source\PSoC5/USBFS_std.c ****                  buffCount += USBFS_EP[ep].bufferSize;
 719              		.loc 1 695 0 discriminator 2
 720 0142 92B2     		uxth	r2, r2
 721              	.LVL57:
 692:.\Generated_Source\PSoC5/USBFS_std.c ****             for (ep = USBFS_EP1; ep < USBFS_MAX_EP; ep++)
 722              		.loc 1 692 0 discriminator 2
 723 0144 F4D1     		bne	.L55
 702:.\Generated_Source\PSoC5/USBFS_std.c **** }
 724              		.loc 1 702 0
 725 0146 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 700:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_ConfigReg();
 726              		.loc 1 700 0
 727 014a FFF7FEBF 		b	USBFS_ConfigReg
 728              	.LVL58:
 729              	.L36:
 730 014e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 731              	.L69:
 732              		.align	2
 733              	.L68:
 734 0150 00000000 		.word	USBFS_EP
 735 0154 00000000 		.word	USBFS_interfaceSetting
 736 0158 00000000 		.word	USBFS_interfaceSetting_last
 737 015c 00000000 		.word	USBFS_configuration
 738 0160 00000000 		.word	USBFS_deviceStatus
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 32


 739 0164 00000000 		.word	USBFS_interfaceClass
 740              		.cfi_endproc
 741              	.LFE2:
 742              		.size	USBFS_Config, .-USBFS_Config
 743              		.section	.text.USBFS_TerminateEP,"ax",%progbits
 744              		.align	1
 745              		.global	USBFS_TerminateEP
 746              		.thumb
 747              		.thumb_func
 748              		.type	USBFS_TerminateEP, %function
 749              	USBFS_TerminateEP:
 750              	.LFB7:
 914:.\Generated_Source\PSoC5/USBFS_std.c **** 
 915:.\Generated_Source\PSoC5/USBFS_std.c **** 
 916:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 917:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_TerminateEP
 918:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 919:.\Generated_Source\PSoC5/USBFS_std.c **** *
 920:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 921:.\Generated_Source\PSoC5/USBFS_std.c **** *  This function terminates the specified USBFS endpoint.
 922:.\Generated_Source\PSoC5/USBFS_std.c **** *  This function should be used before endpoint reconfiguration.
 923:.\Generated_Source\PSoC5/USBFS_std.c **** *
 924:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 925:.\Generated_Source\PSoC5/USBFS_std.c **** *  Endpoint number.
 926:.\Generated_Source\PSoC5/USBFS_std.c **** *
 927:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 928:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 929:.\Generated_Source\PSoC5/USBFS_std.c **** *
 930:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 931:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 932:.\Generated_Source\PSoC5/USBFS_std.c **** *
 933:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 934:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_TerminateEP(uint8 ep) 
 935:.\Generated_Source\PSoC5/USBFS_std.c **** {
 751              		.loc 1 935 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756              	.LVL59:
 936:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ri;
 937:.\Generated_Source\PSoC5/USBFS_std.c **** 
 938:.\Generated_Source\PSoC5/USBFS_std.c ****     ep &= USBFS_DIR_UNUSED;
 757              		.loc 1 938 0
 758 0000 00F07F00 		and	r0, r0, #127
 759              	.LVL60:
 939:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 760              		.loc 1 939 0
 761 0004 421E     		subs	r2, r0, #1
 762 0006 D1B2     		uxtb	r1, r2
 763              	.LVL61:
 940:.\Generated_Source\PSoC5/USBFS_std.c **** 
 941:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((ep > USBFS_EP0) && (ep < USBFS_MAX_EP))
 764              		.loc 1 941 0
 765 0008 0729     		cmp	r1, #7
 766 000a 14D8     		bhi	.L70
 939:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 33


 767              		.loc 1 939 0
 768 000c 0B01     		lsls	r3, r1, #4
 769 000e DAB2     		uxtb	r2, r3
 942:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 943:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set the endpoint Halt */
 944:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState |= (USBFS_ENDPOINT_STATUS_HALT);
 770              		.loc 1 944 0
 771 0010 094B     		ldr	r3, .L74
 772 0012 0C21     		movs	r1, #12
 773              	.LVL62:
 774 0014 01FB0030 		mla	r0, r1, r0, r3
 775              	.LVL63:
 776 0018 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 777 001a 43F00103 		orr	r3, r3, #1
 778 001e 8370     		strb	r3, [r0, #2]
 945:.\Generated_Source\PSoC5/USBFS_std.c **** 
 946:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the data toggle */
 947:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 779              		.loc 1 947 0
 780 0020 0023     		movs	r3, #0
 781 0022 C370     		strb	r3, [r0, #3]
 948:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_ALLOWED;
 782              		.loc 1 948 0
 783 0024 0223     		movs	r3, #2
 784 0026 4370     		strb	r3, [r0, #1]
 949:.\Generated_Source\PSoC5/USBFS_std.c **** 
 950:.\Generated_Source\PSoC5/USBFS_std.c ****         if ((USBFS_EP[ep].addr & USBFS_DIR_IN) != 0u)
 785              		.loc 1 950 0
 786 0028 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 787 002a 044B     		ldr	r3, .L74+4
 788 002c 10F0800F 		tst	r0, #128
 951:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 952:.\Generated_Source\PSoC5/USBFS_std.c ****             /* IN Endpoint */
 953:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_IN);
 954:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 955:.\Generated_Source\PSoC5/USBFS_std.c ****         else
 956:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 957:.\Generated_Source\PSoC5/USBFS_std.c ****             /* OUT Endpoint */
 958:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_OUT);
 789              		.loc 1 958 0
 790 0030 08BF     		it	eq
 791 0032 0821     		moveq	r1, #8
 792 0034 D154     		strb	r1, [r2, r3]
 793              	.L70:
 794 0036 7047     		bx	lr
 795              	.L75:
 796              		.align	2
 797              	.L74:
 798 0038 00000000 		.word	USBFS_EP
 799 003c 0E600040 		.word	1073766414
 800              		.cfi_endproc
 801              	.LFE7:
 802              		.size	USBFS_TerminateEP, .-USBFS_TerminateEP
 803              		.section	.text.USBFS_SetEndpointHalt,"ax",%progbits
 804              		.align	1
 805              		.global	USBFS_SetEndpointHalt
 806              		.thumb
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 34


 807              		.thumb_func
 808              		.type	USBFS_SetEndpointHalt, %function
 809              	USBFS_SetEndpointHalt:
 810              	.LFB8:
 959:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 960:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 961:.\Generated_Source\PSoC5/USBFS_std.c **** }
 962:.\Generated_Source\PSoC5/USBFS_std.c **** 
 963:.\Generated_Source\PSoC5/USBFS_std.c **** 
 964:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 965:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_SetEndpointHalt
 966:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 967:.\Generated_Source\PSoC5/USBFS_std.c **** *
 968:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 969:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine handles set endpoint halt.
 970:.\Generated_Source\PSoC5/USBFS_std.c **** *
 971:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 972:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 973:.\Generated_Source\PSoC5/USBFS_std.c **** *
 974:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 975:.\Generated_Source\PSoC5/USBFS_std.c **** *  requestHandled.
 976:.\Generated_Source\PSoC5/USBFS_std.c **** *
 977:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 978:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 979:.\Generated_Source\PSoC5/USBFS_std.c **** *
 980:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 981:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_SetEndpointHalt(void) 
 982:.\Generated_Source\PSoC5/USBFS_std.c **** {
 811              		.loc 1 982 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816              	.LVL64:
 983:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep;
 984:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ri;
 985:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_FALSE;
 986:.\Generated_Source\PSoC5/USBFS_std.c **** 
 987:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Set endpoint halt */
 988:.\Generated_Source\PSoC5/USBFS_std.c ****     ep = CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED;
 817              		.loc 1 988 0
 818 0000 124B     		ldr	r3, .L81
 819 0002 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 820 0004 01F07F01 		and	r1, r1, #127
 821              	.LVL65:
 989:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 822              		.loc 1 989 0
 823 0008 4A1E     		subs	r2, r1, #1
 824 000a D0B2     		uxtb	r0, r2
 825              	.LVL66:
 990:.\Generated_Source\PSoC5/USBFS_std.c **** 
 991:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((ep > USBFS_EP0) && (ep < USBFS_MAX_EP))
 826              		.loc 1 991 0
 827 000c 0728     		cmp	r0, #7
 828 000e 1AD8     		bhi	.L77
 989:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 829              		.loc 1 989 0
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 35


 830 0010 0301     		lsls	r3, r0, #4
 831 0012 DAB2     		uxtb	r2, r3
 992:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 993:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set the endpoint Halt */
 994:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState |= (USBFS_ENDPOINT_STATUS_HALT);
 832              		.loc 1 994 0
 833 0014 0E4B     		ldr	r3, .L81+4
 834 0016 0C20     		movs	r0, #12
 835              	.LVL67:
 836 0018 00FB0130 		mla	r0, r0, r1, r3
 837 001c 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 838              	.LVL68:
 839 001e 41F00103 		orr	r3, r1, #1
 995:.\Generated_Source\PSoC5/USBFS_std.c **** 
 996:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the data toggle */
 997:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 840              		.loc 1 997 0
 841 0022 0021     		movs	r1, #0
 994:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState |= (USBFS_ENDPOINT_STATUS_HALT);
 842              		.loc 1 994 0
 843 0024 8370     		strb	r3, [r0, #2]
 844              		.loc 1 997 0
 845 0026 C170     		strb	r1, [r0, #3]
 998:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState |= USBFS_NO_EVENT_ALLOWED;
 846              		.loc 1 998 0
 847 0028 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 848 002a 43F00201 		orr	r1, r3, #2
 849 002e 4170     		strb	r1, [r0, #1]
 999:.\Generated_Source\PSoC5/USBFS_std.c **** 
1000:.\Generated_Source\PSoC5/USBFS_std.c ****         if ((USBFS_EP[ep].addr & USBFS_DIR_IN) != 0u)
 850              		.loc 1 1000 0
 851 0030 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 852 0032 084B     		ldr	r3, .L81+8
 853 0034 10F0800F 		tst	r0, #128
 854 0038 01D0     		beq	.L78
1001:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1002:.\Generated_Source\PSoC5/USBFS_std.c ****             /* IN Endpoint */
1003:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_STALL_DATA_EP |
 855              		.loc 1 1003 0
 856 003a 8D21     		movs	r1, #141
 857 003c 00E0     		b	.L80
 858              	.L78:
1004:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                USBFS_MODE_ACK_IN);
1005:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1006:.\Generated_Source\PSoC5/USBFS_std.c ****         else
1007:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1008:.\Generated_Source\PSoC5/USBFS_std.c ****             /* OUT Endpoint */
1009:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_STALL_DATA_EP |
 859              		.loc 1 1009 0
 860 003e 8921     		movs	r1, #137
 861              	.L80:
 862 0040 D154     		strb	r1, [r2, r3]
1010:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                USBFS_MODE_ACK_OUT);
1011:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1012:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_InitNoDataControlTransfer();
1013:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1014:.\Generated_Source\PSoC5/USBFS_std.c **** 
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 36


1015:.\Generated_Source\PSoC5/USBFS_std.c ****     return(requestHandled);
1016:.\Generated_Source\PSoC5/USBFS_std.c **** }
 863              		.loc 1 1016 0
1012:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_InitNoDataControlTransfer();
 864              		.loc 1 1012 0
 865 0042 FFF7FEBF 		b	USBFS_InitNoDataControlTransfer
 866              	.LVL69:
 867              	.L77:
 868              		.loc 1 1016 0
 869 0046 0020     		movs	r0, #0
 870              	.LVL70:
 871 0048 7047     		bx	lr
 872              	.L82:
 873 004a 00BF     		.align	2
 874              	.L81:
 875 004c 04600040 		.word	1073766404
 876 0050 00000000 		.word	USBFS_EP
 877 0054 0E600040 		.word	1073766414
 878              		.cfi_endproc
 879              	.LFE8:
 880              		.size	USBFS_SetEndpointHalt, .-USBFS_SetEndpointHalt
 881              		.section	.text.USBFS_ClearEndpointHalt,"ax",%progbits
 882              		.align	1
 883              		.global	USBFS_ClearEndpointHalt
 884              		.thumb
 885              		.thumb_func
 886              		.type	USBFS_ClearEndpointHalt, %function
 887              	USBFS_ClearEndpointHalt:
 888              	.LFB9:
1017:.\Generated_Source\PSoC5/USBFS_std.c **** 
1018:.\Generated_Source\PSoC5/USBFS_std.c **** 
1019:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
1020:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ClearEndpointHalt
1021:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
1022:.\Generated_Source\PSoC5/USBFS_std.c **** *
1023:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
1024:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine handles clear endpoint halt.
1025:.\Generated_Source\PSoC5/USBFS_std.c **** *
1026:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
1027:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
1028:.\Generated_Source\PSoC5/USBFS_std.c **** *
1029:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
1030:.\Generated_Source\PSoC5/USBFS_std.c **** *  requestHandled.
1031:.\Generated_Source\PSoC5/USBFS_std.c **** *
1032:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
1033:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
1034:.\Generated_Source\PSoC5/USBFS_std.c **** *
1035:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
1036:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_ClearEndpointHalt(void) 
1037:.\Generated_Source\PSoC5/USBFS_std.c **** {
 889              		.loc 1 1037 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL71:
 894 0000 10B5     		push	{r4, lr}
 895              	.LCFI4:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 37


 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 4, -8
 898              		.cfi_offset 14, -4
1038:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep;
1039:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ri;
1040:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_FALSE;
1041:.\Generated_Source\PSoC5/USBFS_std.c **** 
1042:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Clear endpoint halt */
1043:.\Generated_Source\PSoC5/USBFS_std.c ****     ep = CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED;
 899              		.loc 1 1043 0
 900 0002 1A4B     		ldr	r3, .L90
 901 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 902 0006 00F07F03 		and	r3, r0, #127
 903              	.LVL72:
1044:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 904              		.loc 1 1044 0
 905 000a 5A1E     		subs	r2, r3, #1
 906 000c D2B2     		uxtb	r2, r2
 907              	.LVL73:
1045:.\Generated_Source\PSoC5/USBFS_std.c **** 
1046:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((ep > USBFS_EP0) && (ep < USBFS_MAX_EP))
 908              		.loc 1 1046 0
 909 000e 072A     		cmp	r2, #7
 910 0010 2AD8     		bhi	.L84
1047:.\Generated_Source\PSoC5/USBFS_std.c ****     {
1048:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the endpoint Halt */
1049:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState &= (uint8)~(USBFS_ENDPOINT_STATUS_HALT);
 911              		.loc 1 1049 0
 912 0012 1749     		ldr	r1, .L90+4
 913 0014 0C20     		movs	r0, #12
 914 0016 00FB0313 		mla	r3, r0, r3, r1
 915              	.LVL74:
 916 001a 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
1044:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 917              		.loc 1 1044 0
 918 001c 1201     		lsls	r2, r2, #4
 919              	.LVL75:
 920              		.loc 1 1049 0
 921 001e 04F0FE01 		and	r1, r4, #254
 922 0022 9970     		strb	r1, [r3, #2]
1050:.\Generated_Source\PSoC5/USBFS_std.c **** 
1051:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the data toggle */
1052:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 923              		.loc 1 1052 0
 924 0024 0024     		movs	r4, #0
1053:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear toggle bit for already armed packet */
1054:.\Generated_Source\PSoC5/USBFS_std.c ****         CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CNT0_IND + ri), CY_GET_REG8(
 925              		.loc 1 1054 0
 926 0026 1349     		ldr	r1, .L90+8
1052:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 927              		.loc 1 1052 0
 928 0028 DC70     		strb	r4, [r3, #3]
 929              		.loc 1 1054 0
 930 002a D2B2     		uxtb	r2, r2
 931 002c 545C     		ldrb	r4, [r2, r1]	@ zero_extendqisi2
 932 002e 04F07F04 		and	r4, r4, #127
 933 0032 5454     		strb	r4, [r2, r1]
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 38


1055:.\Generated_Source\PSoC5/USBFS_std.c ****                     (reg8 *)(USBFS_SIE_EP1_CNT0_IND + ri)) & (uint8)~USBFS_EPX_CNT_DATA_TOGGLE);
1056:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Return API State as it was defined before */
1057:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState &= (uint8)~USBFS_NO_EVENT_ALLOWED;
 934              		.loc 1 1057 0
 935 0034 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 936 0036 01F0FD01 		and	r1, r1, #253
 937 003a 5970     		strb	r1, [r3, #1]
1058:.\Generated_Source\PSoC5/USBFS_std.c **** 
1059:.\Generated_Source\PSoC5/USBFS_std.c ****         if ((USBFS_EP[ep].addr & USBFS_DIR_IN) != 0u)
 938              		.loc 1 1059 0
 939 003c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
1060:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1061:.\Generated_Source\PSoC5/USBFS_std.c ****             /* IN Endpoint */
1062:.\Generated_Source\PSoC5/USBFS_std.c ****             if(USBFS_EP[ep].apiEpState == USBFS_IN_BUFFER_EMPTY)
 940              		.loc 1 1062 0
 941 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
1059:.\Generated_Source\PSoC5/USBFS_std.c ****         if ((USBFS_EP[ep].addr & USBFS_DIR_IN) != 0u)
 942              		.loc 1 1059 0
 943 0040 11F0800F 		tst	r1, #128
 944 0044 0C49     		ldr	r1, .L90+12
 945 0046 05D0     		beq	.L85
 946              		.loc 1 1062 0
 947 0048 012B     		cmp	r3, #1
 948 004a 01D1     		bne	.L86
1063:.\Generated_Source\PSoC5/USBFS_std.c ****             {       /* Wait for next packet from application */
1064:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_IN);
 949              		.loc 1 1064 0
 950 004c 5054     		strb	r0, [r2, r1]
 951 004e 07E0     		b	.L87
 952              	.L86:
1065:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1066:.\Generated_Source\PSoC5/USBFS_std.c ****             else    /* Continue armed transfer */
1067:.\Generated_Source\PSoC5/USBFS_std.c ****             {
1068:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_ACK_IN);
 953              		.loc 1 1068 0
 954 0050 0D20     		movs	r0, #13
 955 0052 04E0     		b	.L89
 956              	.L85:
1069:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1070:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1071:.\Generated_Source\PSoC5/USBFS_std.c ****         else
1072:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1073:.\Generated_Source\PSoC5/USBFS_std.c ****             /* OUT Endpoint */
1074:.\Generated_Source\PSoC5/USBFS_std.c ****             if(USBFS_EP[ep].apiEpState == USBFS_OUT_BUFFER_FULL)
 957              		.loc 1 1074 0
 958 0054 012B     		cmp	r3, #1
 959 0056 01D1     		bne	.L88
1075:.\Generated_Source\PSoC5/USBFS_std.c ****             {       /* Allow application to read full buffer */
1076:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_NAK_OUT);
 960              		.loc 1 1076 0
 961 0058 0820     		movs	r0, #8
 962 005a 00E0     		b	.L89
 963              	.L88:
1077:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1078:.\Generated_Source\PSoC5/USBFS_std.c ****             else    /* Mark endpoint as empty, so it will be reloaded */
1079:.\Generated_Source\PSoC5/USBFS_std.c ****             {
1080:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ri), USBFS_MODE_ACK_OUT);
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 39


 964              		.loc 1 1080 0
 965 005c 0920     		movs	r0, #9
 966              	.L89:
 967 005e 5054     		strb	r0, [r2, r1]
 968              	.L87:
1081:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1082:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1083:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_InitNoDataControlTransfer();
1084:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1085:.\Generated_Source\PSoC5/USBFS_std.c **** 
1086:.\Generated_Source\PSoC5/USBFS_std.c ****     return(requestHandled);
1087:.\Generated_Source\PSoC5/USBFS_std.c **** }
 969              		.loc 1 1087 0
 970 0060 BDE81040 		pop	{r4, lr}
1083:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_InitNoDataControlTransfer();
 971              		.loc 1 1083 0
 972 0064 FFF7FEBF 		b	USBFS_InitNoDataControlTransfer
 973              	.LVL76:
 974              	.L84:
 975              		.loc 1 1087 0
 976 0068 0020     		movs	r0, #0
 977 006a 10BD     		pop	{r4, pc}
 978              	.L91:
 979              		.align	2
 980              	.L90:
 981 006c 04600040 		.word	1073766404
 982 0070 00000000 		.word	USBFS_EP
 983 0074 0C600040 		.word	1073766412
 984 0078 0E600040 		.word	1073766414
 985              		.cfi_endproc
 986              	.LFE9:
 987              		.size	USBFS_ClearEndpointHalt, .-USBFS_ClearEndpointHalt
 988              		.section	.text.USBFS_ValidateAlternateSetting,"ax",%progbits
 989              		.align	1
 990              		.global	USBFS_ValidateAlternateSetting
 991              		.thumb
 992              		.thumb_func
 993              		.type	USBFS_ValidateAlternateSetting, %function
 994              	USBFS_ValidateAlternateSetting:
 995              	.LFB10:
1088:.\Generated_Source\PSoC5/USBFS_std.c **** 
1089:.\Generated_Source\PSoC5/USBFS_std.c **** 
1090:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
1091:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ValidateAlternateSetting
1092:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
1093:.\Generated_Source\PSoC5/USBFS_std.c **** *
1094:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
1095:.\Generated_Source\PSoC5/USBFS_std.c **** *  Validates (and records) a SET INTERFACE request.
1096:.\Generated_Source\PSoC5/USBFS_std.c **** *
1097:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
1098:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
1099:.\Generated_Source\PSoC5/USBFS_std.c **** *
1100:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
1101:.\Generated_Source\PSoC5/USBFS_std.c **** *  requestHandled.
1102:.\Generated_Source\PSoC5/USBFS_std.c **** *
1103:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
1104:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 40


1105:.\Generated_Source\PSoC5/USBFS_std.c **** *
1106:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
1107:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_ValidateAlternateSetting(void) 
1108:.\Generated_Source\PSoC5/USBFS_std.c **** {
 996              		.loc 1 1108 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              	.LVL77:
 1001 0000 10B5     		push	{r4, lr}
 1002              	.LCFI5:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 4, -8
 1005              		.cfi_offset 14, -4
1109:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_TRUE;
1110:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 interfaceNum;
1111:.\Generated_Source\PSoC5/USBFS_std.c ****     const T_USBFS_LUT CYCODE *pTmp;
1112:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 currentInterfacesNum;
1113:.\Generated_Source\PSoC5/USBFS_std.c **** 
1114:.\Generated_Source\PSoC5/USBFS_std.c ****     interfaceNum = CY_GET_REG8(USBFS_wIndexLo);
 1006              		.loc 1 1114 0
 1007 0002 0C4B     		ldr	r3, .L96
1115:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Validate interface setting, stall if invalid. */
1116:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 1008              		.loc 1 1116 0
 1009 0004 0C48     		ldr	r0, .L96+4
1114:.\Generated_Source\PSoC5/USBFS_std.c ****     interfaceNum = CY_GET_REG8(USBFS_wIndexLo);
 1010              		.loc 1 1114 0
 1011 0006 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 1012              	.LVL78:
 1013              		.loc 1 1116 0
 1014 0008 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 1015 000a 4A1E     		subs	r2, r1, #1
 1016 000c D0B2     		uxtb	r0, r2
 1017 000e FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 1018              	.LVL79:
1117:.\Generated_Source\PSoC5/USBFS_std.c ****     currentInterfacesNum  = ((const uint8 *) pTmp->p_list)[USBFS_CONFIG_DESCR_NUM_INTERFACES];
 1019              		.loc 1 1117 0
 1020 0012 4368     		ldr	r3, [r0, #4]
1118:.\Generated_Source\PSoC5/USBFS_std.c **** 
1119:.\Generated_Source\PSoC5/USBFS_std.c ****     if((interfaceNum >= currentInterfacesNum) || (interfaceNum >= USBFS_MAX_INTERFACES_NUMBER))
 1021              		.loc 1 1119 0
 1022 0014 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 1023              	.LVL80:
 1024 0016 A042     		cmp	r0, r4
 1025 0018 09D9     		bls	.L95
 1026              		.loc 1 1119 0 is_stmt 0 discriminator 1
 1027 001a 44B9     		cbnz	r4, .L95
1120:.\Generated_Source\PSoC5/USBFS_std.c ****     {   /* Wrong interface number */
1121:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_FALSE;
1122:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1123:.\Generated_Source\PSoC5/USBFS_std.c ****     else
1124:.\Generated_Source\PSoC5/USBFS_std.c ****     {
1125:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Save current Alt setting to find out the difference in Config() function */
1126:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceSetting_last[interfaceNum] = USBFS_interfaceSetting[interfaceNum];
 1028              		.loc 1 1126 0 is_stmt 1
 1029 001c 074B     		ldr	r3, .L96+8
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 41


 1030              	.LVL81:
 1031 001e 084A     		ldr	r2, .L96+12
 1032 0020 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
1127:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceSetting[interfaceNum] = CY_GET_REG8(USBFS_wValueLo);
 1033              		.loc 1 1127 0
 1034 0022 0848     		ldr	r0, .L96+16
 1035              	.LVL82:
1126:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceSetting_last[interfaceNum] = USBFS_interfaceSetting[interfaceNum];
 1036              		.loc 1 1126 0
 1037 0024 1170     		strb	r1, [r2, #0]
 1038              		.loc 1 1127 0
 1039 0026 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
1109:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_TRUE;
 1040              		.loc 1 1109 0
 1041 0028 0120     		movs	r0, #1
 1042              		.loc 1 1127 0
 1043 002a 1970     		strb	r1, [r3, #0]
 1044 002c 10BD     		pop	{r4, pc}
 1045              	.LVL83:
 1046              	.L95:
1121:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_FALSE;
 1047              		.loc 1 1121 0
 1048 002e 0020     		movs	r0, #0
 1049              	.LVL84:
1128:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1129:.\Generated_Source\PSoC5/USBFS_std.c **** 
1130:.\Generated_Source\PSoC5/USBFS_std.c ****     return (requestHandled);
1131:.\Generated_Source\PSoC5/USBFS_std.c **** }
 1050              		.loc 1 1131 0
 1051 0030 10BD     		pop	{r4, pc}
 1052              	.L97:
 1053 0032 00BF     		.align	2
 1054              	.L96:
 1055 0034 04600040 		.word	1073766404
 1056 0038 00000000 		.word	USBFS_configuration
 1057 003c 00000000 		.word	USBFS_interfaceSetting
 1058 0040 00000000 		.word	USBFS_interfaceSetting_last
 1059 0044 02600040 		.word	1073766402
 1060              		.cfi_endproc
 1061              	.LFE10:
 1062              		.size	USBFS_ValidateAlternateSetting, .-USBFS_ValidateAlternateSetting
 1063              		.section	.text.USBFS_HandleStandardRqst,"ax",%progbits
 1064              		.align	1
 1065              		.global	USBFS_HandleStandardRqst
 1066              		.thumb
 1067              		.thumb_func
 1068              		.type	USBFS_HandleStandardRqst, %function
 1069              	USBFS_HandleStandardRqst:
 1070              	.LFB0:
  90:.\Generated_Source\PSoC5/USBFS_std.c **** {
 1071              		.loc 1 90 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              	.LVL85:
 1076 0000 10B5     		push	{r4, lr}
 1077              	.LCFI6:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 42


 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 4, -8
 1080              		.cfi_offset 14, -4
 102:.\Generated_Source\PSoC5/USBFS_std.c ****     USBFS_currentTD.count = 0u;
 1081              		.loc 1 102 0
 1082 0002 7C4B     		ldr	r3, .L151
 1083 0004 0022     		movs	r2, #0
 1084 0006 1A80     		strh	r2, [r3, #0]	@ movhi
 104:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_DIR_MASK) == USBFS_RQST_DIR_D2H)
 1085              		.loc 1 104 0
 1086 0008 7B4A     		ldr	r2, .L151+4
 1087 000a 7C48     		ldr	r0, .L151+8
 1088 000c 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 1089 000e 11F0800F 		tst	r1, #128
 1090 0012 00F08A80 		beq	.L99
 107:.\Generated_Source\PSoC5/USBFS_std.c ****         switch (CY_GET_REG8(USBFS_bRequest))
 1091              		.loc 1 107 0
 1092 0016 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 1093 0018 0A29     		cmp	r1, #10
 1094 001a 00F22281 		bhi	.L100
 1095 001e DFE811F0 		tbh	[pc, r1, lsl #1]
 1096              	.L105:
 1097 0022 5800     		.2byte	(.L101-.L105)/2
 1098 0024 2001     		.2byte	(.L100-.L105)/2
 1099 0026 2001     		.2byte	(.L100-.L105)/2
 1100 0028 2001     		.2byte	(.L100-.L105)/2
 1101 002a 2001     		.2byte	(.L100-.L105)/2
 1102 002c 2001     		.2byte	(.L100-.L105)/2
 1103 002e 0B00     		.2byte	(.L102-.L105)/2
 1104 0030 2001     		.2byte	(.L100-.L105)/2
 1105 0032 7800     		.2byte	(.L103-.L105)/2
 1106 0034 2001     		.2byte	(.L100-.L105)/2
 1107 0036 7C00     		.2byte	(.L104-.L105)/2
 1108              	.L102:
 110:.\Generated_Source\PSoC5/USBFS_std.c ****                 if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_DEVICE)
 1109              		.loc 1 110 0
 1110 0038 714B     		ldr	r3, .L151+12
 1111 003a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1112 003c 0129     		cmp	r1, #1
 1113 003e 0AD1     		bne	.L106
 1114              	.LBB4:
 1115              	.LBB5:
 882:.\Generated_Source\PSoC5/USBFS_std.c ****     return( (const T_USBFS_LUT CYCODE *) USBFS_TABLE[USBFS_device].p_list );
 1116              		.loc 1 882 0
 1117 0040 7048     		ldr	r0, .L151+16
 1118 0042 7149     		ldr	r1, .L151+20
 1119 0044 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 1120 0046 01EBC203 		add	r3, r1, r2, lsl #3
 1121              	.LBE5:
 1122              	.LBE4:
 113:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 1123              		.loc 1 113 0
 1124 004a 5868     		ldr	r0, [r3, #4]
 114:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.count = USBFS_DEVICE_DESCR_LENGTH;
 1125              		.loc 1 114 0
 1126 004c 1223     		movs	r3, #18
 113:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.pData = (volatile uint8 *)pTmp->p_list;
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 43


 1127              		.loc 1 113 0
 1128 004e 4268     		ldr	r2, [r0, #4]
 1129 0050 6848     		ldr	r0, .L151
 1130 0052 4260     		str	r2, [r0, #4]
 1131 0054 0FE0     		b	.L142
 1132              	.L106:
 117:.\Generated_Source\PSoC5/USBFS_std.c ****                 else if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_CONFIG)
 1133              		.loc 1 117 0
 1134 0056 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1135 0058 0228     		cmp	r0, #2
 1136 005a 11D1     		bne	.L107
 119:.\Generated_Source\PSoC5/USBFS_std.c ****                     pTmp = USBFS_GetConfigTablePtr(CY_GET_REG8(USBFS_wValueLo));
 1137              		.loc 1 119 0
 1138 005c 6B4B     		ldr	r3, .L151+24
 1139 005e 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1140 0060 FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 1141              	.LVL86:
 120:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 1142              		.loc 1 120 0
 1143 0064 4268     		ldr	r2, [r0, #4]
 1144 0066 6348     		ldr	r0, .L151
 1145              	.LVL87:
 1146 0068 4260     		str	r2, [r0, #4]
 121:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.count = ((uint16)(USBFS_currentTD.pData)[ \
 1147              		.loc 1 121 0
 1148 006a 4168     		ldr	r1, [r0, #4]
 1149 006c CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 123:.\Generated_Source\PSoC5/USBFS_std.c ****                                      (USBFS_currentTD.pData)[USBFS_CONFIG_DESCR_TOTAL_LENGTH_LOW];
 1150              		.loc 1 123 0
 1151 006e 4268     		ldr	r2, [r0, #4]
 1152 0070 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 121:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.count = ((uint16)(USBFS_currentTD.pData)[ \
 1153              		.loc 1 121 0
 1154 0072 41EA0323 		orr	r3, r1, r3, lsl #8
 1155              	.L142:
 1156 0076 0380     		strh	r3, [r0, #0]	@ movhi
 1157              	.LVL88:
 1158              	.L143:
 316:.\Generated_Source\PSoC5/USBFS_std.c **** }
 1159              		.loc 1 316 0
 1160 0078 BDE81040 		pop	{r4, lr}
 124:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled  = USBFS_InitControlRead();
 1161              		.loc 1 124 0
 1162 007c FFF7FEBF 		b	USBFS_InitControlRead
 1163              	.LVL89:
 1164              	.L107:
 127:.\Generated_Source\PSoC5/USBFS_std.c ****                 else if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_STRING)
 1165              		.loc 1 127 0
 1166 0080 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1167 0082 032A     		cmp	r2, #3
 1168 0084 21D1     		bne	.L150
 1169              	.L132:
 1170 0086 624B     		ldr	r3, .L151+28
 1171 0088 0022     		movs	r2, #0
 1172              	.LVL90:
 1173              	.L108:
 133:.\Generated_Source\PSoC5/USBFS_std.c ****                         while ( (CY_GET_REG8(USBFS_wValueLo) > nStr) && (*pStr != 0u) )
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 44


 1174              		.loc 1 133 0 discriminator 1
 1175 008a 6049     		ldr	r1, .L151+24
 1176 008c 0878     		ldrb	r0, [r1, #0]	@ zero_extendqisi2
 1177 008e 9042     		cmp	r0, r2
 1178 0090 0AD8     		bhi	.L110
 1179              	.L114:
 151:.\Generated_Source\PSoC5/USBFS_std.c ****                         if( (CY_GET_REG8(USBFS_wValueLo) != 0u) &&
 1180              		.loc 1 151 0
 1181 0092 0A78     		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 1182              	.LVL91:
 1183 0094 82B1     		cbz	r2, .L112
 1184              	.L111:
 152:.\Generated_Source\PSoC5/USBFS_std.c ****                             (CY_GET_REG8(USBFS_wValueLo) ==
 1185              		.loc 1 152 0 discriminator 1
 1186 0096 5D49     		ldr	r1, .L151+24
 155:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = (volatile uint8 *)&USBFS_SN_STRING_DESCRIPTOR[0u];
 1187              		.loc 1 155 0 discriminator 1
 1188 0098 5E48     		ldr	r0, .L151+32
 152:.\Generated_Source\PSoC5/USBFS_std.c ****                             (CY_GET_REG8(USBFS_wValueLo) ==
 1189              		.loc 1 152 0 discriminator 1
 1190 009a 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 155:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = (volatile uint8 *)&USBFS_SN_STRING_DESCRIPTOR[0u];
 1191              		.loc 1 155 0 discriminator 1
 1192 009c 5E4A     		ldr	r2, .L151+36
 1193 009e 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1194 00a0 8842     		cmp	r0, r1
 1195 00a2 08BF     		it	eq
 1196 00a4 1346     		moveq	r3, r2
 1197              	.LVL92:
 1198 00a6 07E0     		b	.L112
 1199              	.LVL93:
 1200              	.L110:
 133:.\Generated_Source\PSoC5/USBFS_std.c ****                         while ( (CY_GET_REG8(USBFS_wValueLo) > nStr) && (*pStr != 0u) )
 1201              		.loc 1 133 0 discriminator 2
 1202 00a8 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1203 00aa 0028     		cmp	r0, #0
 1204 00ac F1D0     		beq	.L114
 1205              	.L113:
 136:.\Generated_Source\PSoC5/USBFS_std.c ****                             descrLength = *pStr;
 1206              		.loc 1 136 0
 1207 00ae 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1208              	.LVL94:
 139:.\Generated_Source\PSoC5/USBFS_std.c ****                             nStr++;
 1209              		.loc 1 139 0
 1210 00b0 501C     		adds	r0, r2, #1
 138:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = &pStr[descrLength];
 1211              		.loc 1 138 0
 1212 00b2 5B18     		adds	r3, r3, r1
 1213              	.LVL95:
 139:.\Generated_Source\PSoC5/USBFS_std.c ****                             nStr++;
 1214              		.loc 1 139 0
 1215 00b4 C2B2     		uxtb	r2, r0
 1216              	.LVL96:
 1217 00b6 E8E7     		b	.L108
 1218              	.LVL97:
 1219              	.L112:
 169:.\Generated_Source\PSoC5/USBFS_std.c ****                     if (*pStr != 0u)
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 45


 1220              		.loc 1 169 0
 1221 00b8 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1222 00ba 0029     		cmp	r1, #0
 1223 00bc 00F0D180 		beq	.L100
 171:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = *pStr;
 1224              		.loc 1 171 0
 1225 00c0 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1226 00c2 4C4A     		ldr	r2, .L151
 1227 00c4 1080     		strh	r0, [r2, #0]	@ movhi
 172:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = pStr;
 1228              		.loc 1 172 0
 1229 00c6 5360     		str	r3, [r2, #4]
 1230 00c8 D6E7     		b	.L143
 1231              	.LVL98:
 1232              	.L150:
 316:.\Generated_Source\PSoC5/USBFS_std.c **** }
 1233              		.loc 1 316 0
 1234 00ca BDE81040 		pop	{r4, lr}
 179:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled = USBFS_DispatchClassRqst();
 1235              		.loc 1 179 0
 1236 00ce FFF7FEBF 		b	USBFS_DispatchClassRqst
 1237              	.LVL99:
 1238              	.L101:
 183:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK))
 1239              		.loc 1 183 0
 1240 00d2 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 1241 00d4 11F00302 		ands	r2, r1, #3
 1242 00d8 11D0     		beq	.L116
 1243 00da 022A     		cmp	r2, #2
 1244 00dc 40F0C180 		bne	.L100
 186:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_EP_STATUS_LENGTH;
 1245              		.loc 1 186 0
 1246 00e0 4449     		ldr	r1, .L151
 188:.\Generated_Source\PSoC5/USBFS_std.c ****                                         CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED].hwEpState;
 1247              		.loc 1 188 0
 1248 00e2 4E4B     		ldr	r3, .L151+40
 186:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_EP_STATUS_LENGTH;
 1249              		.loc 1 186 0
 1250 00e4 0A80     		strh	r2, [r1, #0]	@ movhi
 188:.\Generated_Source\PSoC5/USBFS_std.c ****                                         CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED].hwEpState;
 1251              		.loc 1 188 0
 1252 00e6 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1253 00e8 4D4A     		ldr	r2, .L151+44
 1254 00ea 00F07F03 		and	r3, r0, #127
 1255 00ee 0C20     		movs	r0, #12
 1256 00f0 00FB0323 		mla	r3, r0, r3, r2
 1257 00f4 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 187:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0u] = USBFS_EP[ \
 1258              		.loc 1 187 0
 1259 00f6 4B4B     		ldr	r3, .L151+48
 189:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[1u] = 0u;
 1260              		.loc 1 189 0
 1261 00f8 0022     		movs	r2, #0
 187:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0u] = USBFS_EP[ \
 1262              		.loc 1 187 0
 1263 00fa 1870     		strb	r0, [r3, #0]
 1264 00fc 06E0     		b	.L146
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 46


 1265              	.L116:
 194:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_DEVICE_STATUS_LENGTH;
 1266              		.loc 1 194 0
 1267 00fe 3D49     		ldr	r1, .L151
 1268 0100 0223     		movs	r3, #2
 195:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0u] = USBFS_deviceStatus;
 1269              		.loc 1 195 0
 1270 0102 4948     		ldr	r0, .L151+52
 194:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_DEVICE_STATUS_LENGTH;
 1271              		.loc 1 194 0
 1272 0104 0B80     		strh	r3, [r1, #0]	@ movhi
 195:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0u] = USBFS_deviceStatus;
 1273              		.loc 1 195 0
 1274 0106 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 1275 0108 464B     		ldr	r3, .L151+48
 1276 010a 1870     		strb	r0, [r3, #0]
 1277              	.L146:
 196:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[1u] = 0u;
 1278              		.loc 1 196 0
 1279 010c 5A70     		strb	r2, [r3, #1]
 197:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = &USBFS_tBuffer[0u];
 1280              		.loc 1 197 0
 1281 010e 4B60     		str	r3, [r1, #4]
 1282 0110 B2E7     		b	.L143
 1283              	.L103:
 205:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.count = 1u;
 1284              		.loc 1 205 0
 1285 0112 0122     		movs	r2, #1
 1286 0114 1A80     		strh	r2, [r3, #0]	@ movhi
 206:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.pData = (volatile uint8 *)&USBFS_configuration;
 1287              		.loc 1 206 0
 1288 0116 4548     		ldr	r0, .L151+56
 1289 0118 05E0     		b	.L147
 1290              	.L104:
 210:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.count = 1u;
 1291              		.loc 1 210 0
 1292 011a 0122     		movs	r2, #1
 212:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                             CY_GET_REG8(USBFS_wInde
 1293              		.loc 1 212 0
 1294 011c 3F48     		ldr	r0, .L151+40
 210:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.count = 1u;
 1295              		.loc 1 210 0
 1296 011e 1A80     		strh	r2, [r3, #0]	@ movhi
 212:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                             CY_GET_REG8(USBFS_wInde
 1297              		.loc 1 212 0
 1298 0120 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 211:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.pData = (volatile uint8 *)&USBFS_interfaceSetting[ \
 1299              		.loc 1 211 0
 1300 0122 4349     		ldr	r1, .L151+60
 1301 0124 8818     		adds	r0, r1, r2
 1302              	.L147:
 1303 0126 5860     		str	r0, [r3, #4]
 1304 0128 A6E7     		b	.L143
 1305              	.L99:
 221:.\Generated_Source\PSoC5/USBFS_std.c ****         switch (CY_GET_REG8(USBFS_bRequest))
 1306              		.loc 1 221 0
 1307 012a 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 47


 1308 012c 581E     		subs	r0, r3, #1
 1309 012e 0A28     		cmp	r0, #10
 1310 0130 00F29780 		bhi	.L100
 1311 0134 DFE810F0 		tbh	[pc, r0, lsl #1]
 1312              	.L123:
 1313 0138 2B00     		.2byte	(.L118-.L123)/2
 1314 013a 9500     		.2byte	(.L100-.L123)/2
 1315 013c 4400     		.2byte	(.L119-.L123)/2
 1316 013e 9500     		.2byte	(.L100-.L123)/2
 1317 0140 0B00     		.2byte	(.L120-.L123)/2
 1318 0142 9500     		.2byte	(.L100-.L123)/2
 1319 0144 9500     		.2byte	(.L100-.L123)/2
 1320 0146 9500     		.2byte	(.L100-.L123)/2
 1321 0148 0F00     		.2byte	(.L121-.L123)/2
 1322 014a 9500     		.2byte	(.L100-.L123)/2
 1323 014c 1900     		.2byte	(.L122-.L123)/2
 1324              	.L120:
 224:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_deviceAddress = CY_GET_REG8(USBFS_wValueLo);
 1325              		.loc 1 224 0
 1326 014e 2F4B     		ldr	r3, .L151+24
 1327 0150 3849     		ldr	r1, .L151+64
 1328 0152 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1329 0154 4CE0     		b	.L149
 1330              	.L121:
 228:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configuration = CY_GET_REG8(USBFS_wValueLo);
 1331              		.loc 1 228 0
 1332 0156 2D4B     		ldr	r3, .L151+24
 1333 0158 344A     		ldr	r2, .L151+56
 1334 015a 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 229:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configurationChanged = USBFS_TRUE;
 1335              		.loc 1 229 0
 1336 015c 3649     		ldr	r1, .L151+68
 228:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configuration = CY_GET_REG8(USBFS_wValueLo);
 1337              		.loc 1 228 0
 1338 015e 1070     		strb	r0, [r2, #0]
 229:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configurationChanged = USBFS_TRUE;
 1339              		.loc 1 229 0
 1340 0160 0120     		movs	r0, #1
 1341 0162 0870     		strb	r0, [r1, #0]
 230:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_Config(USBFS_TRUE);
 1342              		.loc 1 230 0
 1343 0164 FFF7FEFF 		bl	USBFS_Config
 1344              	.LVL100:
 1345 0168 77E0     		b	.L144
 1346              	.L122:
 234:.\Generated_Source\PSoC5/USBFS_std.c ****                 if (USBFS_ValidateAlternateSetting() != 0u)
 1347              		.loc 1 234 0
 1348 016a FFF7FEFF 		bl	USBFS_ValidateAlternateSetting
 1349              	.LVL101:
 1350 016e 0028     		cmp	r0, #0
 1351 0170 77D0     		beq	.L100
 236:.\Generated_Source\PSoC5/USBFS_std.c ****                     interfaceNumber = CY_GET_REG8(USBFS_wIndexLo);
 1352              		.loc 1 236 0
 1353 0172 2A4C     		ldr	r4, .L151+40
 237:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceNumber = interfaceNumber;
 1354              		.loc 1 237 0
 1355 0174 314A     		ldr	r2, .L151+72
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 48


 236:.\Generated_Source\PSoC5/USBFS_std.c ****                     interfaceNumber = CY_GET_REG8(USBFS_wIndexLo);
 1356              		.loc 1 236 0
 1357 0176 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 1358              	.LVL102:
 238:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_configurationChanged = USBFS_TRUE;
 1359              		.loc 1 238 0
 1360 0178 2F4B     		ldr	r3, .L151+68
 1361 017a 0121     		movs	r1, #1
 237:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceNumber = interfaceNumber;
 1362              		.loc 1 237 0
 1363 017c 1470     		strb	r4, [r2, #0]
 238:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_configurationChanged = USBFS_TRUE;
 1364              		.loc 1 238 0
 1365 017e 1970     		strb	r1, [r3, #0]
 243:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_ConfigAltChanged();
 1366              		.loc 1 243 0
 1367 0180 FFF7FEFF 		bl	USBFS_ConfigAltChanged
 1368              	.LVL103:
 247:.\Generated_Source\PSoC5/USBFS_std.c ****                          USBFS_interfaceSetting[interfaceNumber];
 1369              		.loc 1 247 0
 1370 0184 2A48     		ldr	r0, .L151+60
 246:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceSetting_last[interfaceNumber] =
 1371              		.loc 1 246 0
 1372 0186 2E49     		ldr	r1, .L151+76
 247:.\Generated_Source\PSoC5/USBFS_std.c ****                          USBFS_interfaceSetting[interfaceNumber];
 1373              		.loc 1 247 0
 1374 0188 025D     		ldrb	r2, [r0, r4]	@ zero_extendqisi2
 246:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceSetting_last[interfaceNumber] =
 1375              		.loc 1 246 0
 1376 018a 0A55     		strb	r2, [r1, r4]
 1377 018c 65E0     		b	.L144
 1378              	.LVL104:
 1379              	.L118:
 252:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch (CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK)
 1380              		.loc 1 252 0
 1381 018e 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1382 0190 02F00301 		and	r1, r2, #3
 1383 0194 0129     		cmp	r1, #1
 1384 0196 55D0     		beq	.L129
 1385 0198 09D3     		bcc	.L125
 1386 019a 0229     		cmp	r1, #2
 1387 019c 61D1     		bne	.L100
 255:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_ENDPOINT_HALT)
 1388              		.loc 1 255 0
 1389 019e 1B4B     		ldr	r3, .L151+24
 1390 01a0 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1391 01a2 0028     		cmp	r0, #0
 1392 01a4 5DD1     		bne	.L100
 316:.\Generated_Source\PSoC5/USBFS_std.c **** }
 1393              		.loc 1 316 0
 1394 01a6 BDE81040 		pop	{r4, lr}
 257:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_ClearEndpointHalt();
 1395              		.loc 1 257 0
 1396 01aa FFF7FEBF 		b	USBFS_ClearEndpointHalt
 1397              	.LVL105:
 1398              	.L125:
 262:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_DEVICE_REMOTE_WAKEUP)
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 49


 1399              		.loc 1 262 0
 1400 01ae 174A     		ldr	r2, .L151+24
 1401 01b0 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 1402 01b2 0129     		cmp	r1, #1
 1403 01b4 55D1     		bne	.L100
 264:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_deviceStatus &= (uint8)~USBFS_DEVICE_STATUS_REMOTE_WAKEUP;
 1404              		.loc 1 264 0
 1405 01b6 1C49     		ldr	r1, .L151+52
 1406 01b8 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 1407 01ba 03F0FD00 		and	r0, r3, #253
 1408              	.LVL106:
 1409 01be 17E0     		b	.L149
 1410              	.L119:
 282:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch (CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK)
 1411              		.loc 1 282 0
 1412 01c0 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 1413 01c2 00F00302 		and	r2, r0, #3
 1414 01c6 012A     		cmp	r2, #1
 1415 01c8 3CD0     		beq	.L129
 1416 01ca 09D3     		bcc	.L128
 1417 01cc 022A     		cmp	r2, #2
 1418 01ce 48D1     		bne	.L100
 285:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_ENDPOINT_HALT)
 1419              		.loc 1 285 0
 1420 01d0 0E49     		ldr	r1, .L151+24
 1421 01d2 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 1422 01d4 002B     		cmp	r3, #0
 1423 01d6 44D1     		bne	.L100
 316:.\Generated_Source\PSoC5/USBFS_std.c **** }
 1424              		.loc 1 316 0
 1425 01d8 BDE81040 		pop	{r4, lr}
 287:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_SetEndpointHalt();
 1426              		.loc 1 287 0
 1427 01dc FFF7FEBF 		b	USBFS_SetEndpointHalt
 1428              	.LVL107:
 1429              	.L128:
 292:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_DEVICE_REMOTE_WAKEUP)
 1430              		.loc 1 292 0
 1431 01e0 0A48     		ldr	r0, .L151+24
 1432 01e2 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 1433 01e4 012A     		cmp	r2, #1
 1434 01e6 3CD1     		bne	.L100
 294:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_deviceStatus |= USBFS_DEVICE_STATUS_REMOTE_WAKEUP;
 1435              		.loc 1 294 0
 1436 01e8 0F49     		ldr	r1, .L151+52
 1437 01ea 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 1438 01ec 43F00200 		orr	r0, r3, #2
 1439              	.L149:
 1440              	.LVL108:
 1441 01f0 0870     		strb	r0, [r1, #0]
 1442 01f2 32E0     		b	.L144
 1443              	.L152:
 1444              		.align	2
 1445              	.L151:
 1446 01f4 00000000 		.word	USBFS_currentTD
 1447 01f8 00600040 		.word	1073766400
 1448 01fc 01600040 		.word	1073766401
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 50


 1449 0200 03600040 		.word	1073766403
 1450 0204 00000000 		.word	USBFS_device
 1451 0208 00000000 		.word	USBFS_TABLE
 1452 020c 02600040 		.word	1073766402
 1453 0210 00000000 		.word	USBFS_STRING_DESCRIPTORS
 1454 0214 00000000 		.word	USBFS_DEVICE0_DESCR
 1455 0218 00000000 		.word	USBFS_SN_STRING_DESCRIPTOR
 1456 021c 04600040 		.word	1073766404
 1457 0220 00000000 		.word	USBFS_EP
 1458 0224 00000000 		.word	.LANCHOR0
 1459 0228 00000000 		.word	USBFS_deviceStatus
 1460 022c 00000000 		.word	USBFS_configuration
 1461 0230 00000000 		.word	USBFS_interfaceSetting
 1462 0234 00000000 		.word	USBFS_deviceAddress
 1463 0238 00000000 		.word	USBFS_configurationChanged
 1464 023c 00000000 		.word	USBFS_interfaceNumber
 1465 0240 00000000 		.word	USBFS_interfaceSetting_last
 1466              	.LVL109:
 1467              	.L129:
 300:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wIndexLo) < USBFS_MAX_INTERFACES_NUMBER)
 1468              		.loc 1 300 0
 1469 0244 0848     		ldr	r0, .L153
 1470 0246 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 1471 0248 5AB9     		cbnz	r2, .L100
 302:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_interfaceStatus[CY_GET_REG8(USBFS_wIndexLo)] &=
 1472              		.loc 1 302 0
 1473 024a 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1474 024c 074A     		ldr	r2, .L153+4
 303:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 (uint8)~(CY_GET_REG8(USBFS_wValueLo
 1475              		.loc 1 303 0
 1476 024e 0848     		ldr	r0, .L153+8
 302:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_interfaceStatus[CY_GET_REG8(USBFS_wIndexLo)] &=
 1477              		.loc 1 302 0
 1478 0250 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 303:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 (uint8)~(CY_GET_REG8(USBFS_wValueLo
 1479              		.loc 1 303 0
 1480 0252 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 302:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_interfaceStatus[CY_GET_REG8(USBFS_wIndexLo)] &=
 1481              		.loc 1 302 0
 1482 0254 21EA0001 		bic	r1, r1, r0
 1483 0258 D154     		strb	r1, [r2, r3]
 1484              	.LVL110:
 1485              	.L144:
 316:.\Generated_Source\PSoC5/USBFS_std.c **** }
 1486              		.loc 1 316 0
 1487 025a BDE81040 		pop	{r4, lr}
 304:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 1488              		.loc 1 304 0
 1489 025e FFF7FEBF 		b	USBFS_InitNoDataControlTransfer
 1490              	.LVL111:
 1491              	.L100:
 316:.\Generated_Source\PSoC5/USBFS_std.c **** }
 1492              		.loc 1 316 0
 1493 0262 0020     		movs	r0, #0
 1494 0264 10BD     		pop	{r4, pc}
 1495              	.L154:
 1496 0266 00BF     		.align	2
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 51


 1497              	.L153:
 1498 0268 04600040 		.word	1073766404
 1499 026c 00000000 		.word	USBFS_interfaceStatus
 1500 0270 02600040 		.word	1073766402
 1501              		.cfi_endproc
 1502              	.LFE0:
 1503              		.size	USBFS_HandleStandardRqst, .-USBFS_HandleStandardRqst
 1504              		.bss
 1505              		.set	.LANCHOR0,. + 0
 1506              		.type	USBFS_tBuffer.5008, %object
 1507              		.size	USBFS_tBuffer.5008, 2
 1508              	USBFS_tBuffer.5008:
 1509 0000 0000     		.space	2
 1510              		.text
 1511              	.Letext0:
 1512              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1513              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS.h"
 1514              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_pvt.h"
 1515              		.section	.debug_info,"",%progbits
 1516              	.Ldebug_info0:
 1517 0000 9A080000 		.4byte	0x89a
 1518 0004 0200     		.2byte	0x2
 1519 0006 00000000 		.4byte	.Ldebug_abbrev0
 1520 000a 04       		.byte	0x4
 1521 000b 01       		.uleb128 0x1
 1522 000c 59030000 		.4byte	.LASF83
 1523 0010 01       		.byte	0x1
 1524 0011 E2030000 		.4byte	.LASF84
 1525 0015 6A010000 		.4byte	.LASF85
 1526 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1527 001d 00000000 		.4byte	0
 1528 0021 00000000 		.4byte	0
 1529 0025 00000000 		.4byte	.Ldebug_line0
 1530 0029 02       		.uleb128 0x2
 1531 002a 01       		.byte	0x1
 1532 002b 06       		.byte	0x6
 1533 002c 9A000000 		.4byte	.LASF0
 1534 0030 02       		.uleb128 0x2
 1535 0031 01       		.byte	0x1
 1536 0032 08       		.byte	0x8
 1537 0033 A7030000 		.4byte	.LASF1
 1538 0037 02       		.uleb128 0x2
 1539 0038 02       		.byte	0x2
 1540 0039 05       		.byte	0x5
 1541 003a B5030000 		.4byte	.LASF2
 1542 003e 02       		.uleb128 0x2
 1543 003f 02       		.byte	0x2
 1544 0040 07       		.byte	0x7
 1545 0041 E4010000 		.4byte	.LASF3
 1546 0045 02       		.uleb128 0x2
 1547 0046 04       		.byte	0x4
 1548 0047 05       		.byte	0x5
 1549 0048 15010000 		.4byte	.LASF4
 1550 004c 02       		.uleb128 0x2
 1551 004d 04       		.byte	0x4
 1552 004e 07       		.byte	0x7
 1553 004f B2010000 		.4byte	.LASF5
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 52


 1554 0053 02       		.uleb128 0x2
 1555 0054 08       		.byte	0x8
 1556 0055 05       		.byte	0x5
 1557 0056 8C000000 		.4byte	.LASF6
 1558 005a 02       		.uleb128 0x2
 1559 005b 08       		.byte	0x8
 1560 005c 07       		.byte	0x7
 1561 005d 52000000 		.4byte	.LASF7
 1562 0061 03       		.uleb128 0x3
 1563 0062 04       		.byte	0x4
 1564 0063 05       		.byte	0x5
 1565 0064 696E7400 		.ascii	"int\000"
 1566 0068 02       		.uleb128 0x2
 1567 0069 04       		.byte	0x4
 1568 006a 07       		.byte	0x7
 1569 006b A5010000 		.4byte	.LASF8
 1570 006f 04       		.uleb128 0x4
 1571 0070 1E010000 		.4byte	.LASF9
 1572 0074 02       		.byte	0x2
 1573 0075 5B       		.byte	0x5b
 1574 0076 30000000 		.4byte	0x30
 1575 007a 04       		.uleb128 0x4
 1576 007b 13000000 		.4byte	.LASF10
 1577 007f 02       		.byte	0x2
 1578 0080 5C       		.byte	0x5c
 1579 0081 3E000000 		.4byte	0x3e
 1580 0085 02       		.uleb128 0x2
 1581 0086 04       		.byte	0x4
 1582 0087 04       		.byte	0x4
 1583 0088 3A030000 		.4byte	.LASF11
 1584 008c 02       		.uleb128 0x2
 1585 008d 08       		.byte	0x8
 1586 008e 04       		.byte	0x4
 1587 008f 2D010000 		.4byte	.LASF12
 1588 0093 02       		.uleb128 0x2
 1589 0094 01       		.byte	0x1
 1590 0095 08       		.byte	0x8
 1591 0096 76040000 		.4byte	.LASF13
 1592 009a 04       		.uleb128 0x4
 1593 009b A2030000 		.4byte	.LASF14
 1594 009f 02       		.byte	0x2
 1595 00a0 F0       		.byte	0xf0
 1596 00a1 A5000000 		.4byte	0xa5
 1597 00a5 05       		.uleb128 0x5
 1598 00a6 6F000000 		.4byte	0x6f
 1599 00aa 02       		.uleb128 0x2
 1600 00ab 04       		.byte	0x4
 1601 00ac 07       		.byte	0x7
 1602 00ad 86020000 		.4byte	.LASF15
 1603 00b1 06       		.uleb128 0x6
 1604 00b2 0C       		.byte	0xc
 1605 00b3 03       		.byte	0x3
 1606 00b4 79       		.byte	0x79
 1607 00b5 38010000 		.4byte	0x138
 1608 00b9 07       		.uleb128 0x7
 1609 00ba A5020000 		.4byte	.LASF16
 1610 00be 03       		.byte	0x3
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 53


 1611 00bf 7B       		.byte	0x7b
 1612 00c0 6F000000 		.4byte	0x6f
 1613 00c4 02       		.byte	0x2
 1614 00c5 23       		.byte	0x23
 1615 00c6 00       		.uleb128 0
 1616 00c7 07       		.uleb128 0x7
 1617 00c8 40030000 		.4byte	.LASF17
 1618 00cc 03       		.byte	0x3
 1619 00cd 7C       		.byte	0x7c
 1620 00ce 6F000000 		.4byte	0x6f
 1621 00d2 02       		.byte	0x2
 1622 00d3 23       		.byte	0x23
 1623 00d4 01       		.uleb128 0x1
 1624 00d5 07       		.uleb128 0x7
 1625 00d6 70020000 		.4byte	.LASF18
 1626 00da 03       		.byte	0x3
 1627 00db 7D       		.byte	0x7d
 1628 00dc 6F000000 		.4byte	0x6f
 1629 00e0 02       		.byte	0x2
 1630 00e1 23       		.byte	0x23
 1631 00e2 02       		.uleb128 0x2
 1632 00e3 07       		.uleb128 0x7
 1633 00e4 24010000 		.4byte	.LASF19
 1634 00e8 03       		.byte	0x3
 1635 00e9 7E       		.byte	0x7e
 1636 00ea 6F000000 		.4byte	0x6f
 1637 00ee 02       		.byte	0x2
 1638 00ef 23       		.byte	0x23
 1639 00f0 03       		.uleb128 0x3
 1640 00f1 07       		.uleb128 0x7
 1641 00f2 69000000 		.4byte	.LASF20
 1642 00f6 03       		.byte	0x3
 1643 00f7 7F       		.byte	0x7f
 1644 00f8 6F000000 		.4byte	0x6f
 1645 00fc 02       		.byte	0x2
 1646 00fd 23       		.byte	0x23
 1647 00fe 04       		.uleb128 0x4
 1648 00ff 07       		.uleb128 0x7
 1649 0100 9E010000 		.4byte	.LASF21
 1650 0104 03       		.byte	0x3
 1651 0105 80       		.byte	0x80
 1652 0106 6F000000 		.4byte	0x6f
 1653 010a 02       		.byte	0x2
 1654 010b 23       		.byte	0x23
 1655 010c 05       		.uleb128 0x5
 1656 010d 07       		.uleb128 0x7
 1657 010e 95040000 		.4byte	.LASF22
 1658 0112 03       		.byte	0x3
 1659 0113 81       		.byte	0x81
 1660 0114 7A000000 		.4byte	0x7a
 1661 0118 02       		.byte	0x2
 1662 0119 23       		.byte	0x23
 1663 011a 06       		.uleb128 0x6
 1664 011b 07       		.uleb128 0x7
 1665 011c 7B040000 		.4byte	.LASF23
 1666 0120 03       		.byte	0x3
 1667 0121 82       		.byte	0x82
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 54


 1668 0122 7A000000 		.4byte	0x7a
 1669 0126 02       		.byte	0x2
 1670 0127 23       		.byte	0x23
 1671 0128 08       		.uleb128 0x8
 1672 0129 07       		.uleb128 0x7
 1673 012a FE010000 		.4byte	.LASF24
 1674 012e 03       		.byte	0x3
 1675 012f 83       		.byte	0x83
 1676 0130 6F000000 		.4byte	0x6f
 1677 0134 02       		.byte	0x2
 1678 0135 23       		.byte	0x23
 1679 0136 0A       		.uleb128 0xa
 1680 0137 00       		.byte	0
 1681 0138 04       		.uleb128 0x4
 1682 0139 1E040000 		.4byte	.LASF25
 1683 013d 03       		.byte	0x3
 1684 013e 84       		.byte	0x84
 1685 013f B1000000 		.4byte	0xb1
 1686 0143 06       		.uleb128 0x6
 1687 0144 08       		.byte	0x8
 1688 0145 03       		.byte	0x3
 1689 0146 86       		.byte	0x86
 1690 0147 A0010000 		.4byte	0x1a0
 1691 014b 07       		.uleb128 0x7
 1692 014c FE010000 		.4byte	.LASF24
 1693 0150 03       		.byte	0x3
 1694 0151 88       		.byte	0x88
 1695 0152 6F000000 		.4byte	0x6f
 1696 0156 02       		.byte	0x2
 1697 0157 23       		.byte	0x23
 1698 0158 00       		.uleb128 0
 1699 0159 07       		.uleb128 0x7
 1700 015a 6B040000 		.4byte	.LASF26
 1701 015e 03       		.byte	0x3
 1702 015f 89       		.byte	0x89
 1703 0160 6F000000 		.4byte	0x6f
 1704 0164 02       		.byte	0x2
 1705 0165 23       		.byte	0x23
 1706 0166 01       		.uleb128 0x1
 1707 0167 07       		.uleb128 0x7
 1708 0168 69000000 		.4byte	.LASF20
 1709 016c 03       		.byte	0x3
 1710 016d 8A       		.byte	0x8a
 1711 016e 6F000000 		.4byte	0x6f
 1712 0172 02       		.byte	0x2
 1713 0173 23       		.byte	0x23
 1714 0174 02       		.uleb128 0x2
 1715 0175 07       		.uleb128 0x7
 1716 0176 60040000 		.4byte	.LASF27
 1717 017a 03       		.byte	0x3
 1718 017b 8B       		.byte	0x8b
 1719 017c 6F000000 		.4byte	0x6f
 1720 0180 02       		.byte	0x2
 1721 0181 23       		.byte	0x23
 1722 0182 03       		.uleb128 0x3
 1723 0183 07       		.uleb128 0x7
 1724 0184 7B040000 		.4byte	.LASF23
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 55


 1725 0188 03       		.byte	0x3
 1726 0189 8C       		.byte	0x8c
 1727 018a 7A000000 		.4byte	0x7a
 1728 018e 02       		.byte	0x2
 1729 018f 23       		.byte	0x23
 1730 0190 04       		.uleb128 0x4
 1731 0191 07       		.uleb128 0x7
 1732 0192 21050000 		.4byte	.LASF28
 1733 0196 03       		.byte	0x3
 1734 0197 8D       		.byte	0x8d
 1735 0198 6F000000 		.4byte	0x6f
 1736 019c 02       		.byte	0x2
 1737 019d 23       		.byte	0x23
 1738 019e 06       		.uleb128 0x6
 1739 019f 00       		.byte	0
 1740 01a0 04       		.uleb128 0x4
 1741 01a1 34010000 		.4byte	.LASF29
 1742 01a5 03       		.byte	0x3
 1743 01a6 8E       		.byte	0x8e
 1744 01a7 43010000 		.4byte	0x143
 1745 01ab 06       		.uleb128 0x6
 1746 01ac 04       		.byte	0x4
 1747 01ad 03       		.byte	0x3
 1748 01ae 90       		.byte	0x90
 1749 01af D0010000 		.4byte	0x1d0
 1750 01b3 07       		.uleb128 0x7
 1751 01b4 02050000 		.4byte	.LASF30
 1752 01b8 03       		.byte	0x3
 1753 01b9 92       		.byte	0x92
 1754 01ba 6F000000 		.4byte	0x6f
 1755 01be 02       		.byte	0x2
 1756 01bf 23       		.byte	0x23
 1757 01c0 00       		.uleb128 0
 1758 01c1 07       		.uleb128 0x7
 1759 01c2 E7040000 		.4byte	.LASF31
 1760 01c6 03       		.byte	0x3
 1761 01c7 93       		.byte	0x93
 1762 01c8 7A000000 		.4byte	0x7a
 1763 01cc 02       		.byte	0x2
 1764 01cd 23       		.byte	0x23
 1765 01ce 02       		.uleb128 0x2
 1766 01cf 00       		.byte	0
 1767 01d0 04       		.uleb128 0x4
 1768 01d1 FF020000 		.4byte	.LASF32
 1769 01d5 03       		.byte	0x3
 1770 01d6 94       		.byte	0x94
 1771 01d7 AB010000 		.4byte	0x1ab
 1772 01db 06       		.uleb128 0x6
 1773 01dc 0C       		.byte	0xc
 1774 01dd 03       		.byte	0x3
 1775 01de 96       		.byte	0x96
 1776 01df 0E020000 		.4byte	0x20e
 1777 01e3 07       		.uleb128 0x7
 1778 01e4 0D000000 		.4byte	.LASF33
 1779 01e8 03       		.byte	0x3
 1780 01e9 98       		.byte	0x98
 1781 01ea 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 56


 1782 01ee 02       		.byte	0x2
 1783 01ef 23       		.byte	0x23
 1784 01f0 00       		.uleb128 0
 1785 01f1 07       		.uleb128 0x7
 1786 01f2 64010000 		.4byte	.LASF34
 1787 01f6 03       		.byte	0x3
 1788 01f7 99       		.byte	0x99
 1789 01f8 0E020000 		.4byte	0x20e
 1790 01fc 02       		.byte	0x2
 1791 01fd 23       		.byte	0x23
 1792 01fe 04       		.uleb128 0x4
 1793 01ff 07       		.uleb128 0x7
 1794 0200 00000000 		.4byte	.LASF35
 1795 0204 03       		.byte	0x3
 1796 0205 9A       		.byte	0x9a
 1797 0206 14020000 		.4byte	0x214
 1798 020a 02       		.byte	0x2
 1799 020b 23       		.byte	0x23
 1800 020c 08       		.uleb128 0x8
 1801 020d 00       		.byte	0
 1802 020e 08       		.uleb128 0x8
 1803 020f 04       		.byte	0x4
 1804 0210 A5000000 		.4byte	0xa5
 1805 0214 08       		.uleb128 0x8
 1806 0215 04       		.byte	0x4
 1807 0216 D0010000 		.4byte	0x1d0
 1808 021a 04       		.uleb128 0x4
 1809 021b BF030000 		.4byte	.LASF36
 1810 021f 03       		.byte	0x3
 1811 0220 9B       		.byte	0x9b
 1812 0221 DB010000 		.4byte	0x1db
 1813 0225 06       		.uleb128 0x6
 1814 0226 08       		.byte	0x8
 1815 0227 03       		.byte	0x3
 1816 0228 9E       		.byte	0x9e
 1817 0229 48020000 		.4byte	0x248
 1818 022d 09       		.uleb128 0x9
 1819 022e 6300     		.ascii	"c\000"
 1820 0230 03       		.byte	0x3
 1821 0231 A0       		.byte	0xa0
 1822 0232 6F000000 		.4byte	0x6f
 1823 0236 02       		.byte	0x2
 1824 0237 23       		.byte	0x23
 1825 0238 00       		.uleb128 0
 1826 0239 07       		.uleb128 0x7
 1827 023a 94020000 		.4byte	.LASF37
 1828 023e 03       		.byte	0x3
 1829 023f A1       		.byte	0xa1
 1830 0240 48020000 		.4byte	0x248
 1831 0244 02       		.byte	0x2
 1832 0245 23       		.byte	0x23
 1833 0246 04       		.uleb128 0x4
 1834 0247 00       		.byte	0
 1835 0248 08       		.uleb128 0x8
 1836 0249 04       		.byte	0x4
 1837 024a 4E020000 		.4byte	0x24e
 1838 024e 0A       		.uleb128 0xa
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 57


 1839 024f 04       		.uleb128 0x4
 1840 0250 56050000 		.4byte	.LASF38
 1841 0254 03       		.byte	0x3
 1842 0255 A2       		.byte	0xa2
 1843 0256 25020000 		.4byte	0x225
 1844 025a 0B       		.uleb128 0xb
 1845 025b 01       		.byte	0x1
 1846 025c A0040000 		.4byte	.LASF79
 1847 0260 01       		.byte	0x1
 1848 0261 6E03     		.2byte	0x36e
 1849 0263 01       		.byte	0x1
 1850 0264 69020000 		.4byte	0x269
 1851 0268 01       		.byte	0x1
 1852 0269 08       		.uleb128 0x8
 1853 026a 04       		.byte	0x4
 1854 026b 6F020000 		.4byte	0x26f
 1855 026f 0C       		.uleb128 0xc
 1856 0270 4F020000 		.4byte	0x24f
 1857 0274 0D       		.uleb128 0xd
 1858 0275 01       		.byte	0x1
 1859 0276 05010000 		.4byte	.LASF40
 1860 027a 01       		.byte	0x1
 1861 027b 7E01     		.2byte	0x17e
 1862 027d 01       		.byte	0x1
 1863 027e 00000000 		.4byte	.LFB1
 1864 0282 B4000000 		.4byte	.LFE1
 1865 0286 00000000 		.4byte	.LLST0
 1866 028a 01       		.byte	0x1
 1867 028b AD020000 		.4byte	0x2ad
 1868 028f 0E       		.uleb128 0xe
 1869 0290 657000   		.ascii	"ep\000"
 1870 0293 01       		.byte	0x1
 1871 0294 8001     		.2byte	0x180
 1872 0296 6F000000 		.4byte	0x6f
 1873 029a 20000000 		.4byte	.LLST1
 1874 029e 0E       		.uleb128 0xe
 1875 029f 6900     		.ascii	"i\000"
 1876 02a1 01       		.byte	0x1
 1877 02a2 8101     		.2byte	0x181
 1878 02a4 6F000000 		.4byte	0x6f
 1879 02a8 57000000 		.4byte	.LLST2
 1880 02ac 00       		.byte	0
 1881 02ad 0F       		.uleb128 0xf
 1882 02ae 01       		.byte	0x1
 1883 02af CA030000 		.4byte	.LASF44
 1884 02b3 01       		.byte	0x1
 1885 02b4 5103     		.2byte	0x351
 1886 02b6 01       		.byte	0x1
 1887 02b7 69020000 		.4byte	0x269
 1888 02bb 00000000 		.4byte	.LFB4
 1889 02bf 1C000000 		.4byte	.LFE4
 1890 02c3 02       		.byte	0x2
 1891 02c4 7D       		.byte	0x7d
 1892 02c5 00       		.sleb128 0
 1893 02c6 01       		.byte	0x1
 1894 02c7 EA020000 		.4byte	0x2ea
 1895 02cb 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 58


 1896 02cc 6300     		.ascii	"c\000"
 1897 02ce 01       		.byte	0x1
 1898 02cf 5103     		.2byte	0x351
 1899 02d1 6F000000 		.4byte	0x6f
 1900 02d5 8C000000 		.4byte	.LLST3
 1901 02d9 11       		.uleb128 0x11
 1902 02da 8F020000 		.4byte	.LASF39
 1903 02de 01       		.byte	0x1
 1904 02df 5503     		.2byte	0x355
 1905 02e1 69020000 		.4byte	0x269
 1906 02e5 AD000000 		.4byte	.LLST4
 1907 02e9 00       		.byte	0
 1908 02ea 0D       		.uleb128 0xd
 1909 02eb 01       		.byte	0x1
 1910 02ec E8020000 		.4byte	.LASF41
 1911 02f0 01       		.byte	0x1
 1912 02f1 D302     		.2byte	0x2d3
 1913 02f3 01       		.byte	0x1
 1914 02f4 00000000 		.4byte	.LFB3
 1915 02f8 28010000 		.4byte	.LFE3
 1916 02fc C6000000 		.4byte	.LLST5
 1917 0300 01       		.byte	0x1
 1918 0301 7B030000 		.4byte	0x37b
 1919 0305 0E       		.uleb128 0xe
 1920 0306 657000   		.ascii	"ep\000"
 1921 0309 01       		.byte	0x1
 1922 030a D502     		.2byte	0x2d5
 1923 030c 6F000000 		.4byte	0x6f
 1924 0310 E6000000 		.4byte	.LLST6
 1925 0314 11       		.uleb128 0x11
 1926 0315 FB040000 		.4byte	.LASF42
 1927 0319 01       		.byte	0x1
 1928 031a D602     		.2byte	0x2d6
 1929 031c 6F000000 		.4byte	0x6f
 1930 0320 05010000 		.4byte	.LLST7
 1931 0324 0E       		.uleb128 0xe
 1932 0325 6900     		.ascii	"i\000"
 1933 0327 01       		.byte	0x1
 1934 0328 D702     		.2byte	0x2d7
 1935 032a 6F000000 		.4byte	0x6f
 1936 032e 2A010000 		.4byte	.LLST8
 1937 0332 11       		.uleb128 0x11
 1938 0333 F3040000 		.4byte	.LASF43
 1939 0337 01       		.byte	0x1
 1940 0338 D802     		.2byte	0x2d8
 1941 033a 6F000000 		.4byte	0x6f
 1942 033e 61010000 		.4byte	.LLST9
 1943 0342 0E       		.uleb128 0xe
 1944 0343 726900   		.ascii	"ri\000"
 1945 0346 01       		.byte	0x1
 1946 0347 D902     		.2byte	0x2d9
 1947 0349 6F000000 		.4byte	0x6f
 1948 034d A1010000 		.4byte	.LLST10
 1949 0351 11       		.uleb128 0x11
 1950 0352 8F020000 		.4byte	.LASF39
 1951 0356 01       		.byte	0x1
 1952 0357 DB02     		.2byte	0x2db
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 59


 1953 0359 69020000 		.4byte	0x269
 1954 035d D0010000 		.4byte	.LLST11
 1955 0361 0E       		.uleb128 0xe
 1956 0362 70455000 		.ascii	"pEP\000"
 1957 0366 01       		.byte	0x1
 1958 0367 DC02     		.2byte	0x2dc
 1959 0369 7B030000 		.4byte	0x37b
 1960 036d E5010000 		.4byte	.LLST12
 1961 0371 12       		.uleb128 0x12
 1962 0372 14000000 		.4byte	.LVL12
 1963 0376 AD020000 		.4byte	0x2ad
 1964 037a 00       		.byte	0
 1965 037b 08       		.uleb128 0x8
 1966 037c 04       		.byte	0x4
 1967 037d 81030000 		.4byte	0x381
 1968 0381 0C       		.uleb128 0xc
 1969 0382 A0010000 		.4byte	0x1a0
 1970 0386 13       		.uleb128 0x13
 1971 0387 5A020000 		.4byte	0x25a
 1972 038b 00000000 		.4byte	.LFB5
 1973 038f 18000000 		.4byte	.LFE5
 1974 0393 02       		.byte	0x2
 1975 0394 7D       		.byte	0x7d
 1976 0395 00       		.sleb128 0
 1977 0396 01       		.byte	0x1
 1978 0397 14       		.uleb128 0x14
 1979 0398 01       		.byte	0x1
 1980 0399 C4010000 		.4byte	.LASF45
 1981 039d 01       		.byte	0x1
 1982 039e 8503     		.2byte	0x385
 1983 03a0 01       		.byte	0x1
 1984 03a1 E0030000 		.4byte	0x3e0
 1985 03a5 00000000 		.4byte	.LFB6
 1986 03a9 20000000 		.4byte	.LFE6
 1987 03ad 04020000 		.4byte	.LLST13
 1988 03b1 01       		.byte	0x1
 1989 03b2 E0030000 		.4byte	0x3e0
 1990 03b6 11       		.uleb128 0x11
 1991 03b7 8F020000 		.4byte	.LASF39
 1992 03bb 01       		.byte	0x1
 1993 03bc 8803     		.2byte	0x388
 1994 03be 69020000 		.4byte	0x269
 1995 03c2 24020000 		.4byte	.LLST14
 1996 03c6 11       		.uleb128 0x11
 1997 03c7 D3020000 		.4byte	.LASF46
 1998 03cb 01       		.byte	0x1
 1999 03cc 8903     		.2byte	0x389
 2000 03ce 6F000000 		.4byte	0x6f
 2001 03d2 49020000 		.4byte	.LLST15
 2002 03d6 12       		.uleb128 0x12
 2003 03d7 0E000000 		.4byte	.LVL29
 2004 03db AD020000 		.4byte	0x2ad
 2005 03df 00       		.byte	0
 2006 03e0 08       		.uleb128 0x8
 2007 03e1 04       		.byte	0x4
 2008 03e2 E6030000 		.4byte	0x3e6
 2009 03e6 0C       		.uleb128 0xc
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 60


 2010 03e7 6F000000 		.4byte	0x6f
 2011 03eb 0D       		.uleb128 0xd
 2012 03ec 01       		.byte	0x1
 2013 03ed F8000000 		.4byte	.LASF47
 2014 03f1 01       		.byte	0x1
 2015 03f2 DB01     		.2byte	0x1db
 2016 03f4 01       		.byte	0x1
 2017 03f5 00000000 		.4byte	.LFB2
 2018 03f9 68010000 		.4byte	.LFE2
 2019 03fd 6C020000 		.4byte	.LLST16
 2020 0401 01       		.byte	0x1
 2021 0402 BB040000 		.4byte	0x4bb
 2022 0406 15       		.uleb128 0x15
 2023 0407 A6000000 		.4byte	.LASF48
 2024 040b 01       		.byte	0x1
 2025 040c DB01     		.2byte	0x1db
 2026 040e 6F000000 		.4byte	0x6f
 2027 0412 8C020000 		.4byte	.LLST17
 2028 0416 0E       		.uleb128 0xe
 2029 0417 657000   		.ascii	"ep\000"
 2030 041a 01       		.byte	0x1
 2031 041b DD01     		.2byte	0x1dd
 2032 041d 6F000000 		.4byte	0x6f
 2033 0421 AD020000 		.4byte	.LLST18
 2034 0425 11       		.uleb128 0x11
 2035 0426 FB040000 		.4byte	.LASF42
 2036 042a 01       		.byte	0x1
 2037 042b DE01     		.2byte	0x1de
 2038 042d 6F000000 		.4byte	0x6f
 2039 0431 E4020000 		.4byte	.LLST19
 2040 0435 0E       		.uleb128 0xe
 2041 0436 6900     		.ascii	"i\000"
 2042 0438 01       		.byte	0x1
 2043 0439 DF01     		.2byte	0x1df
 2044 043b 6F000000 		.4byte	0x6f
 2045 043f 1B030000 		.4byte	.LLST20
 2046 0443 11       		.uleb128 0x11
 2047 0444 F3040000 		.4byte	.LASF43
 2048 0448 01       		.byte	0x1
 2049 0449 E001     		.2byte	0x1e0
 2050 044b 6F000000 		.4byte	0x6f
 2051 044f 5E030000 		.4byte	.LLST21
 2052 0453 11       		.uleb128 0x11
 2053 0454 F7010000 		.4byte	.LASF49
 2054 0458 01       		.byte	0x1
 2055 0459 E101     		.2byte	0x1e1
 2056 045b E0030000 		.4byte	0x3e0
 2057 045f 9E030000 		.4byte	.LLST22
 2058 0463 11       		.uleb128 0x11
 2059 0464 9B020000 		.4byte	.LASF50
 2060 0468 01       		.byte	0x1
 2061 0469 E301     		.2byte	0x1e3
 2062 046b 7A000000 		.4byte	0x7a
 2063 046f B2030000 		.4byte	.LLST23
 2064 0473 11       		.uleb128 0x11
 2065 0474 8F020000 		.4byte	.LASF39
 2066 0478 01       		.byte	0x1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 61


 2067 0479 E601     		.2byte	0x1e6
 2068 047b 69020000 		.4byte	0x269
 2069 047f DD030000 		.4byte	.LLST24
 2070 0483 0E       		.uleb128 0xe
 2071 0484 70455000 		.ascii	"pEP\000"
 2072 0488 01       		.byte	0x1
 2073 0489 E701     		.2byte	0x1e7
 2074 048b 7B030000 		.4byte	0x37b
 2075 048f FD030000 		.4byte	.LLST25
 2076 0493 16       		.uleb128 0x16
 2077 0494 44000000 		.4byte	.LVL36
 2078 0498 AD020000 		.4byte	0x2ad
 2079 049c A7040000 		.4byte	0x4a7
 2080 04a0 17       		.uleb128 0x17
 2081 04a1 01       		.byte	0x1
 2082 04a2 50       		.byte	0x50
 2083 04a3 02       		.byte	0x2
 2084 04a4 74       		.byte	0x74
 2085 04a5 7F       		.sleb128 -1
 2086 04a6 00       		.byte	0
 2087 04a7 12       		.uleb128 0x12
 2088 04a8 28010000 		.4byte	.LVL54
 2089 04ac 97030000 		.4byte	0x397
 2090 04b0 18       		.uleb128 0x18
 2091 04b1 4E010000 		.4byte	.LVL58
 2092 04b5 01       		.byte	0x1
 2093 04b6 74020000 		.4byte	0x274
 2094 04ba 00       		.byte	0
 2095 04bb 19       		.uleb128 0x19
 2096 04bc 01       		.byte	0x1
 2097 04bd 1A000000 		.4byte	.LASF51
 2098 04c1 01       		.byte	0x1
 2099 04c2 A603     		.2byte	0x3a6
 2100 04c4 01       		.byte	0x1
 2101 04c5 00000000 		.4byte	.LFB7
 2102 04c9 40000000 		.4byte	.LFE7
 2103 04cd 02       		.byte	0x2
 2104 04ce 7D       		.byte	0x7d
 2105 04cf 00       		.sleb128 0
 2106 04d0 01       		.byte	0x1
 2107 04d1 F4040000 		.4byte	0x4f4
 2108 04d5 10       		.uleb128 0x10
 2109 04d6 657000   		.ascii	"ep\000"
 2110 04d9 01       		.byte	0x1
 2111 04da A603     		.2byte	0x3a6
 2112 04dc 6F000000 		.4byte	0x6f
 2113 04e0 1D040000 		.4byte	.LLST26
 2114 04e4 0E       		.uleb128 0xe
 2115 04e5 726900   		.ascii	"ri\000"
 2116 04e8 01       		.byte	0x1
 2117 04e9 A803     		.2byte	0x3a8
 2118 04eb 6F000000 		.4byte	0x6f
 2119 04ef 3B040000 		.4byte	.LLST27
 2120 04f3 00       		.byte	0
 2121 04f4 0F       		.uleb128 0xf
 2122 04f5 01       		.byte	0x1
 2123 04f6 4E010000 		.4byte	.LASF52
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 62


 2124 04fa 01       		.byte	0x1
 2125 04fb D503     		.2byte	0x3d5
 2126 04fd 01       		.byte	0x1
 2127 04fe 6F000000 		.4byte	0x6f
 2128 0502 00000000 		.4byte	.LFB8
 2129 0506 58000000 		.4byte	.LFE8
 2130 050a 02       		.byte	0x2
 2131 050b 7D       		.byte	0x7d
 2132 050c 00       		.sleb128 0
 2133 050d 01       		.byte	0x1
 2134 050e 48050000 		.4byte	0x548
 2135 0512 0E       		.uleb128 0xe
 2136 0513 657000   		.ascii	"ep\000"
 2137 0516 01       		.byte	0x1
 2138 0517 D703     		.2byte	0x3d7
 2139 0519 6F000000 		.4byte	0x6f
 2140 051d 61040000 		.4byte	.LLST28
 2141 0521 0E       		.uleb128 0xe
 2142 0522 726900   		.ascii	"ri\000"
 2143 0525 01       		.byte	0x1
 2144 0526 D803     		.2byte	0x3d8
 2145 0528 6F000000 		.4byte	0x6f
 2146 052c 7F040000 		.4byte	.LLST29
 2147 0530 1A       		.uleb128 0x1a
 2148 0531 86040000 		.4byte	.LASF53
 2149 0535 01       		.byte	0x1
 2150 0536 D903     		.2byte	0x3d9
 2151 0538 6F000000 		.4byte	0x6f
 2152 053c 00       		.byte	0
 2153 053d 18       		.uleb128 0x18
 2154 053e 46000000 		.4byte	.LVL69
 2155 0542 01       		.byte	0x1
 2156 0543 73080000 		.4byte	0x873
 2157 0547 00       		.byte	0
 2158 0548 14       		.uleb128 0x14
 2159 0549 01       		.byte	0x1
 2160 054a CA000000 		.4byte	.LASF54
 2161 054e 01       		.byte	0x1
 2162 054f 0C04     		.2byte	0x40c
 2163 0551 01       		.byte	0x1
 2164 0552 6F000000 		.4byte	0x6f
 2165 0556 00000000 		.4byte	.LFB9
 2166 055a 7C000000 		.4byte	.LFE9
 2167 055e C3040000 		.4byte	.LLST30
 2168 0562 01       		.byte	0x1
 2169 0563 9D050000 		.4byte	0x59d
 2170 0567 0E       		.uleb128 0xe
 2171 0568 657000   		.ascii	"ep\000"
 2172 056b 01       		.byte	0x1
 2173 056c 0E04     		.2byte	0x40e
 2174 056e 6F000000 		.4byte	0x6f
 2175 0572 E3040000 		.4byte	.LLST31
 2176 0576 0E       		.uleb128 0xe
 2177 0577 726900   		.ascii	"ri\000"
 2178 057a 01       		.byte	0x1
 2179 057b 0F04     		.2byte	0x40f
 2180 057d 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 63


 2181 0581 01050000 		.4byte	.LLST32
 2182 0585 1A       		.uleb128 0x1a
 2183 0586 86040000 		.4byte	.LASF53
 2184 058a 01       		.byte	0x1
 2185 058b 1004     		.2byte	0x410
 2186 058d 6F000000 		.4byte	0x6f
 2187 0591 00       		.byte	0
 2188 0592 18       		.uleb128 0x18
 2189 0593 68000000 		.4byte	.LVL76
 2190 0597 01       		.byte	0x1
 2191 0598 73080000 		.4byte	0x873
 2192 059c 00       		.byte	0
 2193 059d 14       		.uleb128 0x14
 2194 059e 01       		.byte	0x1
 2195 059f 08020000 		.4byte	.LASF55
 2196 05a3 01       		.byte	0x1
 2197 05a4 5304     		.2byte	0x453
 2198 05a6 01       		.byte	0x1
 2199 05a7 6F000000 		.4byte	0x6f
 2200 05ab 00000000 		.4byte	.LFB10
 2201 05af 48000000 		.4byte	.LFE10
 2202 05b3 27050000 		.4byte	.LLST33
 2203 05b7 01       		.byte	0x1
 2204 05b8 04060000 		.4byte	0x604
 2205 05bc 11       		.uleb128 0x11
 2206 05bd 86040000 		.4byte	.LASF53
 2207 05c1 01       		.byte	0x1
 2208 05c2 5504     		.2byte	0x455
 2209 05c4 6F000000 		.4byte	0x6f
 2210 05c8 47050000 		.4byte	.LLST34
 2211 05cc 1B       		.uleb128 0x1b
 2212 05cd 19030000 		.4byte	.LASF56
 2213 05d1 01       		.byte	0x1
 2214 05d2 5604     		.2byte	0x456
 2215 05d4 6F000000 		.4byte	0x6f
 2216 05d8 01       		.byte	0x1
 2217 05d9 54       		.byte	0x54
 2218 05da 11       		.uleb128 0x11
 2219 05db 8F020000 		.4byte	.LASF39
 2220 05df 01       		.byte	0x1
 2221 05e0 5704     		.2byte	0x457
 2222 05e2 69020000 		.4byte	0x269
 2223 05e6 66050000 		.4byte	.LLST35
 2224 05ea 11       		.uleb128 0x11
 2225 05eb D3020000 		.4byte	.LASF46
 2226 05ef 01       		.byte	0x1
 2227 05f0 5804     		.2byte	0x458
 2228 05f2 6F000000 		.4byte	0x6f
 2229 05f6 79050000 		.4byte	.LLST36
 2230 05fa 12       		.uleb128 0x12
 2231 05fb 12000000 		.4byte	.LVL79
 2232 05ff AD020000 		.4byte	0x2ad
 2233 0603 00       		.byte	0
 2234 0604 1C       		.uleb128 0x1c
 2235 0605 01       		.byte	0x1
 2236 0606 3D050000 		.4byte	.LASF57
 2237 060a 01       		.byte	0x1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 64


 2238 060b 59       		.byte	0x59
 2239 060c 01       		.byte	0x1
 2240 060d 6F000000 		.4byte	0x6f
 2241 0611 00000000 		.4byte	.LFB0
 2242 0615 74020000 		.4byte	.LFE0
 2243 0619 B3050000 		.4byte	.LLST37
 2244 061d 01       		.byte	0x1
 2245 061e FD060000 		.4byte	0x6fd
 2246 0622 1D       		.uleb128 0x1d
 2247 0623 86040000 		.4byte	.LASF53
 2248 0627 01       		.byte	0x1
 2249 0628 5B       		.byte	0x5b
 2250 0629 6F000000 		.4byte	0x6f
 2251 062d D3050000 		.4byte	.LLST38
 2252 0631 1D       		.uleb128 0x1d
 2253 0632 6E000000 		.4byte	.LASF58
 2254 0636 01       		.byte	0x1
 2255 0637 5C       		.byte	0x5c
 2256 0638 6F000000 		.4byte	0x6f
 2257 063c E7050000 		.4byte	.LLST39
 2258 0640 1D       		.uleb128 0x1d
 2259 0641 54030000 		.4byte	.LASF59
 2260 0645 01       		.byte	0x1
 2261 0646 5E       		.byte	0x5e
 2262 0647 0E020000 		.4byte	0x20e
 2263 064b FA050000 		.4byte	.LLST40
 2264 064f 1D       		.uleb128 0x1d
 2265 0650 EE040000 		.4byte	.LASF60
 2266 0654 01       		.byte	0x1
 2267 0655 60       		.byte	0x60
 2268 0656 6F000000 		.4byte	0x6f
 2269 065a 3C060000 		.4byte	.LLST41
 2270 065e 1D       		.uleb128 0x1d
 2271 065f 7A020000 		.4byte	.LASF61
 2272 0663 01       		.byte	0x1
 2273 0664 61       		.byte	0x61
 2274 0665 6F000000 		.4byte	0x6f
 2275 0669 65060000 		.4byte	.LLST42
 2276 066d 1E       		.uleb128 0x1e
 2277 066e 7E000000 		.4byte	.LASF62
 2278 0672 01       		.byte	0x1
 2279 0673 64       		.byte	0x64
 2280 0674 0D070000 		.4byte	0x70d
 2281 0678 05       		.byte	0x5
 2282 0679 03       		.byte	0x3
 2283 067a 00000000 		.4byte	USBFS_tBuffer.5008
 2284 067e 1D       		.uleb128 0x1d
 2285 067f 8F020000 		.4byte	.LASF39
 2286 0683 01       		.byte	0x1
 2287 0684 65       		.byte	0x65
 2288 0685 69020000 		.4byte	0x269
 2289 0689 78060000 		.4byte	.LLST43
 2290 068d 1F       		.uleb128 0x1f
 2291 068e 5A020000 		.4byte	0x25a
 2292 0692 40000000 		.4byte	.LBB4
 2293 0696 4A000000 		.4byte	.LBE4
 2294 069a 01       		.byte	0x1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 65


 2295 069b 70       		.byte	0x70
 2296 069c 12       		.uleb128 0x12
 2297 069d 64000000 		.4byte	.LVL86
 2298 06a1 AD020000 		.4byte	0x2ad
 2299 06a5 18       		.uleb128 0x18
 2300 06a6 80000000 		.4byte	.LVL89
 2301 06aa 01       		.byte	0x1
 2302 06ab 81080000 		.4byte	0x881
 2303 06af 18       		.uleb128 0x18
 2304 06b0 D2000000 		.4byte	.LVL99
 2305 06b4 01       		.byte	0x1
 2306 06b5 8F080000 		.4byte	0x88f
 2307 06b9 16       		.uleb128 0x16
 2308 06ba 68010000 		.4byte	.LVL100
 2309 06be EB030000 		.4byte	0x3eb
 2310 06c2 CC060000 		.4byte	0x6cc
 2311 06c6 17       		.uleb128 0x17
 2312 06c7 01       		.byte	0x1
 2313 06c8 50       		.byte	0x50
 2314 06c9 01       		.byte	0x1
 2315 06ca 31       		.byte	0x31
 2316 06cb 00       		.byte	0
 2317 06cc 12       		.uleb128 0x12
 2318 06cd 6E010000 		.4byte	.LVL101
 2319 06d1 9D050000 		.4byte	0x59d
 2320 06d5 12       		.uleb128 0x12
 2321 06d6 84010000 		.4byte	.LVL103
 2322 06da EA020000 		.4byte	0x2ea
 2323 06de 18       		.uleb128 0x18
 2324 06df AE010000 		.4byte	.LVL105
 2325 06e3 01       		.byte	0x1
 2326 06e4 48050000 		.4byte	0x548
 2327 06e8 18       		.uleb128 0x18
 2328 06e9 E0010000 		.4byte	.LVL107
 2329 06ed 01       		.byte	0x1
 2330 06ee F4040000 		.4byte	0x4f4
 2331 06f2 18       		.uleb128 0x18
 2332 06f3 62020000 		.4byte	.LVL111
 2333 06f7 01       		.byte	0x1
 2334 06f8 73080000 		.4byte	0x873
 2335 06fc 00       		.byte	0
 2336 06fd 20       		.uleb128 0x20
 2337 06fe 6F000000 		.4byte	0x6f
 2338 0702 0D070000 		.4byte	0x70d
 2339 0706 21       		.uleb128 0x21
 2340 0707 AA000000 		.4byte	0xaa
 2341 070b 01       		.byte	0x1
 2342 070c 00       		.byte	0
 2343 070d 05       		.uleb128 0x5
 2344 070e FD060000 		.4byte	0x6fd
 2345 0712 22       		.uleb128 0x22
 2346 0713 53040000 		.4byte	.LASF63
 2347 0717 03       		.byte	0x3
 2348 0718 1802     		.2byte	0x218
 2349 071a A5000000 		.4byte	0xa5
 2350 071e 01       		.byte	0x1
 2351 071f 01       		.byte	0x1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 66


 2352 0720 22       		.uleb128 0x22
 2353 0721 8A010000 		.4byte	.LASF64
 2354 0725 03       		.byte	0x3
 2355 0726 1A02     		.2byte	0x21a
 2356 0728 A5000000 		.4byte	0xa5
 2357 072c 01       		.byte	0x1
 2358 072d 01       		.byte	0x1
 2359 072e 22       		.uleb128 0x22
 2360 072f 27020000 		.4byte	.LASF65
 2361 0733 03       		.byte	0x3
 2362 0734 1B02     		.2byte	0x21b
 2363 0736 A5000000 		.4byte	0xa5
 2364 073a 01       		.byte	0x1
 2365 073b 01       		.byte	0x1
 2366 073c 22       		.uleb128 0x22
 2367 073d B8040000 		.4byte	.LASF66
 2368 0741 03       		.byte	0x3
 2369 0742 1C02     		.2byte	0x21c
 2370 0744 A5000000 		.4byte	0xa5
 2371 0748 01       		.byte	0x1
 2372 0749 01       		.byte	0x1
 2373 074a 20       		.uleb128 0x20
 2374 074b 6F000000 		.4byte	0x6f
 2375 074f 5A070000 		.4byte	0x75a
 2376 0753 21       		.uleb128 0x21
 2377 0754 AA000000 		.4byte	0xaa
 2378 0758 11       		.byte	0x11
 2379 0759 00       		.byte	0
 2380 075a 23       		.uleb128 0x23
 2381 075b 26030000 		.4byte	.LASF67
 2382 075f 04       		.byte	0x4
 2383 0760 1C       		.byte	0x1c
 2384 0761 67070000 		.4byte	0x767
 2385 0765 01       		.byte	0x1
 2386 0766 01       		.byte	0x1
 2387 0767 0C       		.uleb128 0xc
 2388 0768 4A070000 		.4byte	0x74a
 2389 076c 20       		.uleb128 0x20
 2390 076d 4F020000 		.4byte	0x24f
 2391 0771 7C070000 		.4byte	0x77c
 2392 0775 21       		.uleb128 0x21
 2393 0776 AA000000 		.4byte	0xaa
 2394 077a 00       		.byte	0
 2395 077b 00       		.byte	0
 2396 077c 23       		.uleb128 0x23
 2397 077d AC020000 		.4byte	.LASF68
 2398 0781 04       		.byte	0x4
 2399 0782 23       		.byte	0x23
 2400 0783 89070000 		.4byte	0x789
 2401 0787 01       		.byte	0x1
 2402 0788 01       		.byte	0x1
 2403 0789 0C       		.uleb128 0xc
 2404 078a 6C070000 		.4byte	0x76c
 2405 078e 20       		.uleb128 0x20
 2406 078f 6F000000 		.4byte	0x6f
 2407 0793 9E070000 		.4byte	0x79e
 2408 0797 21       		.uleb128 0x21
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 67


 2409 0798 AA000000 		.4byte	0xaa
 2410 079c 09       		.byte	0x9
 2411 079d 00       		.byte	0
 2412 079e 23       		.uleb128 0x23
 2413 079f B8020000 		.4byte	.LASF69
 2414 07a3 04       		.byte	0x4
 2415 07a4 24       		.byte	0x24
 2416 07a5 AB070000 		.4byte	0x7ab
 2417 07a9 01       		.byte	0x1
 2418 07aa 01       		.byte	0x1
 2419 07ab 0C       		.uleb128 0xc
 2420 07ac 8E070000 		.4byte	0x78e
 2421 07b0 20       		.uleb128 0x20
 2422 07b1 6F000000 		.4byte	0x6f
 2423 07b5 C0070000 		.4byte	0x7c0
 2424 07b9 21       		.uleb128 0x21
 2425 07ba AA000000 		.4byte	0xaa
 2426 07be 52       		.byte	0x52
 2427 07bf 00       		.byte	0
 2428 07c0 23       		.uleb128 0x23
 2429 07c1 57020000 		.4byte	.LASF70
 2430 07c5 04       		.byte	0x4
 2431 07c6 25       		.byte	0x25
 2432 07c7 CD070000 		.4byte	0x7cd
 2433 07cb 01       		.byte	0x1
 2434 07cc 01       		.byte	0x1
 2435 07cd 0C       		.uleb128 0xc
 2436 07ce B0070000 		.4byte	0x7b0
 2437 07d2 23       		.uleb128 0x23
 2438 07d3 E2000000 		.4byte	.LASF71
 2439 07d7 04       		.byte	0x4
 2440 07d8 38       		.byte	0x38
 2441 07d9 A5000000 		.4byte	0xa5
 2442 07dd 01       		.byte	0x1
 2443 07de 01       		.byte	0x1
 2444 07df 20       		.uleb128 0x20
 2445 07e0 6F000000 		.4byte	0x6f
 2446 07e4 EF070000 		.4byte	0x7ef
 2447 07e8 21       		.uleb128 0x21
 2448 07e9 AA000000 		.4byte	0xaa
 2449 07ed 00       		.byte	0
 2450 07ee 00       		.byte	0
 2451 07ef 23       		.uleb128 0x23
 2452 07f0 07040000 		.4byte	.LASF72
 2453 07f4 04       		.byte	0x4
 2454 07f5 39       		.byte	0x39
 2455 07f6 FC070000 		.4byte	0x7fc
 2456 07fa 01       		.byte	0x1
 2457 07fb 01       		.byte	0x1
 2458 07fc 05       		.uleb128 0x5
 2459 07fd DF070000 		.4byte	0x7df
 2460 0801 23       		.uleb128 0x23
 2461 0802 CB040000 		.4byte	.LASF73
 2462 0806 04       		.byte	0x4
 2463 0807 3A       		.byte	0x3a
 2464 0808 0E080000 		.4byte	0x80e
 2465 080c 01       		.byte	0x1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 68


 2466 080d 01       		.byte	0x1
 2467 080e 05       		.uleb128 0x5
 2468 080f DF070000 		.4byte	0x7df
 2469 0813 23       		.uleb128 0x23
 2470 0814 B6000000 		.4byte	.LASF74
 2471 0818 04       		.byte	0x4
 2472 0819 3B       		.byte	0x3b
 2473 081a A5000000 		.4byte	0xa5
 2474 081e 01       		.byte	0x1
 2475 081f 01       		.byte	0x1
 2476 0820 23       		.uleb128 0x23
 2477 0821 27050000 		.4byte	.LASF75
 2478 0825 04       		.byte	0x4
 2479 0826 3C       		.byte	0x3c
 2480 0827 2D080000 		.4byte	0x82d
 2481 082b 01       		.byte	0x1
 2482 082c 01       		.byte	0x1
 2483 082d 05       		.uleb128 0x5
 2484 082e DF070000 		.4byte	0x7df
 2485 0832 23       		.uleb128 0x23
 2486 0833 42020000 		.4byte	.LASF76
 2487 0837 04       		.byte	0x4
 2488 0838 3D       		.byte	0x3d
 2489 0839 E0030000 		.4byte	0x3e0
 2490 083d 01       		.byte	0x1
 2491 083e 01       		.byte	0x1
 2492 083f 20       		.uleb128 0x20
 2493 0840 38010000 		.4byte	0x138
 2494 0844 4F080000 		.4byte	0x84f
 2495 0848 21       		.uleb128 0x21
 2496 0849 AA000000 		.4byte	0xaa
 2497 084d 08       		.byte	0x8
 2498 084e 00       		.byte	0
 2499 084f 23       		.uleb128 0x23
 2500 0850 4B030000 		.4byte	.LASF77
 2501 0854 04       		.byte	0x4
 2502 0855 3F       		.byte	0x3f
 2503 0856 5C080000 		.4byte	0x85c
 2504 085a 01       		.byte	0x1
 2505 085b 01       		.byte	0x1
 2506 085c 05       		.uleb128 0x5
 2507 085d 3F080000 		.4byte	0x83f
 2508 0861 23       		.uleb128 0x23
 2509 0862 2C000000 		.4byte	.LASF78
 2510 0866 04       		.byte	0x4
 2511 0867 40       		.byte	0x40
 2512 0868 6E080000 		.4byte	0x86e
 2513 086c 01       		.byte	0x1
 2514 086d 01       		.byte	0x1
 2515 086e 05       		.uleb128 0x5
 2516 086f 1A020000 		.4byte	0x21a
 2517 0873 24       		.uleb128 0x24
 2518 0874 01       		.byte	0x1
 2519 0875 33040000 		.4byte	.LASF80
 2520 0879 04       		.byte	0x4
 2521 087a 63       		.byte	0x63
 2522 087b 01       		.byte	0x1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 69


 2523 087c 6F000000 		.4byte	0x6f
 2524 0880 01       		.byte	0x1
 2525 0881 24       		.uleb128 0x24
 2526 0882 01       		.byte	0x1
 2527 0883 3C000000 		.4byte	.LASF81
 2528 0887 04       		.byte	0x4
 2529 0888 56       		.byte	0x56
 2530 0889 01       		.byte	0x1
 2531 088a 6F000000 		.4byte	0x6f
 2532 088e 01       		.byte	0x1
 2533 088f 24       		.uleb128 0x24
 2534 0890 01       		.byte	0x1
 2535 0891 09050000 		.4byte	.LASF82
 2536 0895 04       		.byte	0x4
 2537 0896 B2       		.byte	0xb2
 2538 0897 01       		.byte	0x1
 2539 0898 6F000000 		.4byte	0x6f
 2540 089c 01       		.byte	0x1
 2541 089d 00       		.byte	0
 2542              		.section	.debug_abbrev,"",%progbits
 2543              	.Ldebug_abbrev0:
 2544 0000 01       		.uleb128 0x1
 2545 0001 11       		.uleb128 0x11
 2546 0002 01       		.byte	0x1
 2547 0003 25       		.uleb128 0x25
 2548 0004 0E       		.uleb128 0xe
 2549 0005 13       		.uleb128 0x13
 2550 0006 0B       		.uleb128 0xb
 2551 0007 03       		.uleb128 0x3
 2552 0008 0E       		.uleb128 0xe
 2553 0009 1B       		.uleb128 0x1b
 2554 000a 0E       		.uleb128 0xe
 2555 000b 55       		.uleb128 0x55
 2556 000c 06       		.uleb128 0x6
 2557 000d 11       		.uleb128 0x11
 2558 000e 01       		.uleb128 0x1
 2559 000f 52       		.uleb128 0x52
 2560 0010 01       		.uleb128 0x1
 2561 0011 10       		.uleb128 0x10
 2562 0012 06       		.uleb128 0x6
 2563 0013 00       		.byte	0
 2564 0014 00       		.byte	0
 2565 0015 02       		.uleb128 0x2
 2566 0016 24       		.uleb128 0x24
 2567 0017 00       		.byte	0
 2568 0018 0B       		.uleb128 0xb
 2569 0019 0B       		.uleb128 0xb
 2570 001a 3E       		.uleb128 0x3e
 2571 001b 0B       		.uleb128 0xb
 2572 001c 03       		.uleb128 0x3
 2573 001d 0E       		.uleb128 0xe
 2574 001e 00       		.byte	0
 2575 001f 00       		.byte	0
 2576 0020 03       		.uleb128 0x3
 2577 0021 24       		.uleb128 0x24
 2578 0022 00       		.byte	0
 2579 0023 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 70


 2580 0024 0B       		.uleb128 0xb
 2581 0025 3E       		.uleb128 0x3e
 2582 0026 0B       		.uleb128 0xb
 2583 0027 03       		.uleb128 0x3
 2584 0028 08       		.uleb128 0x8
 2585 0029 00       		.byte	0
 2586 002a 00       		.byte	0
 2587 002b 04       		.uleb128 0x4
 2588 002c 16       		.uleb128 0x16
 2589 002d 00       		.byte	0
 2590 002e 03       		.uleb128 0x3
 2591 002f 0E       		.uleb128 0xe
 2592 0030 3A       		.uleb128 0x3a
 2593 0031 0B       		.uleb128 0xb
 2594 0032 3B       		.uleb128 0x3b
 2595 0033 0B       		.uleb128 0xb
 2596 0034 49       		.uleb128 0x49
 2597 0035 13       		.uleb128 0x13
 2598 0036 00       		.byte	0
 2599 0037 00       		.byte	0
 2600 0038 05       		.uleb128 0x5
 2601 0039 35       		.uleb128 0x35
 2602 003a 00       		.byte	0
 2603 003b 49       		.uleb128 0x49
 2604 003c 13       		.uleb128 0x13
 2605 003d 00       		.byte	0
 2606 003e 00       		.byte	0
 2607 003f 06       		.uleb128 0x6
 2608 0040 13       		.uleb128 0x13
 2609 0041 01       		.byte	0x1
 2610 0042 0B       		.uleb128 0xb
 2611 0043 0B       		.uleb128 0xb
 2612 0044 3A       		.uleb128 0x3a
 2613 0045 0B       		.uleb128 0xb
 2614 0046 3B       		.uleb128 0x3b
 2615 0047 0B       		.uleb128 0xb
 2616 0048 01       		.uleb128 0x1
 2617 0049 13       		.uleb128 0x13
 2618 004a 00       		.byte	0
 2619 004b 00       		.byte	0
 2620 004c 07       		.uleb128 0x7
 2621 004d 0D       		.uleb128 0xd
 2622 004e 00       		.byte	0
 2623 004f 03       		.uleb128 0x3
 2624 0050 0E       		.uleb128 0xe
 2625 0051 3A       		.uleb128 0x3a
 2626 0052 0B       		.uleb128 0xb
 2627 0053 3B       		.uleb128 0x3b
 2628 0054 0B       		.uleb128 0xb
 2629 0055 49       		.uleb128 0x49
 2630 0056 13       		.uleb128 0x13
 2631 0057 38       		.uleb128 0x38
 2632 0058 0A       		.uleb128 0xa
 2633 0059 00       		.byte	0
 2634 005a 00       		.byte	0
 2635 005b 08       		.uleb128 0x8
 2636 005c 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 71


 2637 005d 00       		.byte	0
 2638 005e 0B       		.uleb128 0xb
 2639 005f 0B       		.uleb128 0xb
 2640 0060 49       		.uleb128 0x49
 2641 0061 13       		.uleb128 0x13
 2642 0062 00       		.byte	0
 2643 0063 00       		.byte	0
 2644 0064 09       		.uleb128 0x9
 2645 0065 0D       		.uleb128 0xd
 2646 0066 00       		.byte	0
 2647 0067 03       		.uleb128 0x3
 2648 0068 08       		.uleb128 0x8
 2649 0069 3A       		.uleb128 0x3a
 2650 006a 0B       		.uleb128 0xb
 2651 006b 3B       		.uleb128 0x3b
 2652 006c 0B       		.uleb128 0xb
 2653 006d 49       		.uleb128 0x49
 2654 006e 13       		.uleb128 0x13
 2655 006f 38       		.uleb128 0x38
 2656 0070 0A       		.uleb128 0xa
 2657 0071 00       		.byte	0
 2658 0072 00       		.byte	0
 2659 0073 0A       		.uleb128 0xa
 2660 0074 26       		.uleb128 0x26
 2661 0075 00       		.byte	0
 2662 0076 00       		.byte	0
 2663 0077 00       		.byte	0
 2664 0078 0B       		.uleb128 0xb
 2665 0079 2E       		.uleb128 0x2e
 2666 007a 00       		.byte	0
 2667 007b 3F       		.uleb128 0x3f
 2668 007c 0C       		.uleb128 0xc
 2669 007d 03       		.uleb128 0x3
 2670 007e 0E       		.uleb128 0xe
 2671 007f 3A       		.uleb128 0x3a
 2672 0080 0B       		.uleb128 0xb
 2673 0081 3B       		.uleb128 0x3b
 2674 0082 05       		.uleb128 0x5
 2675 0083 27       		.uleb128 0x27
 2676 0084 0C       		.uleb128 0xc
 2677 0085 49       		.uleb128 0x49
 2678 0086 13       		.uleb128 0x13
 2679 0087 20       		.uleb128 0x20
 2680 0088 0B       		.uleb128 0xb
 2681 0089 00       		.byte	0
 2682 008a 00       		.byte	0
 2683 008b 0C       		.uleb128 0xc
 2684 008c 26       		.uleb128 0x26
 2685 008d 00       		.byte	0
 2686 008e 49       		.uleb128 0x49
 2687 008f 13       		.uleb128 0x13
 2688 0090 00       		.byte	0
 2689 0091 00       		.byte	0
 2690 0092 0D       		.uleb128 0xd
 2691 0093 2E       		.uleb128 0x2e
 2692 0094 01       		.byte	0x1
 2693 0095 3F       		.uleb128 0x3f
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 72


 2694 0096 0C       		.uleb128 0xc
 2695 0097 03       		.uleb128 0x3
 2696 0098 0E       		.uleb128 0xe
 2697 0099 3A       		.uleb128 0x3a
 2698 009a 0B       		.uleb128 0xb
 2699 009b 3B       		.uleb128 0x3b
 2700 009c 05       		.uleb128 0x5
 2701 009d 27       		.uleb128 0x27
 2702 009e 0C       		.uleb128 0xc
 2703 009f 11       		.uleb128 0x11
 2704 00a0 01       		.uleb128 0x1
 2705 00a1 12       		.uleb128 0x12
 2706 00a2 01       		.uleb128 0x1
 2707 00a3 40       		.uleb128 0x40
 2708 00a4 06       		.uleb128 0x6
 2709 00a5 9742     		.uleb128 0x2117
 2710 00a7 0C       		.uleb128 0xc
 2711 00a8 01       		.uleb128 0x1
 2712 00a9 13       		.uleb128 0x13
 2713 00aa 00       		.byte	0
 2714 00ab 00       		.byte	0
 2715 00ac 0E       		.uleb128 0xe
 2716 00ad 34       		.uleb128 0x34
 2717 00ae 00       		.byte	0
 2718 00af 03       		.uleb128 0x3
 2719 00b0 08       		.uleb128 0x8
 2720 00b1 3A       		.uleb128 0x3a
 2721 00b2 0B       		.uleb128 0xb
 2722 00b3 3B       		.uleb128 0x3b
 2723 00b4 05       		.uleb128 0x5
 2724 00b5 49       		.uleb128 0x49
 2725 00b6 13       		.uleb128 0x13
 2726 00b7 02       		.uleb128 0x2
 2727 00b8 06       		.uleb128 0x6
 2728 00b9 00       		.byte	0
 2729 00ba 00       		.byte	0
 2730 00bb 0F       		.uleb128 0xf
 2731 00bc 2E       		.uleb128 0x2e
 2732 00bd 01       		.byte	0x1
 2733 00be 3F       		.uleb128 0x3f
 2734 00bf 0C       		.uleb128 0xc
 2735 00c0 03       		.uleb128 0x3
 2736 00c1 0E       		.uleb128 0xe
 2737 00c2 3A       		.uleb128 0x3a
 2738 00c3 0B       		.uleb128 0xb
 2739 00c4 3B       		.uleb128 0x3b
 2740 00c5 05       		.uleb128 0x5
 2741 00c6 27       		.uleb128 0x27
 2742 00c7 0C       		.uleb128 0xc
 2743 00c8 49       		.uleb128 0x49
 2744 00c9 13       		.uleb128 0x13
 2745 00ca 11       		.uleb128 0x11
 2746 00cb 01       		.uleb128 0x1
 2747 00cc 12       		.uleb128 0x12
 2748 00cd 01       		.uleb128 0x1
 2749 00ce 40       		.uleb128 0x40
 2750 00cf 0A       		.uleb128 0xa
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 73


 2751 00d0 9742     		.uleb128 0x2117
 2752 00d2 0C       		.uleb128 0xc
 2753 00d3 01       		.uleb128 0x1
 2754 00d4 13       		.uleb128 0x13
 2755 00d5 00       		.byte	0
 2756 00d6 00       		.byte	0
 2757 00d7 10       		.uleb128 0x10
 2758 00d8 05       		.uleb128 0x5
 2759 00d9 00       		.byte	0
 2760 00da 03       		.uleb128 0x3
 2761 00db 08       		.uleb128 0x8
 2762 00dc 3A       		.uleb128 0x3a
 2763 00dd 0B       		.uleb128 0xb
 2764 00de 3B       		.uleb128 0x3b
 2765 00df 05       		.uleb128 0x5
 2766 00e0 49       		.uleb128 0x49
 2767 00e1 13       		.uleb128 0x13
 2768 00e2 02       		.uleb128 0x2
 2769 00e3 06       		.uleb128 0x6
 2770 00e4 00       		.byte	0
 2771 00e5 00       		.byte	0
 2772 00e6 11       		.uleb128 0x11
 2773 00e7 34       		.uleb128 0x34
 2774 00e8 00       		.byte	0
 2775 00e9 03       		.uleb128 0x3
 2776 00ea 0E       		.uleb128 0xe
 2777 00eb 3A       		.uleb128 0x3a
 2778 00ec 0B       		.uleb128 0xb
 2779 00ed 3B       		.uleb128 0x3b
 2780 00ee 05       		.uleb128 0x5
 2781 00ef 49       		.uleb128 0x49
 2782 00f0 13       		.uleb128 0x13
 2783 00f1 02       		.uleb128 0x2
 2784 00f2 06       		.uleb128 0x6
 2785 00f3 00       		.byte	0
 2786 00f4 00       		.byte	0
 2787 00f5 12       		.uleb128 0x12
 2788 00f6 898201   		.uleb128 0x4109
 2789 00f9 00       		.byte	0
 2790 00fa 11       		.uleb128 0x11
 2791 00fb 01       		.uleb128 0x1
 2792 00fc 31       		.uleb128 0x31
 2793 00fd 13       		.uleb128 0x13
 2794 00fe 00       		.byte	0
 2795 00ff 00       		.byte	0
 2796 0100 13       		.uleb128 0x13
 2797 0101 2E       		.uleb128 0x2e
 2798 0102 00       		.byte	0
 2799 0103 31       		.uleb128 0x31
 2800 0104 13       		.uleb128 0x13
 2801 0105 11       		.uleb128 0x11
 2802 0106 01       		.uleb128 0x1
 2803 0107 12       		.uleb128 0x12
 2804 0108 01       		.uleb128 0x1
 2805 0109 40       		.uleb128 0x40
 2806 010a 0A       		.uleb128 0xa
 2807 010b 9742     		.uleb128 0x2117
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 74


 2808 010d 0C       		.uleb128 0xc
 2809 010e 00       		.byte	0
 2810 010f 00       		.byte	0
 2811 0110 14       		.uleb128 0x14
 2812 0111 2E       		.uleb128 0x2e
 2813 0112 01       		.byte	0x1
 2814 0113 3F       		.uleb128 0x3f
 2815 0114 0C       		.uleb128 0xc
 2816 0115 03       		.uleb128 0x3
 2817 0116 0E       		.uleb128 0xe
 2818 0117 3A       		.uleb128 0x3a
 2819 0118 0B       		.uleb128 0xb
 2820 0119 3B       		.uleb128 0x3b
 2821 011a 05       		.uleb128 0x5
 2822 011b 27       		.uleb128 0x27
 2823 011c 0C       		.uleb128 0xc
 2824 011d 49       		.uleb128 0x49
 2825 011e 13       		.uleb128 0x13
 2826 011f 11       		.uleb128 0x11
 2827 0120 01       		.uleb128 0x1
 2828 0121 12       		.uleb128 0x12
 2829 0122 01       		.uleb128 0x1
 2830 0123 40       		.uleb128 0x40
 2831 0124 06       		.uleb128 0x6
 2832 0125 9742     		.uleb128 0x2117
 2833 0127 0C       		.uleb128 0xc
 2834 0128 01       		.uleb128 0x1
 2835 0129 13       		.uleb128 0x13
 2836 012a 00       		.byte	0
 2837 012b 00       		.byte	0
 2838 012c 15       		.uleb128 0x15
 2839 012d 05       		.uleb128 0x5
 2840 012e 00       		.byte	0
 2841 012f 03       		.uleb128 0x3
 2842 0130 0E       		.uleb128 0xe
 2843 0131 3A       		.uleb128 0x3a
 2844 0132 0B       		.uleb128 0xb
 2845 0133 3B       		.uleb128 0x3b
 2846 0134 05       		.uleb128 0x5
 2847 0135 49       		.uleb128 0x49
 2848 0136 13       		.uleb128 0x13
 2849 0137 02       		.uleb128 0x2
 2850 0138 06       		.uleb128 0x6
 2851 0139 00       		.byte	0
 2852 013a 00       		.byte	0
 2853 013b 16       		.uleb128 0x16
 2854 013c 898201   		.uleb128 0x4109
 2855 013f 01       		.byte	0x1
 2856 0140 11       		.uleb128 0x11
 2857 0141 01       		.uleb128 0x1
 2858 0142 31       		.uleb128 0x31
 2859 0143 13       		.uleb128 0x13
 2860 0144 01       		.uleb128 0x1
 2861 0145 13       		.uleb128 0x13
 2862 0146 00       		.byte	0
 2863 0147 00       		.byte	0
 2864 0148 17       		.uleb128 0x17
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 75


 2865 0149 8A8201   		.uleb128 0x410a
 2866 014c 00       		.byte	0
 2867 014d 02       		.uleb128 0x2
 2868 014e 0A       		.uleb128 0xa
 2869 014f 9142     		.uleb128 0x2111
 2870 0151 0A       		.uleb128 0xa
 2871 0152 00       		.byte	0
 2872 0153 00       		.byte	0
 2873 0154 18       		.uleb128 0x18
 2874 0155 898201   		.uleb128 0x4109
 2875 0158 00       		.byte	0
 2876 0159 11       		.uleb128 0x11
 2877 015a 01       		.uleb128 0x1
 2878 015b 9542     		.uleb128 0x2115
 2879 015d 0C       		.uleb128 0xc
 2880 015e 31       		.uleb128 0x31
 2881 015f 13       		.uleb128 0x13
 2882 0160 00       		.byte	0
 2883 0161 00       		.byte	0
 2884 0162 19       		.uleb128 0x19
 2885 0163 2E       		.uleb128 0x2e
 2886 0164 01       		.byte	0x1
 2887 0165 3F       		.uleb128 0x3f
 2888 0166 0C       		.uleb128 0xc
 2889 0167 03       		.uleb128 0x3
 2890 0168 0E       		.uleb128 0xe
 2891 0169 3A       		.uleb128 0x3a
 2892 016a 0B       		.uleb128 0xb
 2893 016b 3B       		.uleb128 0x3b
 2894 016c 05       		.uleb128 0x5
 2895 016d 27       		.uleb128 0x27
 2896 016e 0C       		.uleb128 0xc
 2897 016f 11       		.uleb128 0x11
 2898 0170 01       		.uleb128 0x1
 2899 0171 12       		.uleb128 0x12
 2900 0172 01       		.uleb128 0x1
 2901 0173 40       		.uleb128 0x40
 2902 0174 0A       		.uleb128 0xa
 2903 0175 9742     		.uleb128 0x2117
 2904 0177 0C       		.uleb128 0xc
 2905 0178 01       		.uleb128 0x1
 2906 0179 13       		.uleb128 0x13
 2907 017a 00       		.byte	0
 2908 017b 00       		.byte	0
 2909 017c 1A       		.uleb128 0x1a
 2910 017d 34       		.uleb128 0x34
 2911 017e 00       		.byte	0
 2912 017f 03       		.uleb128 0x3
 2913 0180 0E       		.uleb128 0xe
 2914 0181 3A       		.uleb128 0x3a
 2915 0182 0B       		.uleb128 0xb
 2916 0183 3B       		.uleb128 0x3b
 2917 0184 05       		.uleb128 0x5
 2918 0185 49       		.uleb128 0x49
 2919 0186 13       		.uleb128 0x13
 2920 0187 1C       		.uleb128 0x1c
 2921 0188 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 76


 2922 0189 00       		.byte	0
 2923 018a 00       		.byte	0
 2924 018b 1B       		.uleb128 0x1b
 2925 018c 34       		.uleb128 0x34
 2926 018d 00       		.byte	0
 2927 018e 03       		.uleb128 0x3
 2928 018f 0E       		.uleb128 0xe
 2929 0190 3A       		.uleb128 0x3a
 2930 0191 0B       		.uleb128 0xb
 2931 0192 3B       		.uleb128 0x3b
 2932 0193 05       		.uleb128 0x5
 2933 0194 49       		.uleb128 0x49
 2934 0195 13       		.uleb128 0x13
 2935 0196 02       		.uleb128 0x2
 2936 0197 0A       		.uleb128 0xa
 2937 0198 00       		.byte	0
 2938 0199 00       		.byte	0
 2939 019a 1C       		.uleb128 0x1c
 2940 019b 2E       		.uleb128 0x2e
 2941 019c 01       		.byte	0x1
 2942 019d 3F       		.uleb128 0x3f
 2943 019e 0C       		.uleb128 0xc
 2944 019f 03       		.uleb128 0x3
 2945 01a0 0E       		.uleb128 0xe
 2946 01a1 3A       		.uleb128 0x3a
 2947 01a2 0B       		.uleb128 0xb
 2948 01a3 3B       		.uleb128 0x3b
 2949 01a4 0B       		.uleb128 0xb
 2950 01a5 27       		.uleb128 0x27
 2951 01a6 0C       		.uleb128 0xc
 2952 01a7 49       		.uleb128 0x49
 2953 01a8 13       		.uleb128 0x13
 2954 01a9 11       		.uleb128 0x11
 2955 01aa 01       		.uleb128 0x1
 2956 01ab 12       		.uleb128 0x12
 2957 01ac 01       		.uleb128 0x1
 2958 01ad 40       		.uleb128 0x40
 2959 01ae 06       		.uleb128 0x6
 2960 01af 9742     		.uleb128 0x2117
 2961 01b1 0C       		.uleb128 0xc
 2962 01b2 01       		.uleb128 0x1
 2963 01b3 13       		.uleb128 0x13
 2964 01b4 00       		.byte	0
 2965 01b5 00       		.byte	0
 2966 01b6 1D       		.uleb128 0x1d
 2967 01b7 34       		.uleb128 0x34
 2968 01b8 00       		.byte	0
 2969 01b9 03       		.uleb128 0x3
 2970 01ba 0E       		.uleb128 0xe
 2971 01bb 3A       		.uleb128 0x3a
 2972 01bc 0B       		.uleb128 0xb
 2973 01bd 3B       		.uleb128 0x3b
 2974 01be 0B       		.uleb128 0xb
 2975 01bf 49       		.uleb128 0x49
 2976 01c0 13       		.uleb128 0x13
 2977 01c1 02       		.uleb128 0x2
 2978 01c2 06       		.uleb128 0x6
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 77


 2979 01c3 00       		.byte	0
 2980 01c4 00       		.byte	0
 2981 01c5 1E       		.uleb128 0x1e
 2982 01c6 34       		.uleb128 0x34
 2983 01c7 00       		.byte	0
 2984 01c8 03       		.uleb128 0x3
 2985 01c9 0E       		.uleb128 0xe
 2986 01ca 3A       		.uleb128 0x3a
 2987 01cb 0B       		.uleb128 0xb
 2988 01cc 3B       		.uleb128 0x3b
 2989 01cd 0B       		.uleb128 0xb
 2990 01ce 49       		.uleb128 0x49
 2991 01cf 13       		.uleb128 0x13
 2992 01d0 02       		.uleb128 0x2
 2993 01d1 0A       		.uleb128 0xa
 2994 01d2 00       		.byte	0
 2995 01d3 00       		.byte	0
 2996 01d4 1F       		.uleb128 0x1f
 2997 01d5 1D       		.uleb128 0x1d
 2998 01d6 00       		.byte	0
 2999 01d7 31       		.uleb128 0x31
 3000 01d8 13       		.uleb128 0x13
 3001 01d9 11       		.uleb128 0x11
 3002 01da 01       		.uleb128 0x1
 3003 01db 12       		.uleb128 0x12
 3004 01dc 01       		.uleb128 0x1
 3005 01dd 58       		.uleb128 0x58
 3006 01de 0B       		.uleb128 0xb
 3007 01df 59       		.uleb128 0x59
 3008 01e0 0B       		.uleb128 0xb
 3009 01e1 00       		.byte	0
 3010 01e2 00       		.byte	0
 3011 01e3 20       		.uleb128 0x20
 3012 01e4 01       		.uleb128 0x1
 3013 01e5 01       		.byte	0x1
 3014 01e6 49       		.uleb128 0x49
 3015 01e7 13       		.uleb128 0x13
 3016 01e8 01       		.uleb128 0x1
 3017 01e9 13       		.uleb128 0x13
 3018 01ea 00       		.byte	0
 3019 01eb 00       		.byte	0
 3020 01ec 21       		.uleb128 0x21
 3021 01ed 21       		.uleb128 0x21
 3022 01ee 00       		.byte	0
 3023 01ef 49       		.uleb128 0x49
 3024 01f0 13       		.uleb128 0x13
 3025 01f1 2F       		.uleb128 0x2f
 3026 01f2 0B       		.uleb128 0xb
 3027 01f3 00       		.byte	0
 3028 01f4 00       		.byte	0
 3029 01f5 22       		.uleb128 0x22
 3030 01f6 34       		.uleb128 0x34
 3031 01f7 00       		.byte	0
 3032 01f8 03       		.uleb128 0x3
 3033 01f9 0E       		.uleb128 0xe
 3034 01fa 3A       		.uleb128 0x3a
 3035 01fb 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 78


 3036 01fc 3B       		.uleb128 0x3b
 3037 01fd 05       		.uleb128 0x5
 3038 01fe 49       		.uleb128 0x49
 3039 01ff 13       		.uleb128 0x13
 3040 0200 3F       		.uleb128 0x3f
 3041 0201 0C       		.uleb128 0xc
 3042 0202 3C       		.uleb128 0x3c
 3043 0203 0C       		.uleb128 0xc
 3044 0204 00       		.byte	0
 3045 0205 00       		.byte	0
 3046 0206 23       		.uleb128 0x23
 3047 0207 34       		.uleb128 0x34
 3048 0208 00       		.byte	0
 3049 0209 03       		.uleb128 0x3
 3050 020a 0E       		.uleb128 0xe
 3051 020b 3A       		.uleb128 0x3a
 3052 020c 0B       		.uleb128 0xb
 3053 020d 3B       		.uleb128 0x3b
 3054 020e 0B       		.uleb128 0xb
 3055 020f 49       		.uleb128 0x49
 3056 0210 13       		.uleb128 0x13
 3057 0211 3F       		.uleb128 0x3f
 3058 0212 0C       		.uleb128 0xc
 3059 0213 3C       		.uleb128 0x3c
 3060 0214 0C       		.uleb128 0xc
 3061 0215 00       		.byte	0
 3062 0216 00       		.byte	0
 3063 0217 24       		.uleb128 0x24
 3064 0218 2E       		.uleb128 0x2e
 3065 0219 00       		.byte	0
 3066 021a 3F       		.uleb128 0x3f
 3067 021b 0C       		.uleb128 0xc
 3068 021c 03       		.uleb128 0x3
 3069 021d 0E       		.uleb128 0xe
 3070 021e 3A       		.uleb128 0x3a
 3071 021f 0B       		.uleb128 0xb
 3072 0220 3B       		.uleb128 0x3b
 3073 0221 0B       		.uleb128 0xb
 3074 0222 27       		.uleb128 0x27
 3075 0223 0C       		.uleb128 0xc
 3076 0224 49       		.uleb128 0x49
 3077 0225 13       		.uleb128 0x13
 3078 0226 3C       		.uleb128 0x3c
 3079 0227 0C       		.uleb128 0xc
 3080 0228 00       		.byte	0
 3081 0229 00       		.byte	0
 3082 022a 00       		.byte	0
 3083              		.section	.debug_loc,"",%progbits
 3084              	.Ldebug_loc0:
 3085              	.LLST0:
 3086 0000 00000000 		.4byte	.LFB1
 3087 0004 02000000 		.4byte	.LCFI0
 3088 0008 0200     		.2byte	0x2
 3089 000a 7D       		.byte	0x7d
 3090 000b 00       		.sleb128 0
 3091 000c 02000000 		.4byte	.LCFI0
 3092 0010 B4000000 		.4byte	.LFE1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 79


 3093 0014 0200     		.2byte	0x2
 3094 0016 7D       		.byte	0x7d
 3095 0017 0C       		.sleb128 12
 3096 0018 00000000 		.4byte	0
 3097 001c 00000000 		.4byte	0
 3098              	.LLST1:
 3099 0020 00000000 		.4byte	.LVL0
 3100 0024 04000000 		.4byte	.LVL1
 3101 0028 0200     		.2byte	0x2
 3102 002a 31       		.byte	0x31
 3103 002b 9F       		.byte	0x9f
 3104 002c 0E000000 		.4byte	.LVL2
 3105 0030 48000000 		.4byte	.LVL4
 3106 0034 0100     		.2byte	0x1
 3107 0036 52       		.byte	0x52
 3108 0037 48000000 		.4byte	.LVL4
 3109 003b 7C000000 		.4byte	.LVL5
 3110 003f 0300     		.2byte	0x3
 3111 0041 72       		.byte	0x72
 3112 0042 7F       		.sleb128 -1
 3113 0043 9F       		.byte	0x9f
 3114 0044 7C000000 		.4byte	.LVL5
 3115 0048 8C000000 		.4byte	.LVL7
 3116 004c 0100     		.2byte	0x1
 3117 004e 52       		.byte	0x52
 3118 004f 00000000 		.4byte	0
 3119 0053 00000000 		.4byte	0
 3120              	.LLST2:
 3121 0057 00000000 		.4byte	.LVL0
 3122 005b 04000000 		.4byte	.LVL1
 3123 005f 0200     		.2byte	0x2
 3124 0061 30       		.byte	0x30
 3125 0062 9F       		.byte	0x9f
 3126 0063 0E000000 		.4byte	.LVL2
 3127 0067 18000000 		.4byte	.LVL3
 3128 006b 0100     		.2byte	0x1
 3129 006d 50       		.byte	0x50
 3130 006e 18000000 		.4byte	.LVL3
 3131 0072 7C000000 		.4byte	.LVL5
 3132 0076 0100     		.2byte	0x1
 3133 0078 53       		.byte	0x53
 3134 0079 88000000 		.4byte	.LVL6
 3135 007d B4000000 		.4byte	.LFE1
 3136 0081 0100     		.2byte	0x1
 3137 0083 50       		.byte	0x50
 3138 0084 00000000 		.4byte	0
 3139 0088 00000000 		.4byte	0
 3140              	.LLST3:
 3141 008c 00000000 		.4byte	.LVL8
 3142 0090 10000000 		.4byte	.LVL11
 3143 0094 0100     		.2byte	0x1
 3144 0096 50       		.byte	0x50
 3145 0097 10000000 		.4byte	.LVL11
 3146 009b 1C000000 		.4byte	.LFE4
 3147 009f 0400     		.2byte	0x4
 3148 00a1 F3       		.byte	0xf3
 3149 00a2 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 80


 3150 00a3 50       		.byte	0x50
 3151 00a4 9F       		.byte	0x9f
 3152 00a5 00000000 		.4byte	0
 3153 00a9 00000000 		.4byte	0
 3154              	.LLST4:
 3155 00ad 06000000 		.4byte	.LVL9
 3156 00b1 0C000000 		.4byte	.LVL10
 3157 00b5 0700     		.2byte	0x7
 3158 00b7 72       		.byte	0x72
 3159 00b8 00       		.sleb128 0
 3160 00b9 08       		.byte	0x8
 3161 00ba FF       		.byte	0xff
 3162 00bb 1A       		.byte	0x1a
 3163 00bc 33       		.byte	0x33
 3164 00bd 24       		.byte	0x24
 3165 00be 00000000 		.4byte	0
 3166 00c2 00000000 		.4byte	0
 3167              	.LLST5:
 3168 00c6 00000000 		.4byte	.LFB3
 3169 00ca 02000000 		.4byte	.LCFI1
 3170 00ce 0200     		.2byte	0x2
 3171 00d0 7D       		.byte	0x7d
 3172 00d1 00       		.sleb128 0
 3173 00d2 02000000 		.4byte	.LCFI1
 3174 00d6 28010000 		.4byte	.LFE3
 3175 00da 0200     		.2byte	0x2
 3176 00dc 7D       		.byte	0x7d
 3177 00dd 18       		.sleb128 24
 3178 00de 00000000 		.4byte	0
 3179 00e2 00000000 		.4byte	0
 3180              	.LLST6:
 3181 00e6 18000000 		.4byte	.LVL13
 3182 00ea 1C000000 		.4byte	.LVL15
 3183 00ee 0200     		.2byte	0x2
 3184 00f0 70       		.byte	0x70
 3185 00f1 08       		.sleb128 8
 3186 00f2 1C000000 		.4byte	.LVL15
 3187 00f6 F4000000 		.4byte	.LVL28
 3188 00fa 0100     		.2byte	0x1
 3189 00fc 55       		.byte	0x55
 3190 00fd 00000000 		.4byte	0
 3191 0101 00000000 		.4byte	0
 3192              	.LLST7:
 3193 0105 4A000000 		.4byte	.LVL16
 3194 0109 98000000 		.4byte	.LVL23
 3195 010d 0100     		.2byte	0x1
 3196 010f 52       		.byte	0x52
 3197 0110 98000000 		.4byte	.LVL23
 3198 0114 EC000000 		.4byte	.LVL25
 3199 0118 0800     		.2byte	0x8
 3200 011a 73       		.byte	0x73
 3201 011b 7A       		.sleb128 -6
 3202 011c 94       		.byte	0x94
 3203 011d 01       		.byte	0x1
 3204 011e 08       		.byte	0x8
 3205 011f 7F       		.byte	0x7f
 3206 0120 1A       		.byte	0x1a
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 81


 3207 0121 9F       		.byte	0x9f
 3208 0122 00000000 		.4byte	0
 3209 0126 00000000 		.4byte	0
 3210              	.LLST8:
 3211 012a 18000000 		.4byte	.LVL13
 3212 012e 1C000000 		.4byte	.LVL15
 3213 0132 0200     		.2byte	0x2
 3214 0134 30       		.byte	0x30
 3215 0135 9F       		.byte	0x9f
 3216 0136 1C000000 		.4byte	.LVL15
 3217 013a EE000000 		.4byte	.LVL26
 3218 013e 0100     		.2byte	0x1
 3219 0140 50       		.byte	0x50
 3220 0141 EE000000 		.4byte	.LVL26
 3221 0145 F0000000 		.4byte	.LVL27
 3222 0149 0300     		.2byte	0x3
 3223 014b 70       		.byte	0x70
 3224 014c 7F       		.sleb128 -1
 3225 014d 9F       		.byte	0x9f
 3226 014e F0000000 		.4byte	.LVL27
 3227 0152 F4000000 		.4byte	.LVL28
 3228 0156 0100     		.2byte	0x1
 3229 0158 50       		.byte	0x50
 3230 0159 00000000 		.4byte	0
 3231 015d 00000000 		.4byte	0
 3232              	.LLST9:
 3233 0161 62000000 		.4byte	.LVL19
 3234 0165 74000000 		.4byte	.LVL20
 3235 0169 0100     		.2byte	0x1
 3236 016b 56       		.byte	0x56
 3237 016c 74000000 		.4byte	.LVL20
 3238 0170 76000000 		.4byte	.LVL21
 3239 0174 0700     		.2byte	0x7
 3240 0176 73       		.byte	0x73
 3241 0177 7B       		.sleb128 -5
 3242 0178 94       		.byte	0x94
 3243 0179 01       		.byte	0x1
 3244 017a 33       		.byte	0x33
 3245 017b 1A       		.byte	0x1a
 3246 017c 9F       		.byte	0x9f
 3247 017d 76000000 		.4byte	.LVL21
 3248 0181 82000000 		.4byte	.LVL22
 3249 0185 0100     		.2byte	0x1
 3250 0187 56       		.byte	0x56
 3251 0188 82000000 		.4byte	.LVL22
 3252 018c EC000000 		.4byte	.LVL25
 3253 0190 0700     		.2byte	0x7
 3254 0192 73       		.byte	0x73
 3255 0193 7B       		.sleb128 -5
 3256 0194 94       		.byte	0x94
 3257 0195 01       		.byte	0x1
 3258 0196 33       		.byte	0x33
 3259 0197 1A       		.byte	0x1a
 3260 0198 9F       		.byte	0x9f
 3261 0199 00000000 		.4byte	0
 3262 019d 00000000 		.4byte	0
 3263              	.LLST10:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 82


 3264 01a1 50000000 		.4byte	.LVL17
 3265 01a5 56000000 		.4byte	.LVL18
 3266 01a9 0100     		.2byte	0x1
 3267 01ab 54       		.byte	0x54
 3268 01ac 56000000 		.4byte	.LVL18
 3269 01b0 E6000000 		.4byte	.LVL24
 3270 01b4 0100     		.2byte	0x1
 3271 01b6 51       		.byte	0x51
 3272 01b7 E6000000 		.4byte	.LVL24
 3273 01bb EC000000 		.4byte	.LVL25
 3274 01bf 0700     		.2byte	0x7
 3275 01c1 74       		.byte	0x74
 3276 01c2 FBBEFEFF 		.sleb128 -1073766533
 3276      7B
 3277 01c7 9F       		.byte	0x9f
 3278 01c8 00000000 		.4byte	0
 3279 01cc 00000000 		.4byte	0
 3280              	.LLST11:
 3281 01d0 14000000 		.4byte	.LVL12
 3282 01d4 1C000000 		.4byte	.LVL15
 3283 01d8 0300     		.2byte	0x3
 3284 01da 70       		.byte	0x70
 3285 01db 08       		.sleb128 8
 3286 01dc 9F       		.byte	0x9f
 3287 01dd 00000000 		.4byte	0
 3288 01e1 00000000 		.4byte	0
 3289              	.LLST12:
 3290 01e5 18000000 		.4byte	.LVL13
 3291 01e9 1A000000 		.4byte	.LVL14
 3292 01ed 0100     		.2byte	0x1
 3293 01ef 53       		.byte	0x53
 3294 01f0 1A000000 		.4byte	.LVL14
 3295 01f4 1C000000 		.4byte	.LVL15
 3296 01f8 0200     		.2byte	0x2
 3297 01fa 70       		.byte	0x70
 3298 01fb 0C       		.sleb128 12
 3299 01fc 00000000 		.4byte	0
 3300 0200 00000000 		.4byte	0
 3301              	.LLST13:
 3302 0204 00000000 		.4byte	.LFB6
 3303 0208 02000000 		.4byte	.LCFI2
 3304 020c 0200     		.2byte	0x2
 3305 020e 7D       		.byte	0x7d
 3306 020f 00       		.sleb128 0
 3307 0210 02000000 		.4byte	.LCFI2
 3308 0214 20000000 		.4byte	.LFE6
 3309 0218 0200     		.2byte	0x2
 3310 021a 7D       		.byte	0x7d
 3311 021b 08       		.sleb128 8
 3312 021c 00000000 		.4byte	0
 3313 0220 00000000 		.4byte	0
 3314              	.LLST14:
 3315 0224 0E000000 		.4byte	.LVL29
 3316 0228 12000000 		.4byte	.LVL30
 3317 022c 0100     		.2byte	0x1
 3318 022e 50       		.byte	0x50
 3319 022f 12000000 		.4byte	.LVL30
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 83


 3320 0233 16000000 		.4byte	.LVL31
 3321 0237 0800     		.2byte	0x8
 3322 0239 73       		.byte	0x73
 3323 023a 02       		.sleb128 2
 3324 023b 33       		.byte	0x33
 3325 023c 24       		.byte	0x24
 3326 023d 70       		.byte	0x70
 3327 023e 00       		.sleb128 0
 3328 023f 22       		.byte	0x22
 3329 0240 9F       		.byte	0x9f
 3330 0241 00000000 		.4byte	0
 3331 0245 00000000 		.4byte	0
 3332              	.LLST15:
 3333 0249 0E000000 		.4byte	.LVL29
 3334 024d 16000000 		.4byte	.LVL31
 3335 0251 0500     		.2byte	0x5
 3336 0253 70       		.byte	0x70
 3337 0254 04       		.sleb128 4
 3338 0255 06       		.byte	0x6
 3339 0256 23       		.byte	0x23
 3340 0257 04       		.uleb128 0x4
 3341 0258 16000000 		.4byte	.LVL31
 3342 025c 20000000 		.4byte	.LFE6
 3343 0260 0200     		.2byte	0x2
 3344 0262 72       		.byte	0x72
 3345 0263 04       		.sleb128 4
 3346 0264 00000000 		.4byte	0
 3347 0268 00000000 		.4byte	0
 3348              	.LLST16:
 3349 026c 00000000 		.4byte	.LFB2
 3350 0270 02000000 		.4byte	.LCFI3
 3351 0274 0200     		.2byte	0x2
 3352 0276 7D       		.byte	0x7d
 3353 0277 00       		.sleb128 0
 3354 0278 02000000 		.4byte	.LCFI3
 3355 027c 68010000 		.4byte	.LFE2
 3356 0280 0200     		.2byte	0x2
 3357 0282 7D       		.byte	0x7d
 3358 0283 18       		.sleb128 24
 3359 0284 00000000 		.4byte	0
 3360 0288 00000000 		.4byte	0
 3361              	.LLST17:
 3362 028c 00000000 		.4byte	.LVL32
 3363 0290 2A000000 		.4byte	.LVL34
 3364 0294 0100     		.2byte	0x1
 3365 0296 50       		.byte	0x50
 3366 0297 2A000000 		.4byte	.LVL34
 3367 029b 68010000 		.4byte	.LFE2
 3368 029f 0400     		.2byte	0x4
 3369 02a1 F3       		.byte	0xf3
 3370 02a2 01       		.uleb128 0x1
 3371 02a3 50       		.byte	0x50
 3372 02a4 9F       		.byte	0x9f
 3373 02a5 00000000 		.4byte	0
 3374 02a9 00000000 		.4byte	0
 3375              	.LLST18:
 3376 02ad 00000000 		.4byte	.LVL32
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 84


 3377 02b1 04000000 		.4byte	.LVL33
 3378 02b5 0200     		.2byte	0x2
 3379 02b7 30       		.byte	0x30
 3380 02b8 9F       		.byte	0x9f
 3381 02b9 64000000 		.4byte	.LVL39
 3382 02bd 02010000 		.4byte	.LVL51
 3383 02c1 0200     		.2byte	0x2
 3384 02c3 70       		.byte	0x70
 3385 02c4 08       		.sleb128 8
 3386 02c5 02010000 		.4byte	.LVL51
 3387 02c9 2E010000 		.4byte	.LVL55
 3388 02cd 0100     		.2byte	0x1
 3389 02cf 54       		.byte	0x54
 3390 02d0 2E010000 		.4byte	.LVL55
 3391 02d4 30010000 		.4byte	.LVL56
 3392 02d8 0200     		.2byte	0x2
 3393 02da 31       		.byte	0x31
 3394 02db 9F       		.byte	0x9f
 3395 02dc 00000000 		.4byte	0
 3396 02e0 00000000 		.4byte	0
 3397              	.LLST19:
 3398 02e4 66000000 		.4byte	.LVL40
 3399 02e8 6C000000 		.4byte	.LVL42
 3400 02ec 0200     		.2byte	0x2
 3401 02ee 30       		.byte	0x30
 3402 02ef 9F       		.byte	0x9f
 3403 02f0 6C000000 		.4byte	.LVL42
 3404 02f4 F2000000 		.4byte	.LVL48
 3405 02f8 0100     		.2byte	0x1
 3406 02fa 51       		.byte	0x51
 3407 02fb F2000000 		.4byte	.LVL48
 3408 02ff F4000000 		.4byte	.LVL49
 3409 0303 0300     		.2byte	0x3
 3410 0305 71       		.byte	0x71
 3411 0306 7F       		.sleb128 -1
 3412 0307 9F       		.byte	0x9f
 3413 0308 F4000000 		.4byte	.LVL49
 3414 030c 02010000 		.4byte	.LVL51
 3415 0310 0100     		.2byte	0x1
 3416 0312 51       		.byte	0x51
 3417 0313 00000000 		.4byte	0
 3418 0317 00000000 		.4byte	0
 3419              	.LLST20:
 3420 031b 64000000 		.4byte	.LVL39
 3421 031f 66000000 		.4byte	.LVL40
 3422 0323 0200     		.2byte	0x2
 3423 0325 31       		.byte	0x31
 3424 0326 9F       		.byte	0x9f
 3425 0327 FE000000 		.4byte	.LVL50
 3426 032b 02010000 		.4byte	.LVL51
 3427 032f 0200     		.2byte	0x2
 3428 0331 30       		.byte	0x30
 3429 0332 9F       		.byte	0x9f
 3430 0333 02010000 		.4byte	.LVL51
 3431 0337 1E010000 		.4byte	.LVL52
 3432 033b 0100     		.2byte	0x1
 3433 033d 52       		.byte	0x52
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 85


 3434 033e 1E010000 		.4byte	.LVL52
 3435 0342 22010000 		.4byte	.LVL53
 3436 0346 0300     		.2byte	0x3
 3437 0348 72       		.byte	0x72
 3438 0349 7F       		.sleb128 -1
 3439 034a 9F       		.byte	0x9f
 3440 034b 22010000 		.4byte	.LVL53
 3441 034f 27010000 		.4byte	.LVL54-1
 3442 0353 0100     		.2byte	0x1
 3443 0355 52       		.byte	0x52
 3444 0356 00000000 		.4byte	0
 3445 035a 00000000 		.4byte	0
 3446              	.LLST21:
 3447 035e B8000000 		.4byte	.LVL43
 3448 0362 CA000000 		.4byte	.LVL44
 3449 0366 0100     		.2byte	0x1
 3450 0368 56       		.byte	0x56
 3451 0369 CA000000 		.4byte	.LVL44
 3452 036d CC000000 		.4byte	.LVL45
 3453 0371 0700     		.2byte	0x7
 3454 0373 73       		.byte	0x73
 3455 0374 7B       		.sleb128 -5
 3456 0375 94       		.byte	0x94
 3457 0376 01       		.byte	0x1
 3458 0377 33       		.byte	0x33
 3459 0378 1A       		.byte	0x1a
 3460 0379 9F       		.byte	0x9f
 3461 037a CC000000 		.4byte	.LVL45
 3462 037e D8000000 		.4byte	.LVL46
 3463 0382 0100     		.2byte	0x1
 3464 0384 56       		.byte	0x56
 3465 0385 D8000000 		.4byte	.LVL46
 3466 0389 F0000000 		.4byte	.LVL47
 3467 038d 0700     		.2byte	0x7
 3468 038f 73       		.byte	0x73
 3469 0390 7B       		.sleb128 -5
 3470 0391 94       		.byte	0x94
 3471 0392 01       		.byte	0x1
 3472 0393 33       		.byte	0x33
 3473 0394 1A       		.byte	0x1a
 3474 0395 9F       		.byte	0x9f
 3475 0396 00000000 		.4byte	0
 3476 039a 00000000 		.4byte	0
 3477              	.LLST22:
 3478 039e 44000000 		.4byte	.LVL36
 3479 03a2 02010000 		.4byte	.LVL51
 3480 03a6 0200     		.2byte	0x2
 3481 03a8 70       		.byte	0x70
 3482 03a9 04       		.sleb128 4
 3483 03aa 00000000 		.4byte	0
 3484 03ae 00000000 		.4byte	0
 3485              	.LLST23:
 3486 03b2 00000000 		.4byte	.LVL32
 3487 03b6 30010000 		.4byte	.LVL56
 3488 03ba 0200     		.2byte	0x2
 3489 03bc 30       		.byte	0x30
 3490 03bd 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 86


 3491 03be 44010000 		.4byte	.LVL57
 3492 03c2 4D010000 		.4byte	.LVL58-1
 3493 03c6 0100     		.2byte	0x1
 3494 03c8 52       		.byte	0x52
 3495 03c9 4E010000 		.4byte	.LVL58
 3496 03cd 68010000 		.4byte	.LFE2
 3497 03d1 0200     		.2byte	0x2
 3498 03d3 30       		.byte	0x30
 3499 03d4 9F       		.byte	0x9f
 3500 03d5 00000000 		.4byte	0
 3501 03d9 00000000 		.4byte	0
 3502              	.LLST24:
 3503 03dd 44000000 		.4byte	.LVL36
 3504 03e1 64000000 		.4byte	.LVL39
 3505 03e5 0100     		.2byte	0x1
 3506 03e7 50       		.byte	0x50
 3507 03e8 64000000 		.4byte	.LVL39
 3508 03ec 02010000 		.4byte	.LVL51
 3509 03f0 0300     		.2byte	0x3
 3510 03f2 70       		.byte	0x70
 3511 03f3 08       		.sleb128 8
 3512 03f4 9F       		.byte	0x9f
 3513 03f5 00000000 		.4byte	0
 3514 03f9 00000000 		.4byte	0
 3515              	.LLST25:
 3516 03fd 66000000 		.4byte	.LVL40
 3517 0401 6C000000 		.4byte	.LVL42
 3518 0405 0200     		.2byte	0x2
 3519 0407 70       		.byte	0x70
 3520 0408 0C       		.sleb128 12
 3521 0409 FE000000 		.4byte	.LVL50
 3522 040d 02010000 		.4byte	.LVL51
 3523 0411 0200     		.2byte	0x2
 3524 0413 70       		.byte	0x70
 3525 0414 0C       		.sleb128 12
 3526 0415 00000000 		.4byte	0
 3527 0419 00000000 		.4byte	0
 3528              	.LLST26:
 3529 041d 00000000 		.4byte	.LVL59
 3530 0421 04000000 		.4byte	.LVL60
 3531 0425 0100     		.2byte	0x1
 3532 0427 50       		.byte	0x50
 3533 0428 04000000 		.4byte	.LVL60
 3534 042c 18000000 		.4byte	.LVL63
 3535 0430 0100     		.2byte	0x1
 3536 0432 50       		.byte	0x50
 3537 0433 00000000 		.4byte	0
 3538 0437 00000000 		.4byte	0
 3539              	.LLST27:
 3540 043b 08000000 		.4byte	.LVL61
 3541 043f 14000000 		.4byte	.LVL62
 3542 0443 0500     		.2byte	0x5
 3543 0445 71       		.byte	0x71
 3544 0446 00       		.sleb128 0
 3545 0447 34       		.byte	0x34
 3546 0448 24       		.byte	0x24
 3547 0449 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 87


 3548 044a 14000000 		.4byte	.LVL62
 3549 044e 18000000 		.4byte	.LVL63
 3550 0452 0500     		.2byte	0x5
 3551 0454 70       		.byte	0x70
 3552 0455 7F       		.sleb128 -1
 3553 0456 34       		.byte	0x34
 3554 0457 24       		.byte	0x24
 3555 0458 9F       		.byte	0x9f
 3556 0459 00000000 		.4byte	0
 3557 045d 00000000 		.4byte	0
 3558              	.LLST28:
 3559 0461 08000000 		.4byte	.LVL65
 3560 0465 1E000000 		.4byte	.LVL68
 3561 0469 0100     		.2byte	0x1
 3562 046b 51       		.byte	0x51
 3563 046c 46000000 		.4byte	.LVL69
 3564 0470 58000000 		.4byte	.LFE8
 3565 0474 0100     		.2byte	0x1
 3566 0476 51       		.byte	0x51
 3567 0477 00000000 		.4byte	0
 3568 047b 00000000 		.4byte	0
 3569              	.LLST29:
 3570 047f 0C000000 		.4byte	.LVL66
 3571 0483 18000000 		.4byte	.LVL67
 3572 0487 0500     		.2byte	0x5
 3573 0489 70       		.byte	0x70
 3574 048a 00       		.sleb128 0
 3575 048b 34       		.byte	0x34
 3576 048c 24       		.byte	0x24
 3577 048d 9F       		.byte	0x9f
 3578 048e 18000000 		.4byte	.LVL67
 3579 0492 1E000000 		.4byte	.LVL68
 3580 0496 0500     		.2byte	0x5
 3581 0498 71       		.byte	0x71
 3582 0499 7F       		.sleb128 -1
 3583 049a 34       		.byte	0x34
 3584 049b 24       		.byte	0x24
 3585 049c 9F       		.byte	0x9f
 3586 049d 46000000 		.4byte	.LVL69
 3587 04a1 48000000 		.4byte	.LVL70
 3588 04a5 0500     		.2byte	0x5
 3589 04a7 70       		.byte	0x70
 3590 04a8 00       		.sleb128 0
 3591 04a9 34       		.byte	0x34
 3592 04aa 24       		.byte	0x24
 3593 04ab 9F       		.byte	0x9f
 3594 04ac 48000000 		.4byte	.LVL70
 3595 04b0 58000000 		.4byte	.LFE8
 3596 04b4 0500     		.2byte	0x5
 3597 04b6 72       		.byte	0x72
 3598 04b7 00       		.sleb128 0
 3599 04b8 34       		.byte	0x34
 3600 04b9 24       		.byte	0x24
 3601 04ba 9F       		.byte	0x9f
 3602 04bb 00000000 		.4byte	0
 3603 04bf 00000000 		.4byte	0
 3604              	.LLST30:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 88


 3605 04c3 00000000 		.4byte	.LFB9
 3606 04c7 02000000 		.4byte	.LCFI4
 3607 04cb 0200     		.2byte	0x2
 3608 04cd 7D       		.byte	0x7d
 3609 04ce 00       		.sleb128 0
 3610 04cf 02000000 		.4byte	.LCFI4
 3611 04d3 7C000000 		.4byte	.LFE9
 3612 04d7 0200     		.2byte	0x2
 3613 04d9 7D       		.byte	0x7d
 3614 04da 08       		.sleb128 8
 3615 04db 00000000 		.4byte	0
 3616 04df 00000000 		.4byte	0
 3617              	.LLST31:
 3618 04e3 0A000000 		.4byte	.LVL72
 3619 04e7 1A000000 		.4byte	.LVL74
 3620 04eb 0100     		.2byte	0x1
 3621 04ed 53       		.byte	0x53
 3622 04ee 68000000 		.4byte	.LVL76
 3623 04f2 7C000000 		.4byte	.LFE9
 3624 04f6 0100     		.2byte	0x1
 3625 04f8 53       		.byte	0x53
 3626 04f9 00000000 		.4byte	0
 3627 04fd 00000000 		.4byte	0
 3628              	.LLST32:
 3629 0501 0E000000 		.4byte	.LVL73
 3630 0505 1E000000 		.4byte	.LVL75
 3631 0509 0500     		.2byte	0x5
 3632 050b 72       		.byte	0x72
 3633 050c 00       		.sleb128 0
 3634 050d 34       		.byte	0x34
 3635 050e 24       		.byte	0x24
 3636 050f 9F       		.byte	0x9f
 3637 0510 68000000 		.4byte	.LVL76
 3638 0514 7C000000 		.4byte	.LFE9
 3639 0518 0500     		.2byte	0x5
 3640 051a 72       		.byte	0x72
 3641 051b 00       		.sleb128 0
 3642 051c 34       		.byte	0x34
 3643 051d 24       		.byte	0x24
 3644 051e 9F       		.byte	0x9f
 3645 051f 00000000 		.4byte	0
 3646 0523 00000000 		.4byte	0
 3647              	.LLST33:
 3648 0527 00000000 		.4byte	.LFB10
 3649 052b 02000000 		.4byte	.LCFI5
 3650 052f 0200     		.2byte	0x2
 3651 0531 7D       		.byte	0x7d
 3652 0532 00       		.sleb128 0
 3653 0533 02000000 		.4byte	.LCFI5
 3654 0537 48000000 		.4byte	.LFE10
 3655 053b 0200     		.2byte	0x2
 3656 053d 7D       		.byte	0x7d
 3657 053e 08       		.sleb128 8
 3658 053f 00000000 		.4byte	0
 3659 0543 00000000 		.4byte	0
 3660              	.LLST34:
 3661 0547 00000000 		.4byte	.LVL77
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 89


 3662 054b 30000000 		.4byte	.LVL84
 3663 054f 0200     		.2byte	0x2
 3664 0551 31       		.byte	0x31
 3665 0552 9F       		.byte	0x9f
 3666 0553 30000000 		.4byte	.LVL84
 3667 0557 48000000 		.4byte	.LFE10
 3668 055b 0100     		.2byte	0x1
 3669 055d 50       		.byte	0x50
 3670 055e 00000000 		.4byte	0
 3671 0562 00000000 		.4byte	0
 3672              	.LLST35:
 3673 0566 12000000 		.4byte	.LVL79
 3674 056a 16000000 		.4byte	.LVL80
 3675 056e 0100     		.2byte	0x1
 3676 0570 50       		.byte	0x50
 3677 0571 00000000 		.4byte	0
 3678 0575 00000000 		.4byte	0
 3679              	.LLST36:
 3680 0579 12000000 		.4byte	.LVL79
 3681 057d 16000000 		.4byte	.LVL80
 3682 0581 0500     		.2byte	0x5
 3683 0583 70       		.byte	0x70
 3684 0584 04       		.sleb128 4
 3685 0585 06       		.byte	0x6
 3686 0586 23       		.byte	0x23
 3687 0587 04       		.uleb128 0x4
 3688 0588 16000000 		.4byte	.LVL80
 3689 058c 1E000000 		.4byte	.LVL81
 3690 0590 0200     		.2byte	0x2
 3691 0592 73       		.byte	0x73
 3692 0593 04       		.sleb128 4
 3693 0594 1E000000 		.4byte	.LVL81
 3694 0598 24000000 		.4byte	.LVL82
 3695 059c 0100     		.2byte	0x1
 3696 059e 50       		.byte	0x50
 3697 059f 2E000000 		.4byte	.LVL83
 3698 05a3 48000000 		.4byte	.LFE10
 3699 05a7 0200     		.2byte	0x2
 3700 05a9 73       		.byte	0x73
 3701 05aa 04       		.sleb128 4
 3702 05ab 00000000 		.4byte	0
 3703 05af 00000000 		.4byte	0
 3704              	.LLST37:
 3705 05b3 00000000 		.4byte	.LFB0
 3706 05b7 02000000 		.4byte	.LCFI6
 3707 05bb 0200     		.2byte	0x2
 3708 05bd 7D       		.byte	0x7d
 3709 05be 00       		.sleb128 0
 3710 05bf 02000000 		.4byte	.LCFI6
 3711 05c3 74020000 		.4byte	.LFE0
 3712 05c7 0200     		.2byte	0x2
 3713 05c9 7D       		.byte	0x7d
 3714 05ca 08       		.sleb128 8
 3715 05cb 00000000 		.4byte	0
 3716 05cf 00000000 		.4byte	0
 3717              	.LLST38:
 3718 05d3 00000000 		.4byte	.LVL85
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 90


 3719 05d7 62020000 		.4byte	.LVL111
 3720 05db 0200     		.2byte	0x2
 3721 05dd 30       		.byte	0x30
 3722 05de 9F       		.byte	0x9f
 3723 05df 00000000 		.4byte	0
 3724 05e3 00000000 		.4byte	0
 3725              	.LLST39:
 3726 05e7 78010000 		.4byte	.LVL102
 3727 05eb 8E010000 		.4byte	.LVL104
 3728 05ef 0100     		.2byte	0x1
 3729 05f1 54       		.byte	0x54
 3730 05f2 00000000 		.4byte	0
 3731 05f6 00000000 		.4byte	0
 3732              	.LLST40:
 3733 05fa 00000000 		.4byte	.LVL85
 3734 05fe 78000000 		.4byte	.LVL88
 3735 0602 0200     		.2byte	0x2
 3736 0604 30       		.byte	0x30
 3737 0605 9F       		.byte	0x9f
 3738 0606 80000000 		.4byte	.LVL89
 3739 060a 8A000000 		.4byte	.LVL90
 3740 060e 0200     		.2byte	0x2
 3741 0610 30       		.byte	0x30
 3742 0611 9F       		.byte	0x9f
 3743 0612 8A000000 		.4byte	.LVL90
 3744 0616 A6000000 		.4byte	.LVL92
 3745 061a 0100     		.2byte	0x1
 3746 061c 53       		.byte	0x53
 3747 061d A8000000 		.4byte	.LVL93
 3748 0621 CA000000 		.4byte	.LVL98
 3749 0625 0100     		.2byte	0x1
 3750 0627 53       		.byte	0x53
 3751 0628 CA000000 		.4byte	.LVL98
 3752 062c 62020000 		.4byte	.LVL111
 3753 0630 0200     		.2byte	0x2
 3754 0632 30       		.byte	0x30
 3755 0633 9F       		.byte	0x9f
 3756 0634 00000000 		.4byte	0
 3757 0638 00000000 		.4byte	0
 3758              	.LLST41:
 3759 063c 8A000000 		.4byte	.LVL90
 3760 0640 94000000 		.4byte	.LVL91
 3761 0644 0100     		.2byte	0x1
 3762 0646 52       		.byte	0x52
 3763 0647 A8000000 		.4byte	.LVL93
 3764 064b B6000000 		.4byte	.LVL96
 3765 064f 0100     		.2byte	0x1
 3766 0651 52       		.byte	0x52
 3767 0652 B6000000 		.4byte	.LVL96
 3768 0656 B8000000 		.4byte	.LVL97
 3769 065a 0100     		.2byte	0x1
 3770 065c 50       		.byte	0x50
 3771 065d 00000000 		.4byte	0
 3772 0661 00000000 		.4byte	0
 3773              	.LLST42:
 3774 0665 B0000000 		.4byte	.LVL94
 3775 0669 B8000000 		.4byte	.LVL97
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 91


 3776 066d 0100     		.2byte	0x1
 3777 066f 51       		.byte	0x51
 3778 0670 00000000 		.4byte	0
 3779 0674 00000000 		.4byte	0
 3780              	.LLST43:
 3781 0678 64000000 		.4byte	.LVL86
 3782 067c 68000000 		.4byte	.LVL87
 3783 0680 0100     		.2byte	0x1
 3784 0682 50       		.byte	0x50
 3785 0683 00000000 		.4byte	0
 3786 0687 00000000 		.4byte	0
 3787              		.section	.debug_aranges,"",%progbits
 3788 0000 6C000000 		.4byte	0x6c
 3789 0004 0200     		.2byte	0x2
 3790 0006 00000000 		.4byte	.Ldebug_info0
 3791 000a 04       		.byte	0x4
 3792 000b 00       		.byte	0
 3793 000c 0000     		.2byte	0
 3794 000e 0000     		.2byte	0
 3795 0010 00000000 		.4byte	.LFB1
 3796 0014 B4000000 		.4byte	.LFE1-.LFB1
 3797 0018 00000000 		.4byte	.LFB4
 3798 001c 1C000000 		.4byte	.LFE4-.LFB4
 3799 0020 00000000 		.4byte	.LFB3
 3800 0024 28010000 		.4byte	.LFE3-.LFB3
 3801 0028 00000000 		.4byte	.LFB5
 3802 002c 18000000 		.4byte	.LFE5-.LFB5
 3803 0030 00000000 		.4byte	.LFB6
 3804 0034 20000000 		.4byte	.LFE6-.LFB6
 3805 0038 00000000 		.4byte	.LFB2
 3806 003c 68010000 		.4byte	.LFE2-.LFB2
 3807 0040 00000000 		.4byte	.LFB7
 3808 0044 40000000 		.4byte	.LFE7-.LFB7
 3809 0048 00000000 		.4byte	.LFB8
 3810 004c 58000000 		.4byte	.LFE8-.LFB8
 3811 0050 00000000 		.4byte	.LFB9
 3812 0054 7C000000 		.4byte	.LFE9-.LFB9
 3813 0058 00000000 		.4byte	.LFB10
 3814 005c 48000000 		.4byte	.LFE10-.LFB10
 3815 0060 00000000 		.4byte	.LFB0
 3816 0064 74020000 		.4byte	.LFE0-.LFB0
 3817 0068 00000000 		.4byte	0
 3818 006c 00000000 		.4byte	0
 3819              		.section	.debug_ranges,"",%progbits
 3820              	.Ldebug_ranges0:
 3821 0000 00000000 		.4byte	.LFB1
 3822 0004 B4000000 		.4byte	.LFE1
 3823 0008 00000000 		.4byte	.LFB4
 3824 000c 1C000000 		.4byte	.LFE4
 3825 0010 00000000 		.4byte	.LFB3
 3826 0014 28010000 		.4byte	.LFE3
 3827 0018 00000000 		.4byte	.LFB5
 3828 001c 18000000 		.4byte	.LFE5
 3829 0020 00000000 		.4byte	.LFB6
 3830 0024 20000000 		.4byte	.LFE6
 3831 0028 00000000 		.4byte	.LFB2
 3832 002c 68010000 		.4byte	.LFE2
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 92


 3833 0030 00000000 		.4byte	.LFB7
 3834 0034 40000000 		.4byte	.LFE7
 3835 0038 00000000 		.4byte	.LFB8
 3836 003c 58000000 		.4byte	.LFE8
 3837 0040 00000000 		.4byte	.LFB9
 3838 0044 7C000000 		.4byte	.LFE9
 3839 0048 00000000 		.4byte	.LFB10
 3840 004c 48000000 		.4byte	.LFE10
 3841 0050 00000000 		.4byte	.LFB0
 3842 0054 74020000 		.4byte	.LFE0
 3843 0058 00000000 		.4byte	0
 3844 005c 00000000 		.4byte	0
 3845              		.section	.debug_line,"",%progbits
 3846              	.Ldebug_line0:
 3847 0000 5C030000 		.section	.debug_str,"MS",%progbits,1
 3847      02006200 
 3847      00000201 
 3847      FB0E0D00 
 3847      01010101 
 3848              	.LASF35:
 3849 0000 70537461 		.ascii	"pStatusBlock\000"
 3849      74757342 
 3849      6C6F636B 
 3849      00
 3850              	.LASF33:
 3851 000d 636F756E 		.ascii	"count\000"
 3851      7400
 3852              	.LASF10:
 3853 0013 75696E74 		.ascii	"uint16\000"
 3853      313600
 3854              	.LASF51:
 3855 001a 55534246 		.ascii	"USBFS_TerminateEP\000"
 3855      535F5465 
 3855      726D696E 
 3855      61746545 
 3855      5000
 3856              	.LASF78:
 3857 002c 55534246 		.ascii	"USBFS_currentTD\000"
 3857      535F6375 
 3857      7272656E 
 3857      74544400 
 3858              	.LASF81:
 3859 003c 55534246 		.ascii	"USBFS_InitControlRead\000"
 3859      535F496E 
 3859      6974436F 
 3859      6E74726F 
 3859      6C526561 
 3860              	.LASF7:
 3861 0052 6C6F6E67 		.ascii	"long long unsigned int\000"
 3861      206C6F6E 
 3861      6720756E 
 3861      7369676E 
 3861      65642069 
 3862              	.LASF20:
 3863 0069 61646472 		.ascii	"addr\000"
 3863      00
 3864              	.LASF58:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 93


 3865 006e 696E7465 		.ascii	"interfaceNumber\000"
 3865      72666163 
 3865      654E756D 
 3865      62657200 
 3866              	.LASF62:
 3867 007e 55534246 		.ascii	"USBFS_tBuffer\000"
 3867      535F7442 
 3867      75666665 
 3867      7200
 3868              	.LASF6:
 3869 008c 6C6F6E67 		.ascii	"long long int\000"
 3869      206C6F6E 
 3869      6720696E 
 3869      7400
 3870              	.LASF0:
 3871 009a 7369676E 		.ascii	"signed char\000"
 3871      65642063 
 3871      68617200 
 3872              	.LASF48:
 3873 00a6 636C6561 		.ascii	"clearAltSetting\000"
 3873      72416C74 
 3873      53657474 
 3873      696E6700 
 3874              	.LASF74:
 3875 00b6 55534246 		.ascii	"USBFS_deviceAddress\000"
 3875      535F6465 
 3875      76696365 
 3875      41646472 
 3875      65737300 
 3876              	.LASF54:
 3877 00ca 55534246 		.ascii	"USBFS_ClearEndpointHalt\000"
 3877      535F436C 
 3877      65617245 
 3877      6E64706F 
 3877      696E7448 
 3878              	.LASF71:
 3879 00e2 55534246 		.ascii	"USBFS_interfaceNumber\000"
 3879      535F696E 
 3879      74657266 
 3879      6163654E 
 3879      756D6265 
 3880              	.LASF47:
 3881 00f8 55534246 		.ascii	"USBFS_Config\000"
 3881      535F436F 
 3881      6E666967 
 3881      00
 3882              	.LASF40:
 3883 0105 55534246 		.ascii	"USBFS_ConfigReg\000"
 3883      535F436F 
 3883      6E666967 
 3883      52656700 
 3884              	.LASF4:
 3885 0115 6C6F6E67 		.ascii	"long int\000"
 3885      20696E74 
 3885      00
 3886              	.LASF9:
 3887 011e 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 94


 3887      3800
 3888              	.LASF19:
 3889 0124 6570546F 		.ascii	"epToggle\000"
 3889      67676C65 
 3889      00
 3890              	.LASF12:
 3891 012d 646F7562 		.ascii	"double\000"
 3891      6C6500
 3892              	.LASF29:
 3893 0134 545F5553 		.ascii	"T_USBFS_EP_SETTINGS_BLOCK\000"
 3893      4246535F 
 3893      45505F53 
 3893      45545449 
 3893      4E47535F 
 3894              	.LASF52:
 3895 014e 55534246 		.ascii	"USBFS_SetEndpointHalt\000"
 3895      535F5365 
 3895      74456E64 
 3895      706F696E 
 3895      7448616C 
 3896              	.LASF34:
 3897 0164 70446174 		.ascii	"pData\000"
 3897      6100
 3898              	.LASF85:
 3899 016a 573A5C53 		.ascii	"W:\\SCSI2SD\\USB_Bootloader.cydsn\000"
 3899      43534932 
 3899      53445C55 
 3899      53425F42 
 3899      6F6F746C 
 3900              	.LASF64:
 3901 018a 55534246 		.ascii	"USBFS_configuration\000"
 3901      535F636F 
 3901      6E666967 
 3901      75726174 
 3901      696F6E00 
 3902              	.LASF21:
 3903 019e 65704D6F 		.ascii	"epMode\000"
 3903      646500
 3904              	.LASF8:
 3905 01a5 756E7369 		.ascii	"unsigned int\000"
 3905      676E6564 
 3905      20696E74 
 3905      00
 3906              	.LASF5:
 3907 01b2 6C6F6E67 		.ascii	"long unsigned int\000"
 3907      20756E73 
 3907      69676E65 
 3907      6420696E 
 3907      7400
 3908              	.LASF45:
 3909 01c4 55534246 		.ascii	"USBFS_GetInterfaceClassTablePtr\000"
 3909      535F4765 
 3909      74496E74 
 3909      65726661 
 3909      6365436C 
 3910              	.LASF3:
 3911 01e4 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 95


 3911      7420756E 
 3911      7369676E 
 3911      65642069 
 3911      6E7400
 3912              	.LASF49:
 3913 01f7 70446573 		.ascii	"pDescr\000"
 3913      637200
 3914              	.LASF24:
 3915 01fe 696E7465 		.ascii	"interface\000"
 3915      72666163 
 3915      6500
 3916              	.LASF55:
 3917 0208 55534246 		.ascii	"USBFS_ValidateAlternateSetting\000"
 3917      535F5661 
 3917      6C696461 
 3917      7465416C 
 3917      7465726E 
 3918              	.LASF65:
 3919 0227 55534246 		.ascii	"USBFS_configurationChanged\000"
 3919      535F636F 
 3919      6E666967 
 3919      75726174 
 3919      696F6E43 
 3920              	.LASF76:
 3921 0242 55534246 		.ascii	"USBFS_interfaceClass\000"
 3921      535F696E 
 3921      74657266 
 3921      61636543 
 3921      6C617373 
 3922              	.LASF70:
 3923 0257 55534246 		.ascii	"USBFS_STRING_DESCRIPTORS\000"
 3923      535F5354 
 3923      52494E47 
 3923      5F444553 
 3923      43524950 
 3924              	.LASF18:
 3925 0270 68774570 		.ascii	"hwEpState\000"
 3925      53746174 
 3925      6500
 3926              	.LASF61:
 3927 027a 64657363 		.ascii	"descrLength\000"
 3927      724C656E 
 3927      67746800 
 3928              	.LASF15:
 3929 0286 73697A65 		.ascii	"sizetype\000"
 3929      74797065 
 3929      00
 3930              	.LASF39:
 3931 028f 70546D70 		.ascii	"pTmp\000"
 3931      00
 3932              	.LASF37:
 3933 0294 705F6C69 		.ascii	"p_list\000"
 3933      737400
 3934              	.LASF50:
 3935 029b 62756666 		.ascii	"buffCount\000"
 3935      436F756E 
 3935      7400
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 96


 3936              	.LASF16:
 3937 02a5 61747472 		.ascii	"attrib\000"
 3937      696200
 3938              	.LASF68:
 3939 02ac 55534246 		.ascii	"USBFS_TABLE\000"
 3939      535F5441 
 3939      424C4500 
 3940              	.LASF69:
 3941 02b8 55534246 		.ascii	"USBFS_SN_STRING_DESCRIPTOR\000"
 3941      535F534E 
 3941      5F535452 
 3941      494E475F 
 3941      44455343 
 3942              	.LASF46:
 3943 02d3 63757272 		.ascii	"currentInterfacesNum\000"
 3943      656E7449 
 3943      6E746572 
 3943      66616365 
 3943      734E756D 
 3944              	.LASF41:
 3945 02e8 55534246 		.ascii	"USBFS_ConfigAltChanged\000"
 3945      535F436F 
 3945      6E666967 
 3945      416C7443 
 3945      68616E67 
 3946              	.LASF32:
 3947 02ff 545F5553 		.ascii	"T_USBFS_XFER_STATUS_BLOCK\000"
 3947      4246535F 
 3947      58464552 
 3947      5F535441 
 3947      5455535F 
 3948              	.LASF56:
 3949 0319 696E7465 		.ascii	"interfaceNum\000"
 3949      72666163 
 3949      654E756D 
 3949      00
 3950              	.LASF67:
 3951 0326 55534246 		.ascii	"USBFS_DEVICE0_DESCR\000"
 3951      535F4445 
 3951      56494345 
 3951      305F4445 
 3951      53435200 
 3952              	.LASF11:
 3953 033a 666C6F61 		.ascii	"float\000"
 3953      7400
 3954              	.LASF17:
 3955 0340 61706945 		.ascii	"apiEpState\000"
 3955      70537461 
 3955      746500
 3956              	.LASF77:
 3957 034b 55534246 		.ascii	"USBFS_EP\000"
 3957      535F4550 
 3957      00
 3958              	.LASF59:
 3959 0354 70537472 		.ascii	"pStr\000"
 3959      00
 3960              	.LASF83:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 97


 3961 0359 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 3961      4320342E 
 3961      372E3320 
 3961      32303133 
 3961      30333132 
 3962 038c 616E6368 		.ascii	"anch revision 196615]\000"
 3962      20726576 
 3962      6973696F 
 3962      6E203139 
 3962      36363135 
 3963              	.LASF14:
 3964 03a2 72656738 		.ascii	"reg8\000"
 3964      00
 3965              	.LASF1:
 3966 03a7 756E7369 		.ascii	"unsigned char\000"
 3966      676E6564 
 3966      20636861 
 3966      7200
 3967              	.LASF2:
 3968 03b5 73686F72 		.ascii	"short int\000"
 3968      7420696E 
 3968      7400
 3969              	.LASF36:
 3970 03bf 545F5553 		.ascii	"T_USBFS_TD\000"
 3970      4246535F 
 3970      544400
 3971              	.LASF44:
 3972 03ca 55534246 		.ascii	"USBFS_GetConfigTablePtr\000"
 3972      535F4765 
 3972      74436F6E 
 3972      66696754 
 3972      61626C65 
 3973              	.LASF84:
 3974 03e2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_std.c\000"
 3974      6E657261 
 3974      7465645F 
 3974      536F7572 
 3974      63655C50 
 3975              	.LASF72:
 3976 0407 55534246 		.ascii	"USBFS_interfaceSetting\000"
 3976      535F696E 
 3976      74657266 
 3976      61636553 
 3976      65747469 
 3977              	.LASF25:
 3978 041e 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 3978      4246535F 
 3978      45505F43 
 3978      544C5F42 
 3978      4C4F434B 
 3979              	.LASF80:
 3980 0433 55534246 		.ascii	"USBFS_InitNoDataControlTransfer\000"
 3980      535F496E 
 3980      69744E6F 
 3980      44617461 
 3980      436F6E74 
 3981              	.LASF63:
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 98


 3982 0453 55534246 		.ascii	"USBFS_device\000"
 3982      535F6465 
 3982      76696365 
 3982      00
 3983              	.LASF27:
 3984 0460 61747472 		.ascii	"attributes\000"
 3984      69627574 
 3984      657300
 3985              	.LASF26:
 3986 046b 616C7453 		.ascii	"altSetting\000"
 3986      65747469 
 3986      6E6700
 3987              	.LASF13:
 3988 0476 63686172 		.ascii	"char\000"
 3988      00
 3989              	.LASF23:
 3990 047b 62756666 		.ascii	"bufferSize\000"
 3990      65725369 
 3990      7A6500
 3991              	.LASF53:
 3992 0486 72657175 		.ascii	"requestHandled\000"
 3992      65737448 
 3992      616E646C 
 3992      656400
 3993              	.LASF22:
 3994 0495 62756666 		.ascii	"buffOffset\000"
 3994      4F666673 
 3994      657400
 3995              	.LASF79:
 3996 04a0 55534246 		.ascii	"USBFS_GetDeviceTablePtr\000"
 3996      535F4765 
 3996      74446576 
 3996      69636554 
 3996      61626C65 
 3997              	.LASF66:
 3998 04b8 55534246 		.ascii	"USBFS_deviceStatus\000"
 3998      535F6465 
 3998      76696365 
 3998      53746174 
 3998      757300
 3999              	.LASF73:
 4000 04cb 55534246 		.ascii	"USBFS_interfaceSetting_last\000"
 4000      535F696E 
 4000      74657266 
 4000      61636553 
 4000      65747469 
 4001              	.LASF31:
 4002 04e7 6C656E67 		.ascii	"length\000"
 4002      746800
 4003              	.LASF60:
 4004 04ee 6E537472 		.ascii	"nStr\000"
 4004      00
 4005              	.LASF43:
 4006 04f3 65705F74 		.ascii	"ep_type\000"
 4006      79706500 
 4007              	.LASF42:
 4008 04fb 6375725F 		.ascii	"cur_ep\000"
ARM GAS  C:\Users\MICHA_~1\AppData\Local\Temp\ccm5Lblu.s 			page 99


 4008      657000
 4009              	.LASF30:
 4010 0502 73746174 		.ascii	"status\000"
 4010      757300
 4011              	.LASF82:
 4012 0509 55534246 		.ascii	"USBFS_DispatchClassRqst\000"
 4012      535F4469 
 4012      73706174 
 4012      6368436C 
 4012      61737352 
 4013              	.LASF28:
 4014 0521 624D6973 		.ascii	"bMisc\000"
 4014      6300
 4015              	.LASF75:
 4016 0527 55534246 		.ascii	"USBFS_interfaceStatus\000"
 4016      535F696E 
 4016      74657266 
 4016      61636553 
 4016      74617475 
 4017              	.LASF57:
 4018 053d 55534246 		.ascii	"USBFS_HandleStandardRqst\000"
 4018      535F4861 
 4018      6E646C65 
 4018      5374616E 
 4018      64617264 
 4019              	.LASF38:
 4020 0556 545F5553 		.ascii	"T_USBFS_LUT\000"
 4020      4246535F 
 4020      4C555400 
 4021              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
